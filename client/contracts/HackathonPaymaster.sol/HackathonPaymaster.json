{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftPassAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_gasLimitPerOperation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_spendingLimitPerOperation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeLimitInSecond",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExceedingGasLimit",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasLimitPerOperation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftPassAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "name": "setEntryPoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newNftPassAddress",
          "type": "address"
        }
      ],
      "name": "setNftPassAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        }
      ],
      "name": "setWhiteAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spendingLimitPerOperation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeLimitInSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "whiteAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200120e3803806200120e833981016040819052620000349162000232565b85620000403362000093565b6200004b81620000e3565b50600280546001600160a01b0319166001600160a01b03871617905583516200007c90600390602087019062000170565b50600492909255600555600655506200034e915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000ed6200010f565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146200016e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b828054828255906000526020600020908101928215620001c8579160200282015b82811115620001c857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000191565b50620001d6929150620001da565b5090565b5b80821115620001d65760008155600101620001db565b6001600160a01b03811681146200020757600080fd5b50565b80516200021781620001f1565b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c087890312156200024c57600080fd5b86516200025981620001f1565b809650506020808801516200026e81620001f1565b60408901519096506001600160401b03808211156200028c57600080fd5b818a0191508a601f830112620002a157600080fd5b815181811115620002b657620002b66200021c565b8060051b604051601f19603f83011681018181108582111715620002de57620002de6200021c565b60405291825284820192508381018501918d831115620002fd57600080fd5b938501935b82851015620003265762000316856200020a565b8452938501939285019262000302565b809950505050505050606087015192506080870151915060a087015190509295509295509295565b610eb0806200035e6000396000f3fe60806040526004361061011f5760003560e01c8063b0d691fe116100a0578063d97e0ada11610064578063d97e0ada146102d5578063e17282db146102f5578063eb4bd0551461030b578063f2fde38b1461032b578063f465c77e1461034b57600080fd5b8063b0d691fe14610263578063bb9fe6bf14610283578063c23a5cea14610298578063c399ec88146102b8578063d0e30db0146102cd57600080fd5b8063715018a6116100e7578063715018a6146101da5780638c8e9379146101ef5780638da5cb5b14610205578063a0ac611b14610223578063a9a234091461024357600080fd5b80630396cb601461012457806318b9997b14610139578063205c287814610162578063584465f21461018257806366c00cca146101a2575b600080fd5b610137610132366004610a26565b610379565b005b34801561014557600080fd5b5061014f60045481565b6040519081526020015b60405180910390f35b34801561016e57600080fd5b5061013761017d366004610a68565b6103e8565b34801561018e57600080fd5b5061013761019d366004610a94565b61043e565b3480156101ae57600080fd5b506002546101c2906001600160a01b031681565b6040516001600160a01b039091168152602001610159565b3480156101e657600080fd5b50610137610468565b3480156101fb57600080fd5b5061014f60055481565b34801561021157600080fd5b506000546001600160a01b03166101c2565b34801561022f57600080fd5b506101c261023e366004610ab1565b61047c565b34801561024f57600080fd5b5061013761025e366004610aca565b6104a6565b34801561026f57600080fd5b506001546101c2906001600160a01b031681565b34801561028f57600080fd5b506101376104c0565b3480156102a457600080fd5b506101376102b3366004610a94565b61052c565b3480156102c457600080fd5b5061014f610596565b610137610608565b3480156102e157600080fd5b506101376102f0366004610a94565b61064e565b34801561030157600080fd5b5061014f60065481565b34801561031757600080fd5b50610137610326366004610ba0565b610678565b34801561033757600080fd5b50610137610346366004610a94565b610697565b34801561035757600080fd5b5061036b610366366004610c52565b610715565b604051610159929190610ca6565b61038161084a565b600154604051621cb65b60e51b815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b1580156103cc57600080fd5b505af11580156103e0573d6000803e3d6000fd5b505050505050565b6103f061084a565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b1580156103cc57600080fd5b61044661084a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61047061084a565b61047a60006108a4565b565b6003818154811061048c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6104ae6108f4565b6104ba8484848461090b565b50505050565b6104c861084a565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561051857600080fd5b505af11580156104ba573d6000803e3d6000fd5b61053461084a565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106039190610cfb565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561057b57600080fd5b61065661084a565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61068061084a565b80516106939060039060208401906109ac565b5050565b61069f61084a565b6001600160a01b0381166107095760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610712816108a4565b50565b6060600080808061072888860189610d14565b610736916004908290610d62565b8101906107439190610d8c565b92509250925061075283610943565b610775576001604051806020016040528060008152509094509450505050610842565b6002546001600160a01b03166000816370a0823161079660208d018d610a94565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190610cfb565b905080156108275760006040518060200160405280600081525090965096505050505050610842565b50506040805160208101909152600081529450600193505050505b935093915050565b6000546001600160a01b0316331461047a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610700565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461047a57600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b6044820152606401610700565b6000805b6003548110156109a357826001600160a01b03166003828154811061096e5761096e610e3d565b6000918252602090912001546001600160a01b0316036109915750600192915050565b8061099b81610e53565b915050610947565b50600092915050565b828054828255906000526020600020908101928215610a01579160200282015b82811115610a0157825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906109cc565b50610a0d929150610a11565b5090565b5b80821115610a0d5760008155600101610a12565b600060208284031215610a3857600080fd5b813563ffffffff81168114610a4c57600080fd5b9392505050565b6001600160a01b038116811461071257600080fd5b60008060408385031215610a7b57600080fd5b8235610a8681610a53565b946020939093013593505050565b600060208284031215610aa657600080fd5b8135610a4c81610a53565b600060208284031215610ac357600080fd5b5035919050565b60008060008060608587031215610ae057600080fd5b843560038110610aef57600080fd5b9350602085013567ffffffffffffffff80821115610b0c57600080fd5b818701915087601f830112610b2057600080fd5b813581811115610b2f57600080fd5b886020828501011115610b4157600080fd5b95986020929092019750949560400135945092505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b9857610b98610b59565b604052919050565b60006020808385031215610bb357600080fd5b823567ffffffffffffffff80821115610bcb57600080fd5b818501915085601f830112610bdf57600080fd5b813581811115610bf157610bf1610b59565b8060051b9150610c02848301610b6f565b8181529183018401918481019088841115610c1c57600080fd5b938501935b83851015610c465784359250610c3683610a53565b8282529385019390850190610c21565b98975050505050505050565b600080600060608486031215610c6757600080fd5b833567ffffffffffffffff811115610c7e57600080fd5b84016101608187031215610c9157600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610cd45760208187018101516060868401015201610cb7565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610d0d57600080fd5b5051919050565b6000808335601e19843603018112610d2b57600080fd5b83018035915067ffffffffffffffff821115610d4657600080fd5b602001915036819003821315610d5b57600080fd5b9250929050565b60008085851115610d7257600080fd5b83861115610d7f57600080fd5b5050820193919092039150565b600080600060608486031215610da157600080fd5b8335610dac81610a53565b92506020848101359250604085013567ffffffffffffffff80821115610dd157600080fd5b818701915087601f830112610de557600080fd5b813581811115610df757610df7610b59565b610e09601f8201601f19168501610b6f565b91508082528884828501011115610e1f57600080fd5b80848401858401376000848284010152508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b600060018201610e7357634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220fb03d9fbce45ccad688da28ef35b3002c3c96c19203ebb30c3dcf63befbe673f64736f6c63430008130033",
    "sourceMap": "303:3727:70:-:0;;;631:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;884:11;936:32:40;719:10:54;936:18:40;:32::i;:::-;528:26:8;542:11;528:13;:26::i;:::-;-1:-1:-1;907:14:70::1;:32:::0;;-1:-1:-1;;;;;;907:32:70::1;-1:-1:-1::0;;;;;907:32:70;::::1;;::::0;;949:26;;::::1;::::0;:14:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;985:20:70::1;:44:::0;;;;1039:25:::1;:54:::0;1103:17:::1;:38:::0;-1:-1:-1;303:3727:70;;-1:-1:-1;;303:3727:70;2433:187:40;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:40;;;-1:-1:-1;;;;;;2541:17:40;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;567:106:8:-;1094:13:40;:11;:13::i;:::-;642:10:8::1;:24:::0;;-1:-1:-1;;;;;;642:24:8::1;-1:-1:-1::0;;;;;642:24:8;;;::::1;::::0;;;::::1;::::0;;567:106::o;1359:130:40:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:40;719:10:54;1422:23:40;1414:68;;;;-1:-1:-1;;;1414:68:40;;2281:2:74;1414:68:40;;;2263:21:74;;;2300:18;;;2293:30;2359:34;2339:18;;;2332:62;2411:18;;1414:68:40;;;;;;;;1359:130::o;303:3727:70:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;303:3727:70;-1:-1:-1;;;;;303:3727:70;;;;;;;;;;;-1:-1:-1;303:3727:70;;;;;;;-1:-1:-1;303:3727:70;;;-1:-1:-1;303:3727:70;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:144:74;-1:-1:-1;;;;;102:31:74;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:151::-;242:13;;264:44;242:13;264:44;:::i;:::-;163:151;;;:::o;319:127::-;380:10;375:3;371:20;368:1;361:31;411:4;408:1;401:15;435:4;432:1;425:15;451:1623;611:6;619;627;635;643;651;704:3;692:9;683:7;679:23;675:33;672:53;;;721:1;718;711:12;672:53;753:9;747:16;772:44;810:5;772:44;:::i;:::-;835:5;825:15;;;859:2;906;895:9;891:18;885:25;919:46;957:7;919:46;:::i;:::-;1035:2;1020:18;;1014:25;984:7;;-1:-1:-1;;;;;;1088:14:74;;;1085:34;;;1115:1;1112;1105:12;1085:34;1153:6;1142:9;1138:22;1128:32;;1198:7;1191:4;1187:2;1183:13;1179:27;1169:55;;1220:1;1217;1210:12;1169:55;1249:2;1243:9;1271:2;1267;1264:10;1261:36;;;1277:18;;:::i;:::-;1323:2;1320:1;1316:10;1355:2;1349:9;1418:2;1414:7;1409:2;1405;1401:11;1397:25;1389:6;1385:38;1473:6;1461:10;1458:22;1453:2;1441:10;1438:18;1435:46;1432:72;;;1484:18;;:::i;:::-;1520:2;1513:22;1570:18;;;1604:15;;;;-1:-1:-1;1646:11:74;;;1642:20;;;1674:19;;;1671:39;;;1706:1;1703;1696:12;1671:39;1730:11;;;;1750:159;1766:6;1761:3;1758:15;1750:159;;;1832:34;1862:3;1832:34;:::i;:::-;1820:47;;1783:12;;;;1887;;;;1750:159;;;1928:6;1918:16;;;;;;;;1974:2;1963:9;1959:18;1953:25;1943:35;;2018:3;2007:9;2003:19;1997:26;1987:36;;2063:3;2052:9;2048:19;2042:26;2032:36;;451:1623;;;;;;;;:::o;2079:356::-;303:3727:70;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061011f5760003560e01c8063b0d691fe116100a0578063d97e0ada11610064578063d97e0ada146102d5578063e17282db146102f5578063eb4bd0551461030b578063f2fde38b1461032b578063f465c77e1461034b57600080fd5b8063b0d691fe14610263578063bb9fe6bf14610283578063c23a5cea14610298578063c399ec88146102b8578063d0e30db0146102cd57600080fd5b8063715018a6116100e7578063715018a6146101da5780638c8e9379146101ef5780638da5cb5b14610205578063a0ac611b14610223578063a9a234091461024357600080fd5b80630396cb601461012457806318b9997b14610139578063205c287814610162578063584465f21461018257806366c00cca146101a2575b600080fd5b610137610132366004610a26565b610379565b005b34801561014557600080fd5b5061014f60045481565b6040519081526020015b60405180910390f35b34801561016e57600080fd5b5061013761017d366004610a68565b6103e8565b34801561018e57600080fd5b5061013761019d366004610a94565b61043e565b3480156101ae57600080fd5b506002546101c2906001600160a01b031681565b6040516001600160a01b039091168152602001610159565b3480156101e657600080fd5b50610137610468565b3480156101fb57600080fd5b5061014f60055481565b34801561021157600080fd5b506000546001600160a01b03166101c2565b34801561022f57600080fd5b506101c261023e366004610ab1565b61047c565b34801561024f57600080fd5b5061013761025e366004610aca565b6104a6565b34801561026f57600080fd5b506001546101c2906001600160a01b031681565b34801561028f57600080fd5b506101376104c0565b3480156102a457600080fd5b506101376102b3366004610a94565b61052c565b3480156102c457600080fd5b5061014f610596565b610137610608565b3480156102e157600080fd5b506101376102f0366004610a94565b61064e565b34801561030157600080fd5b5061014f60065481565b34801561031757600080fd5b50610137610326366004610ba0565b610678565b34801561033757600080fd5b50610137610346366004610a94565b610697565b34801561035757600080fd5b5061036b610366366004610c52565b610715565b604051610159929190610ca6565b61038161084a565b600154604051621cb65b60e51b815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b1580156103cc57600080fd5b505af11580156103e0573d6000803e3d6000fd5b505050505050565b6103f061084a565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b1580156103cc57600080fd5b61044661084a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61047061084a565b61047a60006108a4565b565b6003818154811061048c57600080fd5b6000918252602090912001546001600160a01b0316905081565b6104ae6108f4565b6104ba8484848461090b565b50505050565b6104c861084a565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561051857600080fd5b505af11580156104ba573d6000803e3d6000fd5b61053461084a565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106039190610cfb565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561057b57600080fd5b61065661084a565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61068061084a565b80516106939060039060208401906109ac565b5050565b61069f61084a565b6001600160a01b0381166107095760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610712816108a4565b50565b6060600080808061072888860189610d14565b610736916004908290610d62565b8101906107439190610d8c565b92509250925061075283610943565b610775576001604051806020016040528060008152509094509450505050610842565b6002546001600160a01b03166000816370a0823161079660208d018d610a94565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190610cfb565b905080156108275760006040518060200160405280600081525090965096505050505050610842565b50506040805160208101909152600081529450600193505050505b935093915050565b6000546001600160a01b0316331461047a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610700565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461047a57600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b6044820152606401610700565b6000805b6003548110156109a357826001600160a01b03166003828154811061096e5761096e610e3d565b6000918252602090912001546001600160a01b0316036109915750600192915050565b8061099b81610e53565b915050610947565b50600092915050565b828054828255906000526020600020908101928215610a01579160200282015b82811115610a0157825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906109cc565b50610a0d929150610a11565b5090565b5b80821115610a0d5760008155600101610a12565b600060208284031215610a3857600080fd5b813563ffffffff81168114610a4c57600080fd5b9392505050565b6001600160a01b038116811461071257600080fd5b60008060408385031215610a7b57600080fd5b8235610a8681610a53565b946020939093013593505050565b600060208284031215610aa657600080fd5b8135610a4c81610a53565b600060208284031215610ac357600080fd5b5035919050565b60008060008060608587031215610ae057600080fd5b843560038110610aef57600080fd5b9350602085013567ffffffffffffffff80821115610b0c57600080fd5b818701915087601f830112610b2057600080fd5b813581811115610b2f57600080fd5b886020828501011115610b4157600080fd5b95986020929092019750949560400135945092505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b9857610b98610b59565b604052919050565b60006020808385031215610bb357600080fd5b823567ffffffffffffffff80821115610bcb57600080fd5b818501915085601f830112610bdf57600080fd5b813581811115610bf157610bf1610b59565b8060051b9150610c02848301610b6f565b8181529183018401918481019088841115610c1c57600080fd5b938501935b83851015610c465784359250610c3683610a53565b8282529385019390850190610c21565b98975050505050505050565b600080600060608486031215610c6757600080fd5b833567ffffffffffffffff811115610c7e57600080fd5b84016101608187031215610c9157600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610cd45760208187018101516060868401015201610cb7565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610d0d57600080fd5b5051919050565b6000808335601e19843603018112610d2b57600080fd5b83018035915067ffffffffffffffff821115610d4657600080fd5b602001915036819003821315610d5b57600080fd5b9250929050565b60008085851115610d7257600080fd5b83861115610d7f57600080fd5b5050820193919092039150565b600080600060608486031215610da157600080fd5b8335610dac81610a53565b92506020848101359250604085013567ffffffffffffffff80821115610dd157600080fd5b818701915087601f830112610de557600080fd5b813581811115610df757610df7610b59565b610e09601f8201601f19168501610b6f565b91508082528884828501011115610e1f57600080fd5b80848401858401376000848284010152508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b600060018201610e7357634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220fb03d9fbce45ccad688da28ef35b3002c3c96c19203ebb30c3dcf63befbe673f64736f6c63430008130033",
    "sourceMap": "303:3727:70:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2845:140:8;;;;;;:::i;:::-;;:::i;:::-;;505:35:70;;;;;;;;;;;;;;;;;;;441:25:74;;;429:2;414:18;505:35:70;;;;;;;;2471:149:8;;;;;;;;;;-1:-1:-1;2471:149:8;;;;;:::i;:::-;;:::i;567:106::-;;;;;;;;;;-1:-1:-1;567:106:8;;;;;:::i;:::-;;:::i;433:29:70:-;;;;;;;;;;-1:-1:-1;433:29:70;;;;-1:-1:-1;;;;;433:29:70;;;;;;-1:-1:-1;;;;;1401:32:74;;;1383:51;;1371:2;1356:18;433:29:70;1237:203:74;1831:101:40;;;;;;;;;;;;;:::i;546:40:70:-;;;;;;;;;;;;;;;;1201:85:40;;;;;;;;;;-1:-1:-1;1247:7:40;1273:6;-1:-1:-1;;;;;1273:6:40;1201:85;;468:31:70;;;;;;;;;;-1:-1:-1;468:31:70;;;;;:::i;:::-;;:::i;893:186:8:-;;;;;;;;;;-1:-1:-1;893:186:8;;;;;:::i;:::-;;:::i;445:29::-;;;;;;;;;;-1:-1:-1;445:29:8;;;;-1:-1:-1;;;;;445:29:8;;;3338:83;;;;;;;;;;;;;:::i;3640:133::-;;;;;;;;;;-1:-1:-1;3640:133:8;;;;;:::i;:::-;;:::i;3068:111::-;;;;;;;;;;;;;:::i;2225:104::-;;;:::i;1154:124:70:-;;;;;;;;;;-1:-1:-1;1154:124:70;;;;;:::i;:::-;;:::i;592:32::-;;;;;;;;;;;;;;;;1284:117;;;;;;;;;;-1:-1:-1;1284:117:70;;;;;:::i;:::-;;:::i;2081:198:40:-;;;;;;;;;;-1:-1:-1;2081:198:40;;;;;:::i;:::-;;:::i;1407:1225:70:-;;;;;;;;;;-1:-1:-1;1407:1225:70;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2845:140:8:-;1094:13:40;:11;:13::i;:::-;2924:10:8::1;::::0;:54:::1;::::0;-1:-1:-1;;;2924:54:8;;5970:10:74;5958:23;;2924:54:8::1;::::0;::::1;5940:42:74::0;-1:-1:-1;;;;;2924:10:8;;::::1;::::0;:19:::1;::::0;2951:9:::1;::::0;5913:18:74;;2924:54:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2845:140:::0;:::o;2471:149::-;1094:13:40;:11;:13::i;:::-;2567:10:8::1;::::0;:46:::1;::::0;-1:-1:-1;;;2567:46:8;;-1:-1:-1;;;;;6201:32:74;;;2567:46:8::1;::::0;::::1;6183:51:74::0;6250:18;;;6243:34;;;2567:10:8;;::::1;::::0;:21:::1;::::0;6156:18:74;;2567:46:8::1;;;;;;;;;;;;;;;;;::::0;::::1;567:106:::0;1094:13:40;:11;:13::i;:::-;642:10:8::1;:24:::0;;-1:-1:-1;;;;;;642:24:8::1;-1:-1:-1::0;;;;;642:24:8;;;::::1;::::0;;;::::1;::::0;;567:106::o;1831:101:40:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;468:31:70:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:31:70;;-1:-1:-1;468:31:70;:::o;893:186:8:-;1001:24;:22;:24::i;:::-;1035:37;1043:4;1049:7;;1058:13;1035:7;:37::i;:::-;893:186;;;;:::o;3338:83::-;1094:13:40;:11;:13::i;:::-;3390:10:8::1;;;;;;;;;-1:-1:-1::0;;;;;3390:10:8::1;-1:-1:-1::0;;;;;3390:22:8::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3640:133:::0;1094:13:40;:11;:13::i;:::-;3725:10:8::1;::::0;:41:::1;::::0;-1:-1:-1;;;3725:41:8;;-1:-1:-1;;;;;1401:32:74;;;3725:41:8::1;::::0;::::1;1383:51:74::0;3725:10:8;;::::1;::::0;:24:::1;::::0;1356:18:74;;3725:41:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3640:133:::0;:::o;3068:111::-;3137:10;;:35;;-1:-1:-1;;;3137:35:8;;3166:4;3137:35;;;1383:51:74;3111:7:8;;-1:-1:-1;;;;;3137:10:8;;:20;;1356:18:74;;3137:35:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3130:42;;3068:111;:::o;2225:104::-;2269:10;;:53;;-1:-1:-1;;;2269:53:8;;2316:4;2269:53;;;1383:51:74;-1:-1:-1;;;;;2269:10:8;;;;:20;;2297:9;;1356:18:74;;2269:53:8;;;;;;;;;;;;;;;;;;;1154:124:70;1094:13:40;:11;:13::i;:::-;1237:14:70::1;:34:::0;;-1:-1:-1;;;;;;1237:34:70::1;-1:-1:-1::0;;;;;1237:34:70;;;::::1;::::0;;;::::1;::::0;;1154:124::o;1284:117::-;1094:13:40;:11;:13::i;:::-;1368:26:70;;::::1;::::0;:14:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1284:117:::0;:::o;2081:198:40:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:40;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:40;;6903:2:74;2161:73:40::1;::::0;::::1;6885:21:74::0;6942:2;6922:18;;;6915:30;6981:34;6961:18;;;6954:62;-1:-1:-1;;;7032:18:74;;;7025:36;7078:19;;2161:73:40::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1407:1225:70:-;1572:20;1594:16;;;;1688:15;;;;:6;:15;:::i;:::-;:19;;1704:1;;1688:19;;;:::i;:::-;1677:58;;;;;;;:::i;:::-;1626:109;;;;;;1750:20;1765:4;1750:14;:20::i;:::-;1745:66;;1798:1;1786:14;;;;;;;;;;;;;;;;;;;;;;1745:66;1851:14;;-1:-1:-1;;;;;1851:14:70;1821:19;1851:14;1897:21;1919:13;;;;:6;:13;:::i;:::-;1897:36;;-1:-1:-1;;;;;;1897:36:70;;;;;;;-1:-1:-1;;;;;1401:32:74;;;1897:36:70;;;1383:51:74;1356:18;;1897:36:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1876:57;-1:-1:-1;1948:14:70;;1944:235;;2049:1;2037:14;;;;;;;;;;;;;;;;;;;;;;;;1944:235;-1:-1:-1;;2154:14:70;;;;;;;;;-1:-1:-1;2154:14:70;;;-1:-1:-1;2166:1:70;;-1:-1:-1;;;;1407:1225:70;;;;;;;:::o;1359:130:40:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:40;719:10:54;1422:23:40;1414:68;;;;-1:-1:-1;;;1414:68:40;;9159:2:74;1414:68:40;;;9141:21:74;;;9178:18;;;9171:30;9237:34;9217:18;;;9210:62;9289:18;;1414:68:40;8957:356:74;2433:187:40;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:40;;;-1:-1:-1;;;;;;2541:17:40;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;3837:110:8:-;3928:10;;-1:-1:-1;;;;;3928:10:8;3906;:33;3898:42;;;;;1839:286;2095:23;;-1:-1:-1;;;2095:23:8;;9520:2:74;2095:23:8;;;9502:21:74;9559:2;9539:18;;;9532:30;-1:-1:-1;;;9578:18:74;;;9571:43;9631:18;;2095:23:8;9318:337:74;2638:257:70;2699:4;;2715:151;2739:14;:21;2735:25;;2715:151;;;2806:4;-1:-1:-1;;;;;2785:25:70;:14;2800:1;2785:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2785:17:70;:25;2781:75;;-1:-1:-1;2837:4:70;;2638:257;-1:-1:-1;;2638:257:70:o;2781:75::-;2762:3;;;;:::i;:::-;;;;2715:151;;;-1:-1:-1;2883:5:70;;2638:257;-1:-1:-1;;2638:257:70:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:276:74;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;199:61;279:5;14:276;-1:-1:-1;;;14:276:74:o;477:139::-;-1:-1:-1;;;;;560:31:74;;550:42;;540:70;;606:1;603;596:12;621:331;697:6;705;758:2;746:9;737:7;733:23;729:32;726:52;;;774:1;771;764:12;726:52;813:9;800:23;832:39;865:5;832:39;:::i;:::-;890:5;942:2;927:18;;;;914:32;;-1:-1:-1;;;621:331:74:o;957:275::-;1036:6;1089:2;1077:9;1068:7;1064:23;1060:32;1057:52;;;1105:1;1102;1095:12;1057:52;1144:9;1131:23;1163:39;1196:5;1163:39;:::i;1445:180::-;1504:6;1557:2;1545:9;1536:7;1532:23;1528:32;1525:52;;;1573:1;1570;1563:12;1525:52;-1:-1:-1;1596:23:74;;1445:180;-1:-1:-1;1445:180:74:o;1630:818::-;1733:6;1741;1749;1757;1810:2;1798:9;1789:7;1785:23;1781:32;1778:52;;;1826:1;1823;1816:12;1778:52;1865:9;1852:23;1904:1;1897:5;1894:12;1884:40;;1920:1;1917;1910:12;1884:40;1943:5;-1:-1:-1;1999:2:74;1984:18;;1971:32;2022:18;2052:14;;;2049:34;;;2079:1;2076;2069:12;2049:34;2117:6;2106:9;2102:22;2092:32;;2162:7;2155:4;2151:2;2147:13;2143:27;2133:55;;2184:1;2181;2174:12;2133:55;2224:2;2211:16;2250:2;2242:6;2239:14;2236:34;;;2266:1;2263;2256:12;2236:34;2311:7;2306:2;2297:6;2293:2;2289:15;2285:24;2282:37;2279:57;;;2332:1;2329;2322:12;2279:57;1630:818;;2363:2;2355:11;;;;;-1:-1:-1;2385:6:74;;2438:2;2423:18;2410:32;;-1:-1:-1;1630:818:74;-1:-1:-1;;;1630:818:74:o;3209:127::-;3270:10;3265:3;3261:20;3258:1;3251:31;3301:4;3298:1;3291:15;3325:4;3322:1;3315:15;3341:275;3412:2;3406:9;3477:2;3458:13;;-1:-1:-1;;3454:27:74;3442:40;;3512:18;3497:34;;3533:22;;;3494:62;3491:88;;;3559:18;;:::i;:::-;3595:2;3588:22;3341:275;;-1:-1:-1;3341:275:74:o;3621:1029::-;3705:6;3736:2;3779;3767:9;3758:7;3754:23;3750:32;3747:52;;;3795:1;3792;3785:12;3747:52;3835:9;3822:23;3864:18;3905:2;3897:6;3894:14;3891:34;;;3921:1;3918;3911:12;3891:34;3959:6;3948:9;3944:22;3934:32;;4004:7;3997:4;3993:2;3989:13;3985:27;3975:55;;4026:1;4023;4016:12;3975:55;4062:2;4049:16;4084:2;4080;4077:10;4074:36;;;4090:18;;:::i;:::-;4136:2;4133:1;4129:10;4119:20;;4159:28;4183:2;4179;4175:11;4159:28;:::i;:::-;4221:15;;;4291:11;;;4287:20;;;4252:12;;;;4319:19;;;4316:39;;;4351:1;4348;4341:12;4316:39;4375:11;;;;4395:225;4411:6;4406:3;4403:15;4395:225;;;4491:3;4478:17;4465:30;;4508:39;4541:5;4508:39;:::i;:::-;4560:18;;;4428:12;;;;4598;;;;4395:225;;;4639:5;3621:1029;-1:-1:-1;;;;;;;;3621:1029:74:o;4655:529::-;4765:6;4773;4781;4834:2;4822:9;4813:7;4809:23;4805:32;4802:52;;;4850:1;4847;4840:12;4802:52;4890:9;4877:23;4923:18;4915:6;4912:30;4909:50;;;4955:1;4952;4945:12;4909:50;4978:22;;5034:3;5016:16;;;5012:26;5009:46;;;5051:1;5048;5041:12;5009:46;5074:2;5123;5108:18;;5095:32;;-1:-1:-1;5174:2:74;5159:18;;;5146:32;;4655:529;-1:-1:-1;;;4655:529:74:o;5189:602::-;5364:2;5353:9;5346:21;5327:4;5396:6;5390:13;5439:6;5434:2;5423:9;5419:18;5412:34;5464:1;5474:144;5488:6;5485:1;5482:13;5474:144;;;5601:4;5585:14;;;5581:25;;5575:32;5570:2;5551:17;;;5547:26;5540:68;5503:12;5474:144;;;5478:3;5667:1;5662:2;5653:6;5642:9;5638:22;5634:31;5627:42;5737:2;5730;5726:7;5721:2;5713:6;5709:15;5705:29;5694:9;5690:45;5686:54;5678:62;;;5778:6;5771:4;5760:9;5756:20;5749:36;5189:602;;;;;:::o;6512:184::-;6582:6;6635:2;6623:9;6614:7;6610:23;6606:32;6603:52;;;6651:1;6648;6641:12;6603:52;-1:-1:-1;6674:16:74;;6512:184;-1:-1:-1;6512:184:74:o;7108:521::-;7185:4;7191:6;7251:11;7238:25;7345:2;7341:7;7330:8;7314:14;7310:29;7306:43;7286:18;7282:68;7272:96;;7364:1;7361;7354:12;7272:96;7391:33;;7443:20;;;-1:-1:-1;7486:18:74;7475:30;;7472:50;;;7518:1;7515;7508:12;7472:50;7551:4;7539:17;;-1:-1:-1;7582:14:74;7578:27;;;7568:38;;7565:58;;;7619:1;7616;7609:12;7565:58;7108:521;;;;;:::o;7634:331::-;7739:9;7750;7792:8;7780:10;7777:24;7774:44;;;7814:1;7811;7804:12;7774:44;7843:6;7833:8;7830:20;7827:40;;;7863:1;7860;7853:12;7827:40;-1:-1:-1;;7889:23:74;;;7934:25;;;;;-1:-1:-1;7634:331:74:o;7970:982::-;8064:6;8072;8080;8133:2;8121:9;8112:7;8108:23;8104:32;8101:52;;;8149:1;8146;8139:12;8101:52;8188:9;8175:23;8207:39;8240:5;8207:39;:::i;:::-;8265:5;-1:-1:-1;8289:2:74;8323:18;;;8310:32;;-1:-1:-1;8393:2:74;8378:18;;8365:32;8416:18;8446:14;;;8443:34;;;8473:1;8470;8463:12;8443:34;8511:6;8500:9;8496:22;8486:32;;8556:7;8549:4;8545:2;8541:13;8537:27;8527:55;;8578:1;8575;8568:12;8527:55;8614:2;8601:16;8636:2;8632;8629:10;8626:36;;;8642:18;;:::i;:::-;8684:53;8727:2;8708:13;;-1:-1:-1;;8704:27:74;8700:36;;8684:53;:::i;:::-;8671:66;;8760:2;8753:5;8746:17;8800:7;8795:2;8790;8786;8782:11;8778:20;8775:33;8772:53;;;8821:1;8818;8811:12;8772:53;8876:2;8871;8867;8863:11;8858:2;8851:5;8847:14;8834:45;8920:1;8915:2;8910;8903:5;8899:14;8895:23;8888:34;;8941:5;8931:15;;;;;7970:982;;;;;:::o;9660:127::-;9721:10;9716:3;9712:20;9709:1;9702:31;9752:4;9749:1;9742:15;9776:4;9773:1;9766:15;9792:232;9831:3;9852:17;;;9849:140;;9911:10;9906:3;9902:20;9899:1;9892:31;9946:4;9943:1;9936:15;9974:4;9971:1;9964:15;9849:140;-1:-1:-1;10016:1:74;10005:13;;9792:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "gasLimitPerOperation()": "18b9997b",
    "getDeposit()": "c399ec88",
    "nftPassAddress()": "66c00cca",
    "owner()": "8da5cb5b",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "setEntryPoint(address)": "584465f2",
    "setNftPassAddress(address)": "d97e0ada",
    "setWhiteAddresses(address[])": "eb4bd055",
    "spendingLimitPerOperation()": "8c8e9379",
    "timeLimitInSecond()": "e17282db",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "whiteAddresses(uint256)": "a0ac611b",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftPassAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimitPerOperation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_spendingLimitPerOperation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeLimitInSecond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExceedingGasLimit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimitPerOperation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftPassAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"name\":\"setEntryPoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNftPassAddress\",\"type\":\"address\"}],\"name\":\"setNftPassAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"setWhiteAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spendingLimitPerOperation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLimitInSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whiteAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"deadline\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HackathonPaymaster.sol\":\"HackathonPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x1b12d38bc24b410bc582a5fc0f5155184e68e14630b1391ef3d4c3cd407354b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://793e93f891872eef7c5a0d915f220845eb6881db7e6ede8d1f15e7140c66c20b\",\"dweb:/ipfs/QmQMeyFdAocP4aL1JJu8sQqHjnJBtXoCdPbvPQmTyauWrt\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x4fb508f4783ad56f4bb4f4f0bb2cce74adbf3ddc2b0534484b4f06b9a5978fb3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://22b844a90513e4f8cd1188c507284d6d9e79bd2c6447fea1ee88d50b9ec88c2e\",\"dweb:/ipfs/QmXEnA4bAXhwvpQXAMbU5JDjDh7yEFHLxMR18SFhXzgczv\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x838126b117bcf935509a46860821fb216678d9ce30f9a8471f62f48c37c1136c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2d0ea19eeb548599a0a06ebd1b72781d6a8a447130050eb8400fbd1ae452c139\",\"dweb:/ipfs/QmWAa9tygDnueVnp28295AnJrrStJc4VH5zHsU8xakPikw\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x81716fcec7b72fc72a4d64c06341bd4457d2cdecf5cb66c68784512af35a6c42\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0bdada4c9266d5bb904a44696f9f269c00a8a8b349732f20c160c92ce48ee0ec\",\"dweb:/ipfs/QmXRVu4AxT9TmLLo2aGuM7KT1qr93EVgy6dLjNb5FgwyxY\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab\",\"dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x9d677e4299f7c97c820f0c444739bd39cda943def1c38cdb7960038191697bbc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bd9abee48b95851f758e6e333e4bdf9aaed0e1a25fe6b2fb0e71c38782215df6\",\"dweb:/ipfs/QmRseGvgX9N8cHnJtbnuQKHxtd3JZYWR6quyUdrMQunYgq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/Hackathon721.sol\":{\"keccak256\":\"0x4df926e0cab83a4bd7377d90a378a3ca4a4deefbf784f27ab91436730801583c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f108194b041b4260cb4f36e4acffeba0881a3a38e095e2b48342c831522fd386\",\"dweb:/ipfs/Qmc2SZciBMDfHw5cqaLYnhCuv8xspDu3LSSBQTwcc84DBz\"]},\"src/HackathonPaymaster.sol\":{\"keccak256\":\"0x68edcb1703ddbd8343584b89614b56eaa049966765730d389b7d79678b4bad27\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f14d080d7faa5cf0f8ebc7971e1195550505dc72df4ae1f83d169998347130b7\",\"dweb:/ipfs/QmbnMT8Jm1X5ExXeoXBwWtk7EhFJ8hHoYHNFxfX2R3Ea1P\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nftPassAddress",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "addresses",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "_gasLimitPerOperation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_spendingLimitPerOperation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timeLimitInSecond",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExceedingGasLimit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gasLimitPerOperation",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftPassAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntryPoint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newNftPassAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNftPassAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "addresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWhiteAddresses"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "spendingLimitPerOperation",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "timeLimitInSecond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "whiteAddresses",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp      zero length to signify postOp is not required.",
              "deadline": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/HackathonPaymaster.sol": "HackathonPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BasePaymaster.sol": {
        "keccak256": "0x1b12d38bc24b410bc582a5fc0f5155184e68e14630b1391ef3d4c3cd407354b6",
        "urls": [
          "bzz-raw://793e93f891872eef7c5a0d915f220845eb6881db7e6ede8d1f15e7140c66c20b",
          "dweb:/ipfs/QmQMeyFdAocP4aL1JJu8sQqHjnJBtXoCdPbvPQmTyauWrt"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x4fb508f4783ad56f4bb4f4f0bb2cce74adbf3ddc2b0534484b4f06b9a5978fb3",
        "urls": [
          "bzz-raw://22b844a90513e4f8cd1188c507284d6d9e79bd2c6447fea1ee88d50b9ec88c2e",
          "dweb:/ipfs/QmXEnA4bAXhwvpQXAMbU5JDjDh7yEFHLxMR18SFhXzgczv"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x838126b117bcf935509a46860821fb216678d9ce30f9a8471f62f48c37c1136c",
        "urls": [
          "bzz-raw://2d0ea19eeb548599a0a06ebd1b72781d6a8a447130050eb8400fbd1ae452c139",
          "dweb:/ipfs/QmWAa9tygDnueVnp28295AnJrrStJc4VH5zHsU8xakPikw"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x81716fcec7b72fc72a4d64c06341bd4457d2cdecf5cb66c68784512af35a6c42",
        "urls": [
          "bzz-raw://0bdada4c9266d5bb904a44696f9f269c00a8a8b349732f20c160c92ce48ee0ec",
          "dweb:/ipfs/QmXRVu4AxT9TmLLo2aGuM7KT1qr93EVgy6dLjNb5FgwyxY"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73",
        "urls": [
          "bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab",
          "dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x9d677e4299f7c97c820f0c444739bd39cda943def1c38cdb7960038191697bbc",
        "urls": [
          "bzz-raw://bd9abee48b95851f758e6e333e4bdf9aaed0e1a25fe6b2fb0e71c38782215df6",
          "dweb:/ipfs/QmRseGvgX9N8cHnJtbnuQKHxtd3JZYWR6quyUdrMQunYgq"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/Hackathon721.sol": {
        "keccak256": "0x4df926e0cab83a4bd7377d90a378a3ca4a4deefbf784f27ab91436730801583c",
        "urls": [
          "bzz-raw://f108194b041b4260cb4f36e4acffeba0881a3a38e095e2b48342c831522fd386",
          "dweb:/ipfs/Qmc2SZciBMDfHw5cqaLYnhCuv8xspDu3LSSBQTwcc84DBz"
        ],
        "license": "MIT"
      },
      "src/HackathonPaymaster.sol": {
        "keccak256": "0x68edcb1703ddbd8343584b89614b56eaa049966765730d389b7d79678b4bad27",
        "urls": [
          "bzz-raw://f14d080d7faa5cf0f8ebc7971e1195550505dc72df4ae1f83d169998347130b7",
          "dweb:/ipfs/QmbnMT8Jm1X5ExXeoXBwWtk7EhFJ8hHoYHNFxfX2R3Ea1P"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/HackathonPaymaster.sol",
    "id": 41428,
    "exportedSymbols": {
      "Address": [
        37939
      ],
      "Base64": [
        37986
      ],
      "BasePaymaster": [
        3085
      ],
      "Context": [
        38008
      ],
      "ERC165": [
        38628
      ],
      "ERC721": [
        37063
      ],
      "ERC721Enumerable": [
        37551
      ],
      "Hackathon721": [
        41128
      ],
      "HackathonPaymaster": [
        41427
      ],
      "IAggregator": [
        6054
      ],
      "IERC165": [
        38640
      ],
      "IERC721": [
        37179
      ],
      "IERC721Enumerable": [
        37582
      ],
      "IERC721Metadata": [
        37609
      ],
      "IERC721Receiver": [
        37197
      ],
      "IEntryPoint": [
        6253
      ],
      "IPaymaster": [
        6288
      ],
      "IStakeManager": [
        6393
      ],
      "Math": [
        39505
      ],
      "Ownable": [
        35513
      ],
      "Strings": [
        38243
      ],
      "UserOperation": [
        6418
      ],
      "UserOperationLib": [
        6523
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:3995:70",
    "nodes": [
      {
        "id": 41130,
        "nodeType": "PragmaDirective",
        "src": "36:24:70",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 41131,
        "nodeType": "ImportDirective",
        "src": "99:69:70",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "file": "../lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41428,
        "sourceUnit": 3086,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41132,
        "nodeType": "ImportDirective",
        "src": "169:74:70",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41428,
        "sourceUnit": 37180,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41133,
        "nodeType": "ImportDirective",
        "src": "244:28:70",
        "nodes": [],
        "absolutePath": "src/Hackathon721.sol",
        "file": "./Hackathon721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41428,
        "sourceUnit": 41129,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41427,
        "nodeType": "ContractDefinition",
        "src": "303:3727:70",
        "nodes": [
          {
            "id": 41139,
            "nodeType": "UsingForDirective",
            "src": "354:41:70",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 41136,
              "name": "UserOperationLib",
              "nameLocations": [
                "360:16:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6523,
              "src": "360:16:70"
            },
            "typeName": {
              "id": 41138,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41137,
                "name": "UserOperation",
                "nameLocations": [
                  "381:13:70"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6418,
                "src": "381:13:70"
              },
              "referencedDeclaration": 6418,
              "src": "381:13:70",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$6418_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 41141,
            "nodeType": "ErrorDefinition",
            "src": "401:26:70",
            "nodes": [],
            "errorSelector": "083051b6",
            "name": "ExceedingGasLimit",
            "nameLocation": "407:17:70",
            "parameters": {
              "id": 41140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "424:2:70"
            }
          },
          {
            "id": 41143,
            "nodeType": "VariableDeclaration",
            "src": "433:29:70",
            "nodes": [],
            "constant": false,
            "functionSelector": "66c00cca",
            "mutability": "mutable",
            "name": "nftPassAddress",
            "nameLocation": "448:14:70",
            "scope": 41427,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41142,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "433:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41146,
            "nodeType": "VariableDeclaration",
            "src": "468:31:70",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0ac611b",
            "mutability": "mutable",
            "name": "whiteAddresses",
            "nameLocation": "485:14:70",
            "scope": 41427,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 41144,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "468:7:70",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 41145,
              "nodeType": "ArrayTypeName",
              "src": "468:9:70",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41148,
            "nodeType": "VariableDeclaration",
            "src": "505:35:70",
            "nodes": [],
            "constant": false,
            "functionSelector": "18b9997b",
            "mutability": "mutable",
            "name": "gasLimitPerOperation",
            "nameLocation": "520:20:70",
            "scope": 41427,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41147,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:70",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41150,
            "nodeType": "VariableDeclaration",
            "src": "546:40:70",
            "nodes": [],
            "constant": false,
            "functionSelector": "8c8e9379",
            "mutability": "mutable",
            "name": "spendingLimitPerOperation",
            "nameLocation": "561:25:70",
            "scope": 41427,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41149,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "546:7:70",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41152,
            "nodeType": "VariableDeclaration",
            "src": "592:32:70",
            "nodes": [],
            "constant": false,
            "functionSelector": "e17282db",
            "mutability": "mutable",
            "name": "timeLimitInSecond",
            "nameLocation": "607:17:70",
            "scope": 41427,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41151,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "592:7:70",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41193,
            "nodeType": "FunctionDefinition",
            "src": "631:517:70",
            "nodes": [],
            "body": {
              "id": 41192,
              "nodeType": "Block",
              "src": "897:251:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41172,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41143,
                      "src": "907:14:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41173,
                      "name": "_nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41157,
                      "src": "924:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "907:32:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41175,
                  "nodeType": "ExpressionStatement",
                  "src": "907:32:70"
                },
                {
                  "expression": {
                    "id": 41178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41176,
                      "name": "whiteAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41146,
                      "src": "949:14:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41177,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41160,
                      "src": "966:9:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "949:26:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 41179,
                  "nodeType": "ExpressionStatement",
                  "src": "949:26:70"
                },
                {
                  "expression": {
                    "id": 41182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41180,
                      "name": "gasLimitPerOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41148,
                      "src": "985:20:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41181,
                      "name": "_gasLimitPerOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41162,
                      "src": "1008:21:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "985:44:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41183,
                  "nodeType": "ExpressionStatement",
                  "src": "985:44:70"
                },
                {
                  "expression": {
                    "id": 41186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41184,
                      "name": "spendingLimitPerOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41150,
                      "src": "1039:25:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41185,
                      "name": "_spendingLimitPerOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41164,
                      "src": "1067:26:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1039:54:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41187,
                  "nodeType": "ExpressionStatement",
                  "src": "1039:54:70"
                },
                {
                  "expression": {
                    "id": 41190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41188,
                      "name": "timeLimitInSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41152,
                      "src": "1103:17:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41189,
                      "name": "_timeLimitInSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41166,
                      "src": "1123:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1103:38:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41191,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:38:70"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 41169,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41155,
                    "src": "884:11:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$6253",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 41170,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 41168,
                  "name": "BasePaymaster",
                  "nameLocations": [
                    "870:13:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3085,
                  "src": "870:13:70"
                },
                "nodeType": "ModifierInvocation",
                "src": "870:26:70"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 41167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41155,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "664:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41193,
                  "src": "652:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$6253",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 41154,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41153,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "652:11:70"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6253,
                      "src": "652:11:70"
                    },
                    "referencedDeclaration": 6253,
                    "src": "652:11:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$6253",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41157,
                  "mutability": "mutable",
                  "name": "_nftPassAddress",
                  "nameLocation": "693:15:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41193,
                  "src": "685:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41160,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "735:9:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41193,
                  "src": "718:26:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41158,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "718:7:70",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 41159,
                    "nodeType": "ArrayTypeName",
                    "src": "718:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41162,
                  "mutability": "mutable",
                  "name": "_gasLimitPerOperation",
                  "nameLocation": "762:21:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41193,
                  "src": "754:29:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41164,
                  "mutability": "mutable",
                  "name": "_spendingLimitPerOperation",
                  "nameLocation": "801:26:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41193,
                  "src": "793:34:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41166,
                  "mutability": "mutable",
                  "name": "_timeLimitInSecond",
                  "nameLocation": "845:18:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41193,
                  "src": "837:26:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:227:70"
            },
            "returnParameters": {
              "id": 41171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "897:0:70"
            },
            "scope": 41427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41205,
            "nodeType": "FunctionDefinition",
            "src": "1154:124:70",
            "nodes": [],
            "body": {
              "id": 41204,
              "nodeType": "Block",
              "src": "1227:51:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41200,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41143,
                      "src": "1237:14:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41201,
                      "name": "newNftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41195,
                      "src": "1254:17:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1237:34:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41203,
                  "nodeType": "ExpressionStatement",
                  "src": "1237:34:70"
                }
              ]
            },
            "functionSelector": "d97e0ada",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41198,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41197,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1217:9:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35432,
                  "src": "1217:9:70"
                },
                "nodeType": "ModifierInvocation",
                "src": "1217:9:70"
              }
            ],
            "name": "setNftPassAddress",
            "nameLocation": "1163:17:70",
            "parameters": {
              "id": 41196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41195,
                  "mutability": "mutable",
                  "name": "newNftPassAddress",
                  "nameLocation": "1189:17:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41205,
                  "src": "1181:25:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1180:27:70"
            },
            "returnParameters": {
              "id": 41199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:0:70"
            },
            "scope": 41427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41218,
            "nodeType": "FunctionDefinition",
            "src": "1284:117:70",
            "nodes": [],
            "body": {
              "id": 41217,
              "nodeType": "Block",
              "src": "1358:43:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41213,
                      "name": "whiteAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41146,
                      "src": "1368:14:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41214,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41208,
                      "src": "1385:9:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1368:26:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 41216,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:26:70"
                }
              ]
            },
            "functionSelector": "eb4bd055",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41211,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41210,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1348:9:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35432,
                  "src": "1348:9:70"
                },
                "nodeType": "ModifierInvocation",
                "src": "1348:9:70"
              }
            ],
            "name": "setWhiteAddresses",
            "nameLocation": "1293:17:70",
            "parameters": {
              "id": 41209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41208,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "1328:9:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41218,
                  "src": "1311:26:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41206,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1311:7:70",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 41207,
                    "nodeType": "ArrayTypeName",
                    "src": "1311:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:28:70"
            },
            "returnParameters": {
              "id": 41212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:0:70"
            },
            "scope": 41427,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41298,
            "nodeType": "FunctionDefinition",
            "src": "1407:1225:70",
            "nodes": [],
            "body": {
              "id": 41297,
              "nodeType": "Block",
              "src": "1616:1016:70",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41234,
                    41236,
                    41238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41234,
                      "mutability": "mutable",
                      "name": "dest",
                      "nameLocation": "1635:4:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 41297,
                      "src": "1627:12:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41233,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1627:7:70",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41236,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1649:5:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 41297,
                      "src": "1641:13:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41235,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1641:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41238,
                      "mutability": "mutable",
                      "name": "func",
                      "nameLocation": "1669:4:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 41297,
                      "src": "1656:17:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 41237,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1656:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41253,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 41241,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41221,
                            "src": "1688:6:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$6418_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 41242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1695:8:70",
                          "memberName": "callData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6403,
                          "src": "1688:15:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 41244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "1688:19:70",
                        "startExpression": {
                          "hexValue": "34",
                          "id": 41243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1704:1:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 41246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1710:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41245,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1710:7:70",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 41248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1719:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 41247,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1719:7:70",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 41250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1728:5:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 41249,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1728:5:70",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 41251,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1709:25:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 41239,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1677:3:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 41240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1681:6:70",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1677:10:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 41252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:58:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(address payable,uint256,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1626:109:70"
                },
                {
                  "condition": {
                    "id": 41257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1749:21:70",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 41255,
                          "name": "dest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41234,
                          "src": "1765:4:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41254,
                        "name": "_isInWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41330,
                        "src": "1750:14:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 41256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1750:20:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41263,
                  "nodeType": "IfStatement",
                  "src": "1745:66:70",
                  "trueBody": {
                    "id": 41262,
                    "nodeType": "Block",
                    "src": "1772:39:70",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 41258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1794:2:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 41259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1798:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 41260,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1793:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 41232,
                        "id": 41261,
                        "nodeType": "Return",
                        "src": "1786:14:70"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    41266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41266,
                      "mutability": "mutable",
                      "name": "nftContract",
                      "nameLocation": "1829:11:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 41297,
                      "src": "1821:19:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$37179",
                        "typeString": "contract IERC721"
                      },
                      "typeName": {
                        "id": 41265,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41264,
                          "name": "IERC721",
                          "nameLocations": [
                            "1821:7:70"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37179,
                          "src": "1821:7:70"
                        },
                        "referencedDeclaration": 37179,
                        "src": "1821:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$37179",
                          "typeString": "contract IERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41270,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41268,
                        "name": "nftPassAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41143,
                        "src": "1851:14:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41267,
                      "name": "IERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37179,
                      "src": "1843:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC721_$37179_$",
                        "typeString": "type(contract IERC721)"
                      }
                    },
                    "id": 41269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1843:23:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$37179",
                      "typeString": "contract IERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1821:45:70"
                },
                {
                  "assignments": [
                    41272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41272,
                      "mutability": "mutable",
                      "name": "tokenCount",
                      "nameLocation": "1884:10:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 41297,
                      "src": "1876:18:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41271,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1876:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41278,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41275,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41221,
                          "src": "1919:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$6418_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 41276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1926:6:70",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6397,
                        "src": "1919:13:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41273,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41266,
                        "src": "1897:11:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$37179",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 41274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1909:9:70",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37104,
                      "src": "1897:21:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:36:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1876:57:70"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41279,
                      "name": "tokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41272,
                      "src": "1948:10:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 41280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1961:1:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1948:14:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 41291,
                    "nodeType": "Block",
                    "src": "2068:111:70",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 41287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2162:2:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 41288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2166:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 41289,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2161:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 41232,
                        "id": 41290,
                        "nodeType": "Return",
                        "src": "2154:14:70"
                      }
                    ]
                  },
                  "id": 41292,
                  "nodeType": "IfStatement",
                  "src": "1944:235:70",
                  "trueBody": {
                    "id": 41286,
                    "nodeType": "Block",
                    "src": "1964:98:70",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 41282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2045:2:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "30",
                              "id": 41283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2049:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "id": 41284,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2044:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 0)"
                          }
                        },
                        "functionReturnParameters": 41232,
                        "id": 41285,
                        "nodeType": "Return",
                        "src": "2037:14:70"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 41293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2619:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "30",
                        "id": 41294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2623:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 41295,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2618:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$",
                      "typeString": "tuple(literal_string \"\",int_const 0)"
                    }
                  },
                  "functionReturnParameters": 41232,
                  "id": 41296,
                  "nodeType": "Return",
                  "src": "2611:14:70"
                }
              ]
            },
            "baseFunctions": [
              2932
            ],
            "functionSelector": "f465c77e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validatePaymasterUserOp",
            "nameLocation": "1416:23:70",
            "overrides": {
              "id": 41227,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1546:8:70"
            },
            "parameters": {
              "id": 41226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41221,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1463:6:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41298,
                  "src": "1440:29:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$6418_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 41220,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41219,
                      "name": "UserOperation",
                      "nameLocations": [
                        "1440:13:70"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6418,
                      "src": "1440:13:70"
                    },
                    "referencedDeclaration": 6418,
                    "src": "1440:13:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$6418_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41223,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1479:10:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41298,
                  "src": "1471:18:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 41222,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41225,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "1499:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41298,
                  "src": "1491:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1491:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1439:68:70"
            },
            "returnParameters": {
              "id": 41232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41229,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1585:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41298,
                  "src": "1572:20:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41228,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41231,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1602:8:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41298,
                  "src": "1594:16:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1571:40:70"
            },
            "scope": 41427,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41330,
            "nodeType": "FunctionDefinition",
            "src": "2638:257:70",
            "nodes": [],
            "body": {
              "id": 41329,
              "nodeType": "Block",
              "src": "2705:190:70",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 41325,
                    "nodeType": "Block",
                    "src": "2767:99:70",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 41320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 41316,
                              "name": "whiteAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41146,
                              "src": "2785:14:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 41318,
                            "indexExpression": {
                              "id": 41317,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41306,
                              "src": "2800:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2785:17:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 41319,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41300,
                            "src": "2806:4:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2785:25:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41324,
                        "nodeType": "IfStatement",
                        "src": "2781:75:70",
                        "trueBody": {
                          "id": 41323,
                          "nodeType": "Block",
                          "src": "2812:44:70",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 41321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2837:4:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 41304,
                              "id": 41322,
                              "nodeType": "Return",
                              "src": "2830:11:70"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41309,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41306,
                      "src": "2735:1:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 41310,
                        "name": "whiteAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41146,
                        "src": "2739:14:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 41311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2754:6:70",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2739:21:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2735:25:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41326,
                  "initializationExpression": {
                    "assignments": [
                      41306
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41306,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2728:1:70",
                        "nodeType": "VariableDeclaration",
                        "scope": 41326,
                        "src": "2720:9:70",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2720:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41308,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2732:1:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2720:13:70"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2762:3:70",
                      "subExpression": {
                        "id": 41313,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41306,
                        "src": "2762:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41315,
                    "nodeType": "ExpressionStatement",
                    "src": "2762:3:70"
                  },
                  "nodeType": "ForStatement",
                  "src": "2715:151:70"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 41327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2883:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 41304,
                  "id": 41328,
                  "nodeType": "Return",
                  "src": "2876:12:70"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isInWhiteList",
            "nameLocation": "2647:14:70",
            "parameters": {
              "id": 41301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41300,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2670:4:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41330,
                  "src": "2662:12:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2662:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2661:14:70"
            },
            "returnParameters": {
              "id": 41304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41303,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41330,
                  "src": "2699:4:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41302,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2699:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2698:6:70"
            },
            "scope": 41427,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41346,
            "nodeType": "FunctionDefinition",
            "src": "2901:175:70",
            "nodes": [],
            "body": {
              "id": 41345,
              "nodeType": "Block",
              "src": "2983:93:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 41343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41337,
                        "name": "gasLimitPerOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41148,
                        "src": "3000:20:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 41338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3024:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3000:25:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41340,
                        "name": "operationGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41332,
                        "src": "3029:17:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 41341,
                        "name": "gasLimitPerOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41148,
                        "src": "3049:20:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3029:40:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3000:69:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 41336,
                  "id": 41344,
                  "nodeType": "Return",
                  "src": "2993:76:70"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exceedsGasLimit",
            "nameLocation": "2910:16:70",
            "parameters": {
              "id": 41333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41332,
                  "mutability": "mutable",
                  "name": "operationGasLimit",
                  "nameLocation": "2935:17:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41346,
                  "src": "2927:25:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2926:27:70"
            },
            "returnParameters": {
              "id": 41336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41335,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41346,
                  "src": "2977:4:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41334,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2977:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2976:6:70"
            },
            "scope": 41427,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41362,
            "nodeType": "FunctionDefinition",
            "src": "3082:170:70",
            "nodes": [],
            "body": {
              "id": 41361,
              "nodeType": "Block",
              "src": "3159:93:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 41359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41353,
                        "name": "spendingLimitPerOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41150,
                        "src": "3176:25:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 41354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3205:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3176:30:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41356,
                        "name": "maxCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41348,
                        "src": "3210:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 41357,
                        "name": "spendingLimitPerOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41150,
                        "src": "3220:25:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3210:35:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3176:69:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 41352,
                  "id": 41360,
                  "nodeType": "Return",
                  "src": "3169:76:70"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exceedsSpendingLimit",
            "nameLocation": "3091:21:70",
            "parameters": {
              "id": 41349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41348,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "3121:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41362,
                  "src": "3113:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3113:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3112:17:70"
            },
            "returnParameters": {
              "id": 41352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41351,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41362,
                  "src": "3153:4:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41350,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3153:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3152:6:70"
            },
            "scope": 41427,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41426,
            "nodeType": "FunctionDefinition",
            "src": "3342:686:70",
            "nodes": [],
            "body": {
              "id": 41425,
              "nodeType": "Block",
              "src": "3414:614:70",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41371,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "3437:3:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 41425,
                      "src": "3424:16:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hackathon721_$41128",
                        "typeString": "contract Hackathon721"
                      },
                      "typeName": {
                        "id": 41370,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41369,
                          "name": "Hackathon721",
                          "nameLocations": [
                            "3424:12:70"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41128,
                          "src": "3424:12:70"
                        },
                        "referencedDeclaration": 41128,
                        "src": "3424:12:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackathon721_$41128",
                          "typeString": "contract Hackathon721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41375,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41373,
                        "name": "nftPassAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41143,
                        "src": "3456:14:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41372,
                      "name": "Hackathon721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41128,
                      "src": "3443:12:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hackathon721_$41128_$",
                        "typeString": "type(contract Hackathon721)"
                      }
                    },
                    "id": 41374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3443:28:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hackathon721_$41128",
                      "typeString": "contract Hackathon721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3424:47:70"
                },
                {
                  "assignments": [
                    41377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41377,
                      "mutability": "mutable",
                      "name": "tokenCount",
                      "nameLocation": "3489:10:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 41425,
                      "src": "3481:18:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3481:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41382,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41380,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41364,
                        "src": "3516:6:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41378,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41371,
                        "src": "3502:3:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackathon721_$41128",
                          "typeString": "contract Hackathon721"
                        }
                      },
                      "id": 41379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3506:9:70",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36254,
                      "src": "3502:13:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3502:21:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3481:42:70"
                },
                {
                  "body": {
                    "id": 41421,
                    "nodeType": "Block",
                    "src": "3575:424:70",
                    "statements": [
                      {
                        "assignments": [
                          41394
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41394,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "3597:7:70",
                            "nodeType": "VariableDeclaration",
                            "scope": 41421,
                            "src": "3589:15:70",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 41393,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3589:7:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41400,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 41397,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41364,
                              "src": "3631:6:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 41398,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41384,
                              "src": "3639:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 41395,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41371,
                              "src": "3607:3:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hackathon721_$41128",
                                "typeString": "contract Hackathon721"
                              }
                            },
                            "id": 41396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3611:19:70",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37275,
                            "src": "3607:23:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 41399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3607:34:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3589:52:70"
                      },
                      {
                        "assignments": [
                          41402
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41402,
                            "mutability": "mutable",
                            "name": "mintedAt",
                            "nameLocation": "3663:8:70",
                            "nodeType": "VariableDeclaration",
                            "scope": 41421,
                            "src": "3655:16:70",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 41401,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3655:7:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41407,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 41405,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41394,
                              "src": "3690:7:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 41403,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41371,
                              "src": "3674:3:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hackathon721_$41128",
                                "typeString": "contract Hackathon721"
                              }
                            },
                            "id": 41404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3678:11:70",
                            "memberName": "getMintedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41056,
                            "src": "3674:15:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 41406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3674:24:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3655:43:70"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 41416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 41408,
                              "name": "timeLimitInSecond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41152,
                              "src": "3876:17:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 41409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3897:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3876:22:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31363834313531323038",
                              "id": 41411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3902:10:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1684151208_by_1",
                                "typeString": "int_const 1684151208"
                              },
                              "value": "1684151208"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 41412,
                                "name": "mintedAt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41402,
                                "src": "3915:8:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 41413,
                                "name": "timeLimitInSecond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41152,
                                "src": "3926:17:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3915:28:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3902:41:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3876:67:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41420,
                        "nodeType": "IfStatement",
                        "src": "3872:117:70",
                        "trueBody": {
                          "id": 41419,
                          "nodeType": "Block",
                          "src": "3945:44:70",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 41417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3970:4:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 41368,
                              "id": 41418,
                              "nodeType": "Return",
                              "src": "3963:11:70"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41387,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41384,
                      "src": "3554:1:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 41388,
                      "name": "tokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41377,
                      "src": "3558:10:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3554:14:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41422,
                  "initializationExpression": {
                    "assignments": [
                      41384
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41384,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3547:1:70",
                        "nodeType": "VariableDeclaration",
                        "scope": 41422,
                        "src": "3539:9:70",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41383,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3539:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41386,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3551:1:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3539:13:70"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3570:3:70",
                      "subExpression": {
                        "id": 41390,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41384,
                        "src": "3570:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41392,
                    "nodeType": "ExpressionStatement",
                    "src": "3570:3:70"
                  },
                  "nodeType": "ForStatement",
                  "src": "3534:465:70"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 41423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4016:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 41368,
                  "id": 41424,
                  "nodeType": "Return",
                  "src": "4009:12:70"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasAvailablePass",
            "nameLocation": "3351:17:70",
            "parameters": {
              "id": 41365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41364,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3377:6:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41426,
                  "src": "3369:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3368:16:70"
            },
            "returnParameters": {
              "id": 41368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41426,
                  "src": "3408:4:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41366,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3407:6:70"
            },
            "scope": 41427,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41134,
              "name": "BasePaymaster",
              "nameLocations": [
                "334:13:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3085,
              "src": "334:13:70"
            },
            "id": 41135,
            "nodeType": "InheritanceSpecifier",
            "src": "334:13:70"
          }
        ],
        "canonicalName": "HackathonPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41427,
          3085,
          35513,
          38008,
          6288
        ],
        "name": "HackathonPaymaster",
        "nameLocation": "312:18:70",
        "scope": 41428,
        "usedErrors": [
          41141
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 70
}