{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftPassAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_gasLimitPerOperation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_spendingLimitPerOperation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeLimitInSecond",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExceedingGasLimit",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasLimitPerOperation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftPassAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "name": "setEntryPoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newNftPassAddress",
          "type": "address"
        }
      ],
      "name": "setNftPassAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        }
      ],
      "name": "setWhiteAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spendingLimitPerOperation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeLimitInSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "whiteAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "303:3102:66:-:0;;;631:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;892:11;936:32:38;719:10:52;936:18:38;:32::i;:::-;530:26:8;544:11;530:13;:26::i;:::-;-1:-1:-1;919:14:66::1;:32:::0;;-1:-1:-1;;;;;;919:32:66::1;-1:-1:-1::0;;;;;919:32:66;::::1;;::::0;;961:26;;::::1;::::0;:14:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;997:20:66::1;:44:::0;;;;1051:25:::1;:54:::0;1115:17:::1;:38:::0;-1:-1:-1;303:3102:66;;-1:-1:-1;;303:3102:66;2433:187:38;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:38;;;-1:-1:-1;;;;;;2541:17:38;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;569:106:8:-;1094:13:38;:11;:13::i;:::-;644:10:8::1;:24:::0;;-1:-1:-1;;;;;;644:24:8::1;-1:-1:-1::0;;;;;644:24:8;;;::::1;::::0;;;::::1;::::0;;569:106::o;1359:130:38:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:38;719:10:52;1422:23:38;1414:68;;;;-1:-1:-1;;;1414:68:38;;2281:2:71;1414:68:38;;;2263:21:71;;;2300:18;;;2293:30;2359:34;2339:18;;;2332:62;2411:18;;1414:68:38;;;;;;;;1359:130::o;303:3102:66:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;303:3102:66;-1:-1:-1;;;;;303:3102:66;;;;;;;;;;;-1:-1:-1;303:3102:66;;;;;;;-1:-1:-1;303:3102:66;;;-1:-1:-1;303:3102:66;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:144:71;-1:-1:-1;;;;;102:31:71;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:151::-;242:13;;264:44;242:13;264:44;:::i;:::-;163:151;;;:::o;319:127::-;380:10;375:3;371:20;368:1;361:31;411:4;408:1;401:15;435:4;432:1;425:15;451:1623;611:6;619;627;635;643;651;704:3;692:9;683:7;679:23;675:33;672:53;;;721:1;718;711:12;672:53;753:9;747:16;772:44;810:5;772:44;:::i;:::-;835:5;825:15;;;859:2;906;895:9;891:18;885:25;919:46;957:7;919:46;:::i;:::-;1035:2;1020:18;;1014:25;984:7;;-1:-1:-1;;;;;;1088:14:71;;;1085:34;;;1115:1;1112;1105:12;1085:34;1153:6;1142:9;1138:22;1128:32;;1198:7;1191:4;1187:2;1183:13;1179:27;1169:55;;1220:1;1217;1210:12;1169:55;1249:2;1243:9;1271:2;1267;1264:10;1261:36;;;1277:18;;:::i;:::-;1323:2;1320:1;1316:10;1355:2;1349:9;1418:2;1414:7;1409:2;1405;1401:11;1397:25;1389:6;1385:38;1473:6;1461:10;1458:22;1453:2;1441:10;1438:18;1435:46;1432:72;;;1484:18;;:::i;:::-;1520:2;1513:22;1570:18;;;1604:15;;;;-1:-1:-1;1646:11:71;;;1642:20;;;1674:19;;;1671:39;;;1706:1;1703;1696:12;1671:39;1730:11;;;;1750:159;1766:6;1761:3;1758:15;1750:159;;;1832:34;1862:3;1832:34;:::i;:::-;1820:47;;1783:12;;;;1887;;;;1750:159;;;1928:6;1918:16;;;;;;;;1974:2;1963:9;1959:18;1953:25;1943:35;;2018:3;2007:9;2003:19;1997:26;1987:36;;2063:3;2052:9;2048:19;2042:26;2032:36;;451:1623;;;;;;;;:::o;2079:356::-;303:3102:66;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "303:3102:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2818:141:8;;;;;;:::i;:::-;;:::i;:::-;;505:35:66;;;;;;;;;;;;;;;;;;;441:25:71;;;429:2;414:18;505:35:66;;;;;;;;2445:149:8;;;;;;;;;;-1:-1:-1;2445:149:8;;;;;:::i;:::-;;:::i;569:106::-;;;;;;;;;;-1:-1:-1;569:106:8;;;;;:::i;:::-;;:::i;433:29:66:-;;;;;;;;;;-1:-1:-1;433:29:66;;;;-1:-1:-1;;;;;433:29:66;;;;;;-1:-1:-1;;;;;1401:32:71;;;1383:51;;1371:2;1356:18;433:29:66;1237:203:71;1831:101:38;;;;;;;;;;;;;:::i;546:40:66:-;;;;;;;;;;;;;;;;1201:85:38;;;;;;;;;;-1:-1:-1;1247:7:38;1273:6;-1:-1:-1;;;;;1273:6:38;1201:85;;468:31:66;;;;;;;;;;-1:-1:-1;468:31:66;;;;;:::i;:::-;;:::i;867:186:8:-;;;;;;;;;;-1:-1:-1;867:186:8;;;;;:::i;:::-;;:::i;447:29::-;;;;;;;;;;-1:-1:-1;447:29:8;;;;-1:-1:-1;;;;;447:29:8;;;3312:83;;;;;;;;;;;;;:::i;3614:133::-;;;;;;;;;;-1:-1:-1;3614:133:8;;;;;:::i;:::-;;:::i;3042:111::-;;;;;;;;;;;;;:::i;2198:105::-;;;:::i;1166:124:66:-;;;;;;;;;;-1:-1:-1;1166:124:66;;;;;:::i;:::-;;:::i;592:32::-;;;;;;;;;;;;;;;;1296:117;;;;;;;;;;-1:-1:-1;1296:117:66;;;;;:::i;:::-;;:::i;2081:198:38:-;;;;;;;;;;-1:-1:-1;2081:198:38;;;;;:::i;:::-;;:::i;1419:755:66:-;;;;;;;;;;-1:-1:-1;1419:755:66;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2818:141:8:-;1094:13:38;:11;:13::i;:::-;2897:10:8::1;::::0;:55:::1;::::0;-1:-1:-1;;;2897:55:8;;5970:10:71;5958:23;;2897:55:8::1;::::0;::::1;5940:42:71::0;-1:-1:-1;;;;;2897:10:8;;::::1;::::0;:19:::1;::::0;2925:9:::1;::::0;5913:18:71;;2897:55:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2818:141:::0;:::o;2445:149::-;1094:13:38;:11;:13::i;:::-;2541:10:8::1;::::0;:46:::1;::::0;-1:-1:-1;;;2541:46:8;;-1:-1:-1;;;;;6201:32:71;;;2541:46:8::1;::::0;::::1;6183:51:71::0;6250:18;;;6243:34;;;2541:10:8;;::::1;::::0;:21:::1;::::0;6156:18:71;;2541:46:8::1;;;;;;;;;;;;;;;;;::::0;::::1;569:106:::0;1094:13:38;:11;:13::i;:::-;644:10:8::1;:24:::0;;-1:-1:-1;;;;;;644:24:8::1;-1:-1:-1::0;;;;;644:24:8;;;::::1;::::0;;;::::1;::::0;;569:106::o;1831:101:38:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;468:31:66:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:31:66;;-1:-1:-1;468:31:66;:::o;867:186:8:-;975:24;:22;:24::i;:::-;1009:37;1017:4;1023:7;;1032:13;1009:7;:37::i;:::-;867:186;;;;:::o;3312:83::-;1094:13:38;:11;:13::i;:::-;3364:10:8::1;;;;;;;;;-1:-1:-1::0;;;;;3364:10:8::1;-1:-1:-1::0;;;;;3364:22:8::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3614:133:::0;1094:13:38;:11;:13::i;:::-;3699:10:8::1;::::0;:41:::1;::::0;-1:-1:-1;;;3699:41:8;;-1:-1:-1;;;;;1401:32:71;;;3699:41:8::1;::::0;::::1;1383:51:71::0;3699:10:8;;::::1;::::0;:24:::1;::::0;1356:18:71;;3699:41:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3614:133:::0;:::o;3042:111::-;3111:10;;:35;;-1:-1:-1;;;3111:35:8;;3140:4;3111:35;;;1383:51:71;3085:7:8;;-1:-1:-1;;;;;3111:10:8;;:20;;1356:18:71;;3111:35:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3104:42;;3042:111;:::o;2198:105::-;2242:10;;:54;;-1:-1:-1;;;2242:54:8;;2290:4;2242:54;;;1383:51:71;-1:-1:-1;;;;;2242:10:8;;;;:20;;2271:9;;1356:18:71;;2242:54:8;;;;;;;;;;;;;;;;;;;1166:124:66;1094:13:38;:11;:13::i;:::-;1249:14:66::1;:34:::0;;-1:-1:-1;;;;;;1249:34:66::1;-1:-1:-1::0;;;;;1249:34:66;;;::::1;::::0;;;::::1;::::0;;1166:124::o;1296:117::-;1094:13:38;:11;:13::i;:::-;1380:26:66;;::::1;::::0;:14:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1296:117:::0;:::o;2081:198:38:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:38;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:38;;6903:2:71;2161:73:38::1;::::0;::::1;6885:21:71::0;6942:2;6922:18;;;6915:30;6981:34;6961:18;;;6954:62;-1:-1:-1;;;7032:18:71;;;7025:36;7078:19;;2161:73:38::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1419:755:66:-;1584:20;1606:16;;;;1700:15;;;;:6;:15;:::i;:::-;:19;;1716:1;;1700:19;;;:::i;:::-;1689:58;;;;;;;:::i;:::-;1638:109;;;;;;1762:20;1777:4;1762:14;:20::i;:::-;1757:66;;1810:1;1798:14;;;;;;;;;;;;;;;;;;;;;;1757:66;1837:37;1854:6;:19;;;1837:16;:37::i;:::-;1833:82;;;1902:1;1890:14;;;;;;;;;;;;;;;;;;;;;;1833:82;1929:30;1951:7;1929:21;:30::i;:::-;1925:75;;;1987:1;1975:14;;;;;;;;;;;;;;;;;;;;;;1925:75;2015:32;2033:13;;;;:6;:13;:::i;:::-;2015:17;:32::i;:::-;2010:78;;2075:1;2063:14;;;;;;;;;;;;;;;;;;;;;;2010:78;2165:1;2153:14;;;;;;;;;;;;;;;;;;;;1419:755;;;;;;;:::o;1359:130:38:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:38;719:10:52;1422:23:38;1414:68;;;;-1:-1:-1;;;1414:68:38;;9159:2:71;1414:68:38;;;9141:21:71;;;9178:18;;;9171:30;9237:34;9217:18;;;9210:62;9289:18;;1414:68:38;8957:356:71;2433:187:38;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:38;;;-1:-1:-1;;;;;;2541:17:38;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;3811:110:8:-;3902:10;;-1:-1:-1;;;;;3902:10:8;3880;:33;3872:42;;;;;1813:285;2068:23;;-1:-1:-1;;;2068:23:8;;9520:2:71;2068:23:8;;;9502:21:71;9559:2;9539:18;;;9532:30;-1:-1:-1;;;9578:18:71;;;9571:43;9631:18;;2068:23:8;9318:337:71;2180:257:66;2241:4;;2257:151;2281:14;:21;2277:25;;2257:151;;;2348:4;-1:-1:-1;;;;;2327:25:66;:14;2342:1;2327:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2327:17:66;:25;2323:75;;-1:-1:-1;2379:4:66;;2180:257;-1:-1:-1;;2180:257:66:o;2323:75::-;2304:3;;;;:::i;:::-;;;;2257:151;;;-1:-1:-1;2425:5:66;;2180:257;-1:-1:-1;;2180:257:66:o;2443:175::-;2519:4;2542:20;;2566:1;2542:25;;:69;;;;;2591:20;;2571:17;:40;2542:69;2535:76;2443:175;-1:-1:-1;;2443:175:66:o;2624:170::-;2695:4;2718:25;;2747:1;2718:30;;:69;;;;-1:-1:-1;;2762:25:66;;-1:-1:-1;2752:35:66;2624:170::o;2800:603::-;2914:14;;2960:21;;-1:-1:-1;;;2960:21:66;;-1:-1:-1;;;;;1401:32:71;;;2960:21:66;;;1383:51:71;2866:4:66;;2914:14;;2866:4;;2914:14;;2960:13;;1356:18:71;;2960:21:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2939:42;;2997:9;2992:382;3016:10;3012:1;:14;2992:382;;;3065:34;;-1:-1:-1;;;3065:34:66;;-1:-1:-1;;;;;6201:32:71;;;3065:34:66;;;6183:51:71;6250:18;;;6243:34;;;3047:15:66;;3065:23;;;;;;6156:18:71;;3065:34:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3132:24;;-1:-1:-1;;;3132:24:66;;;;;441:25:71;;;3047:52:66;;-1:-1:-1;3113:16:66;;-1:-1:-1;;;;;3132:15:66;;;;;414:18:71;;3132:24:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3113:43;;3246:17;;3267:1;3246:22;:72;;;-1:-1:-1;3301:17:66;;3290:28;;:8;:28;:::i;:::-;3272:15;:46;3246:72;3242:122;;;-1:-1:-1;3345:4:66;;2800:603;-1:-1:-1;;;;;;2800:603:66:o;3242:122::-;3033:341;;3028:3;;;;;:::i;:::-;;;;2992:382;;;-1:-1:-1;3391:5:66;;2800:603;-1:-1:-1;;;;2800:603:66:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:276:71;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;199:61;279:5;14:276;-1:-1:-1;;;14:276:71:o;477:139::-;-1:-1:-1;;;;;560:31:71;;550:42;;540:70;;606:1;603;596:12;621:331;697:6;705;758:2;746:9;737:7;733:23;729:32;726:52;;;774:1;771;764:12;726:52;813:9;800:23;832:39;865:5;832:39;:::i;:::-;890:5;942:2;927:18;;;;914:32;;-1:-1:-1;;;621:331:71:o;957:275::-;1036:6;1089:2;1077:9;1068:7;1064:23;1060:32;1057:52;;;1105:1;1102;1095:12;1057:52;1144:9;1131:23;1163:39;1196:5;1163:39;:::i;1445:180::-;1504:6;1557:2;1545:9;1536:7;1532:23;1528:32;1525:52;;;1573:1;1570;1563:12;1525:52;-1:-1:-1;1596:23:71;;1445:180;-1:-1:-1;1445:180:71:o;1630:818::-;1733:6;1741;1749;1757;1810:2;1798:9;1789:7;1785:23;1781:32;1778:52;;;1826:1;1823;1816:12;1778:52;1865:9;1852:23;1904:1;1897:5;1894:12;1884:40;;1920:1;1917;1910:12;1884:40;1943:5;-1:-1:-1;1999:2:71;1984:18;;1971:32;2022:18;2052:14;;;2049:34;;;2079:1;2076;2069:12;2049:34;2117:6;2106:9;2102:22;2092:32;;2162:7;2155:4;2151:2;2147:13;2143:27;2133:55;;2184:1;2181;2174:12;2133:55;2224:2;2211:16;2250:2;2242:6;2239:14;2236:34;;;2266:1;2263;2256:12;2236:34;2311:7;2306:2;2297:6;2293:2;2289:15;2285:24;2282:37;2279:57;;;2332:1;2329;2322:12;2279:57;1630:818;;2363:2;2355:11;;;;;-1:-1:-1;2385:6:71;;2438:2;2423:18;2410:32;;-1:-1:-1;1630:818:71;-1:-1:-1;;;1630:818:71:o;3209:127::-;3270:10;3265:3;3261:20;3258:1;3251:31;3301:4;3298:1;3291:15;3325:4;3322:1;3315:15;3341:275;3412:2;3406:9;3477:2;3458:13;;-1:-1:-1;;3454:27:71;3442:40;;3512:18;3497:34;;3533:22;;;3494:62;3491:88;;;3559:18;;:::i;:::-;3595:2;3588:22;3341:275;;-1:-1:-1;3341:275:71:o;3621:1029::-;3705:6;3736:2;3779;3767:9;3758:7;3754:23;3750:32;3747:52;;;3795:1;3792;3785:12;3747:52;3835:9;3822:23;3864:18;3905:2;3897:6;3894:14;3891:34;;;3921:1;3918;3911:12;3891:34;3959:6;3948:9;3944:22;3934:32;;4004:7;3997:4;3993:2;3989:13;3985:27;3975:55;;4026:1;4023;4016:12;3975:55;4062:2;4049:16;4084:2;4080;4077:10;4074:36;;;4090:18;;:::i;:::-;4136:2;4133:1;4129:10;4119:20;;4159:28;4183:2;4179;4175:11;4159:28;:::i;:::-;4221:15;;;4291:11;;;4287:20;;;4252:12;;;;4319:19;;;4316:39;;;4351:1;4348;4341:12;4316:39;4375:11;;;;4395:225;4411:6;4406:3;4403:15;4395:225;;;4491:3;4478:17;4465:30;;4508:39;4541:5;4508:39;:::i;:::-;4560:18;;;4428:12;;;;4598;;;;4395:225;;;4639:5;3621:1029;-1:-1:-1;;;;;;;;3621:1029:71:o;4655:529::-;4765:6;4773;4781;4834:2;4822:9;4813:7;4809:23;4805:32;4802:52;;;4850:1;4847;4840:12;4802:52;4890:9;4877:23;4923:18;4915:6;4912:30;4909:50;;;4955:1;4952;4945:12;4909:50;4978:22;;5034:3;5016:16;;;5012:26;5009:46;;;5051:1;5048;5041:12;5009:46;5074:2;5123;5108:18;;5095:32;;-1:-1:-1;5174:2:71;5159:18;;;5146:32;;4655:529;-1:-1:-1;;;4655:529:71:o;5189:602::-;5364:2;5353:9;5346:21;5327:4;5396:6;5390:13;5439:6;5434:2;5423:9;5419:18;5412:34;5464:1;5474:144;5488:6;5485:1;5482:13;5474:144;;;5601:4;5585:14;;;5581:25;;5575:32;5570:2;5551:17;;;5547:26;5540:68;5503:12;5474:144;;;5478:3;5667:1;5662:2;5653:6;5642:9;5638:22;5634:31;5627:42;5737:2;5730;5726:7;5721:2;5713:6;5709:15;5705:29;5694:9;5690:45;5686:54;5678:62;;;5778:6;5771:4;5760:9;5756:20;5749:36;5189:602;;;;;:::o;6512:184::-;6582:6;6635:2;6623:9;6614:7;6610:23;6606:32;6603:52;;;6651:1;6648;6641:12;6603:52;-1:-1:-1;6674:16:71;;6512:184;-1:-1:-1;6512:184:71:o;7108:521::-;7185:4;7191:6;7251:11;7238:25;7345:2;7341:7;7330:8;7314:14;7310:29;7306:43;7286:18;7282:68;7272:96;;7364:1;7361;7354:12;7272:96;7391:33;;7443:20;;;-1:-1:-1;7486:18:71;7475:30;;7472:50;;;7518:1;7515;7508:12;7472:50;7551:4;7539:17;;-1:-1:-1;7582:14:71;7578:27;;;7568:38;;7565:58;;;7619:1;7616;7609:12;7565:58;7108:521;;;;;:::o;7634:331::-;7739:9;7750;7792:8;7780:10;7777:24;7774:44;;;7814:1;7811;7804:12;7774:44;7843:6;7833:8;7830:20;7827:40;;;7863:1;7860;7853:12;7827:40;-1:-1:-1;;7889:23:71;;;7934:25;;;;;-1:-1:-1;7634:331:71:o;7970:982::-;8064:6;8072;8080;8133:2;8121:9;8112:7;8108:23;8104:32;8101:52;;;8149:1;8146;8139:12;8101:52;8188:9;8175:23;8207:39;8240:5;8207:39;:::i;:::-;8265:5;-1:-1:-1;8289:2:71;8323:18;;;8310:32;;-1:-1:-1;8393:2:71;8378:18;;8365:32;8416:18;8446:14;;;8443:34;;;8473:1;8470;8463:12;8443:34;8511:6;8500:9;8496:22;8486:32;;8556:7;8549:4;8545:2;8541:13;8537:27;8527:55;;8578:1;8575;8568:12;8527:55;8614:2;8601:16;8636:2;8632;8629:10;8626:36;;;8642:18;;:::i;:::-;8684:53;8727:2;8708:13;;-1:-1:-1;;8704:27:71;8700:36;;8684:53;:::i;:::-;8671:66;;8760:2;8753:5;8746:17;8800:7;8795:2;8790;8786;8782:11;8778:20;8775:33;8772:53;;;8821:1;8818;8811:12;8772:53;8876:2;8871;8867;8863:11;8858:2;8851:5;8847:14;8834:45;8920:1;8915:2;8910;8903:5;8899:14;8895:23;8888:34;;8941:5;8931:15;;;;;7970:982;;;;;:::o;9660:127::-;9721:10;9716:3;9712:20;9709:1;9702:31;9752:4;9749:1;9742:15;9776:4;9773:1;9766:15;9792:127;9853:10;9848:3;9844:20;9841:1;9834:31;9884:4;9881:1;9874:15;9908:4;9905:1;9898:15;9924:135;9963:3;9984:17;;;9981:43;;10004:18;;:::i;:::-;-1:-1:-1;10051:1:71;10040:13;;9924:135::o;10343:125::-;10408:9;;;10429:10;;;10426:36;;;10442:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "gasLimitPerOperation()": "18b9997b",
    "getDeposit()": "c399ec88",
    "nftPassAddress()": "66c00cca",
    "owner()": "8da5cb5b",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "setEntryPoint(address)": "584465f2",
    "setNftPassAddress(address)": "d97e0ada",
    "setWhiteAddresses(address[])": "eb4bd055",
    "spendingLimitPerOperation()": "8c8e9379",
    "timeLimitInSecond()": "e17282db",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "whiteAddresses(uint256)": "a0ac611b",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftPassAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimitPerOperation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_spendingLimitPerOperation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeLimitInSecond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExceedingGasLimit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimitPerOperation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftPassAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"name\":\"setEntryPoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNftPassAddress\",\"type\":\"address\"}],\"name\":\"setNftPassAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"setWhiteAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spendingLimitPerOperation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLimitInSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whiteAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp  zero length to signify postOp is not required.\",\"deadline\":\"the last block timestamp this operation is valid, or zero if it is valid indefinitely.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agree to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HackathonPaymaster.sol\":\"HackathonPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xd73ea4e2674ec7847b2aac4ef36e86b0a7db6823ad34163c18aca4c1059aefcc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ba3d967d608e0593987cf32e446a11d7042eaf1c3f453fa52febe5a3d1cde35\",\"dweb:/ipfs/QmbtqHZAwUncGCdXN9psP8LM6QitqU3kvJYvYmuJEYgHZ6\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd9571db5b8274d652959060476948d100b07bf5a7e2468bde3b75063d68d3e26\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://73fbcd16fc5aa422bc14e5f8e312aa8a1aa68a5b1cdbe89536954752df66b326\",\"dweb:/ipfs/Qmf4HRjWGump1Hn7um5yEFzjd4EpymEco8tbPyMcn85M9C\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x51e4234bc9255d961214066d0eb08cbabea3821db32dc62215672f6497962ef9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://67db72c8acb87fb77536c15ee14e65fb74f5c76cdf6a46dd0f45d88d5d20afec\",\"dweb:/ipfs/QmSiZd2KGfX5z9iEjGDoYfY8ync9kTUfdYMh1i8dnQFQUT\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x4f5ef1112ffff9eea6083c900c1fd3e3c7cceb860b103c8b0ce36b0cfbc9bc33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b7bc9d9757aa9cdbdbd264fd1dd2f30496e3886ebd2b8c7cf0392668316c3c61\",\"dweb:/ipfs/QmR7idTPxRtBRgj7iveQnMySY1ZQEZccNK9aEJLb68t2hT\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x1b7b01d6eb948213ad51b33c3951469af52e8001c1827dabacbd55eb1f0c90a3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d164d7b2d8d24ceda5f395c435d457a19a2f3bfcb496317a7958f1a43da4672b\",\"dweb:/ipfs/QmXJ8SxCF8jZ1oLgDXvCXGi3xk7oVWMYz8MwtNSxVwzBCb\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x548134a6c652a9e4730beb582b94785587f93f91b0dded2a27bbda3048911ddd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4156e408fb62a783d11293fc5b6880ec786e0d4b704abbd96fbe06ac3b03b806\",\"dweb:/ipfs/QmWoiGVR8xUQbHoP5AhM29DkezWGC7Cs66stCpMqkkP6Lq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/Hackathon721.sol\":{\"keccak256\":\"0x4df926e0cab83a4bd7377d90a378a3ca4a4deefbf784f27ab91436730801583c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f108194b041b4260cb4f36e4acffeba0881a3a38e095e2b48342c831522fd386\",\"dweb:/ipfs/Qmc2SZciBMDfHw5cqaLYnhCuv8xspDu3LSSBQTwcc84DBz\"]},\"src/HackathonPaymaster.sol\":{\"keccak256\":\"0x557cdd443d7ae58e9b420c76118c43f9df54f76fb334d49e6d551c90aefefc7d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c25dd3fd6ba7f8d0c4ce08c1addb52393647aece332534272eec1f37b1c797cf\",\"dweb:/ipfs/QmWNtZJ1Bdv8CoHbN5zDitQHnYSUEH3Q9wnpwQ9v8QYGLj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nftPassAddress",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "addresses",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "_gasLimitPerOperation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_spendingLimitPerOperation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_timeLimitInSecond",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExceedingGasLimit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gasLimitPerOperation",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftPassAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntryPoint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newNftPassAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNftPassAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "addresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWhiteAddresses"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "spendingLimitPerOperation",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "timeLimitInSecond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "whiteAddresses",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp  zero length to signify postOp is not required.",
              "deadline": "the last block timestamp this operation is valid, or zero if it is valid indefinitely.      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agree to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/HackathonPaymaster.sol": "HackathonPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BasePaymaster.sol": {
        "keccak256": "0xd73ea4e2674ec7847b2aac4ef36e86b0a7db6823ad34163c18aca4c1059aefcc",
        "urls": [
          "bzz-raw://6ba3d967d608e0593987cf32e446a11d7042eaf1c3f453fa52febe5a3d1cde35",
          "dweb:/ipfs/QmbtqHZAwUncGCdXN9psP8LM6QitqU3kvJYvYmuJEYgHZ6"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xd9571db5b8274d652959060476948d100b07bf5a7e2468bde3b75063d68d3e26",
        "urls": [
          "bzz-raw://73fbcd16fc5aa422bc14e5f8e312aa8a1aa68a5b1cdbe89536954752df66b326",
          "dweb:/ipfs/Qmf4HRjWGump1Hn7um5yEFzjd4EpymEco8tbPyMcn85M9C"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x51e4234bc9255d961214066d0eb08cbabea3821db32dc62215672f6497962ef9",
        "urls": [
          "bzz-raw://67db72c8acb87fb77536c15ee14e65fb74f5c76cdf6a46dd0f45d88d5d20afec",
          "dweb:/ipfs/QmSiZd2KGfX5z9iEjGDoYfY8ync9kTUfdYMh1i8dnQFQUT"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x4f5ef1112ffff9eea6083c900c1fd3e3c7cceb860b103c8b0ce36b0cfbc9bc33",
        "urls": [
          "bzz-raw://b7bc9d9757aa9cdbdbd264fd1dd2f30496e3886ebd2b8c7cf0392668316c3c61",
          "dweb:/ipfs/QmR7idTPxRtBRgj7iveQnMySY1ZQEZccNK9aEJLb68t2hT"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0x1b7b01d6eb948213ad51b33c3951469af52e8001c1827dabacbd55eb1f0c90a3",
        "urls": [
          "bzz-raw://d164d7b2d8d24ceda5f395c435d457a19a2f3bfcb496317a7958f1a43da4672b",
          "dweb:/ipfs/QmXJ8SxCF8jZ1oLgDXvCXGi3xk7oVWMYz8MwtNSxVwzBCb"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x548134a6c652a9e4730beb582b94785587f93f91b0dded2a27bbda3048911ddd",
        "urls": [
          "bzz-raw://4156e408fb62a783d11293fc5b6880ec786e0d4b704abbd96fbe06ac3b03b806",
          "dweb:/ipfs/QmWoiGVR8xUQbHoP5AhM29DkezWGC7Cs66stCpMqkkP6Lq"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/Hackathon721.sol": {
        "keccak256": "0x4df926e0cab83a4bd7377d90a378a3ca4a4deefbf784f27ab91436730801583c",
        "urls": [
          "bzz-raw://f108194b041b4260cb4f36e4acffeba0881a3a38e095e2b48342c831522fd386",
          "dweb:/ipfs/Qmc2SZciBMDfHw5cqaLYnhCuv8xspDu3LSSBQTwcc84DBz"
        ],
        "license": "MIT"
      },
      "src/HackathonPaymaster.sol": {
        "keccak256": "0x557cdd443d7ae58e9b420c76118c43f9df54f76fb334d49e6d551c90aefefc7d",
        "urls": [
          "bzz-raw://c25dd3fd6ba7f8d0c4ce08c1addb52393647aece332534272eec1f37b1c797cf",
          "dweb:/ipfs/QmWNtZJ1Bdv8CoHbN5zDitQHnYSUEH3Q9wnpwQ9v8QYGLj"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/HackathonPaymaster.sol",
    "id": 41115,
    "exportedSymbols": {
      "Address": [
        37434
      ],
      "Base64": [
        37481
      ],
      "BasePaymaster": [
        3084
      ],
      "Context": [
        37503
      ],
      "ERC165": [
        38123
      ],
      "ERC721": [
        36558
      ],
      "ERC721Enumerable": [
        37046
      ],
      "Hackathon721": [
        40813
      ],
      "HackathonPaymaster": [
        41114
      ],
      "IAggregator": [
        5657
      ],
      "IERC165": [
        38135
      ],
      "IERC721": [
        36674
      ],
      "IERC721Enumerable": [
        37077
      ],
      "IERC721Metadata": [
        37104
      ],
      "IERC721Receiver": [
        36692
      ],
      "IEntryPoint": [
        5846
      ],
      "IPaymaster": [
        5881
      ],
      "IStakeManager": [
        5985
      ],
      "Math": [
        39000
      ],
      "Ownable": [
        35008
      ],
      "Strings": [
        37738
      ],
      "UserOperation": [
        6010
      ],
      "UserOperationLib": [
        6114
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:3370:66",
    "nodes": [
      {
        "id": 40815,
        "nodeType": "PragmaDirective",
        "src": "36:24:66",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 40816,
        "nodeType": "ImportDirective",
        "src": "99:69:66",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "file": "../lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41115,
        "sourceUnit": 3085,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40817,
        "nodeType": "ImportDirective",
        "src": "169:74:66",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41115,
        "sourceUnit": 36675,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40818,
        "nodeType": "ImportDirective",
        "src": "244:28:66",
        "nodes": [],
        "absolutePath": "src/Hackathon721.sol",
        "file": "./Hackathon721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41115,
        "sourceUnit": 40814,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41114,
        "nodeType": "ContractDefinition",
        "src": "303:3102:66",
        "nodes": [
          {
            "id": 40824,
            "nodeType": "UsingForDirective",
            "src": "354:41:66",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40821,
              "name": "UserOperationLib",
              "nameLocations": [
                "360:16:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6114,
              "src": "360:16:66"
            },
            "typeName": {
              "id": 40823,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40822,
                "name": "UserOperation",
                "nameLocations": [
                  "381:13:66"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6010,
                "src": "381:13:66"
              },
              "referencedDeclaration": 6010,
              "src": "381:13:66",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$6010_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 40826,
            "nodeType": "ErrorDefinition",
            "src": "401:26:66",
            "nodes": [],
            "errorSelector": "083051b6",
            "name": "ExceedingGasLimit",
            "nameLocation": "407:17:66",
            "parameters": {
              "id": 40825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "424:2:66"
            }
          },
          {
            "id": 40828,
            "nodeType": "VariableDeclaration",
            "src": "433:29:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "66c00cca",
            "mutability": "mutable",
            "name": "nftPassAddress",
            "nameLocation": "448:14:66",
            "scope": 41114,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40827,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "433:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40831,
            "nodeType": "VariableDeclaration",
            "src": "468:31:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0ac611b",
            "mutability": "mutable",
            "name": "whiteAddresses",
            "nameLocation": "485:14:66",
            "scope": 41114,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 40829,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "468:7:66",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40830,
              "nodeType": "ArrayTypeName",
              "src": "468:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40833,
            "nodeType": "VariableDeclaration",
            "src": "505:35:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "18b9997b",
            "mutability": "mutable",
            "name": "gasLimitPerOperation",
            "nameLocation": "520:20:66",
            "scope": 41114,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40832,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40835,
            "nodeType": "VariableDeclaration",
            "src": "546:40:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "8c8e9379",
            "mutability": "mutable",
            "name": "spendingLimitPerOperation",
            "nameLocation": "561:25:66",
            "scope": 41114,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40834,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "546:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40837,
            "nodeType": "VariableDeclaration",
            "src": "592:32:66",
            "nodes": [],
            "constant": false,
            "functionSelector": "e17282db",
            "mutability": "mutable",
            "name": "timeLimitInSecond",
            "nameLocation": "607:17:66",
            "scope": 41114,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40836,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "592:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40878,
            "nodeType": "FunctionDefinition",
            "src": "631:529:66",
            "nodes": [],
            "body": {
              "id": 40877,
              "nodeType": "Block",
              "src": "909:251:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40857,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40828,
                      "src": "919:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40858,
                      "name": "_nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40842,
                      "src": "936:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "919:32:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40860,
                  "nodeType": "ExpressionStatement",
                  "src": "919:32:66"
                },
                {
                  "expression": {
                    "id": 40863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40861,
                      "name": "whiteAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40831,
                      "src": "961:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40862,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40845,
                      "src": "978:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "961:26:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 40864,
                  "nodeType": "ExpressionStatement",
                  "src": "961:26:66"
                },
                {
                  "expression": {
                    "id": 40867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40865,
                      "name": "gasLimitPerOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40833,
                      "src": "997:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40866,
                      "name": "_gasLimitPerOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40847,
                      "src": "1020:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "997:44:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40868,
                  "nodeType": "ExpressionStatement",
                  "src": "997:44:66"
                },
                {
                  "expression": {
                    "id": 40871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40869,
                      "name": "spendingLimitPerOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40835,
                      "src": "1051:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40870,
                      "name": "_spendingLimitPerOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40849,
                      "src": "1079:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1051:54:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40872,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:54:66"
                },
                {
                  "expression": {
                    "id": 40875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40873,
                      "name": "timeLimitInSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40837,
                      "src": "1115:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40874,
                      "name": "_timeLimitInSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40851,
                      "src": "1135:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1115:38:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40876,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:38:66"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 40854,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40840,
                    "src": "892:11:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$5846",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 40855,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 40853,
                  "name": "BasePaymaster",
                  "nameLocations": [
                    "878:13:66"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3084,
                  "src": "878:13:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "878:26:66"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 40852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40840,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "664:11:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40878,
                  "src": "652:23:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$5846",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 40839,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40838,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "652:11:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5846,
                      "src": "652:11:66"
                    },
                    "referencedDeclaration": 5846,
                    "src": "652:11:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$5846",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40842,
                  "mutability": "mutable",
                  "name": "_nftPassAddress",
                  "nameLocation": "693:15:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40878,
                  "src": "685:23:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40845,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "735:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40878,
                  "src": "718:26:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40843,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "718:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 40844,
                    "nodeType": "ArrayTypeName",
                    "src": "718:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40847,
                  "mutability": "mutable",
                  "name": "_gasLimitPerOperation",
                  "nameLocation": "762:21:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40878,
                  "src": "754:29:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40849,
                  "mutability": "mutable",
                  "name": "_spendingLimitPerOperation",
                  "nameLocation": "801:26:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40878,
                  "src": "793:34:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40851,
                  "mutability": "mutable",
                  "name": "_timeLimitInSecond",
                  "nameLocation": "845:18:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40878,
                  "src": "837:26:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:227:66"
            },
            "returnParameters": {
              "id": 40856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:66"
            },
            "scope": 41114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40890,
            "nodeType": "FunctionDefinition",
            "src": "1166:124:66",
            "nodes": [],
            "body": {
              "id": 40889,
              "nodeType": "Block",
              "src": "1239:51:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40885,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40828,
                      "src": "1249:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40886,
                      "name": "newNftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40880,
                      "src": "1266:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1249:34:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40888,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:34:66"
                }
              ]
            },
            "functionSelector": "d97e0ada",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40883,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40882,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1229:9:66"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34927,
                  "src": "1229:9:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "1229:9:66"
              }
            ],
            "name": "setNftPassAddress",
            "nameLocation": "1175:17:66",
            "parameters": {
              "id": 40881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40880,
                  "mutability": "mutable",
                  "name": "newNftPassAddress",
                  "nameLocation": "1201:17:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40890,
                  "src": "1193:25:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1192:27:66"
            },
            "returnParameters": {
              "id": 40884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:0:66"
            },
            "scope": 41114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40903,
            "nodeType": "FunctionDefinition",
            "src": "1296:117:66",
            "nodes": [],
            "body": {
              "id": 40902,
              "nodeType": "Block",
              "src": "1370:43:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40898,
                      "name": "whiteAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40831,
                      "src": "1380:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40899,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40893,
                      "src": "1397:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1380:26:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 40901,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:26:66"
                }
              ]
            },
            "functionSelector": "eb4bd055",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40896,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40895,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1360:9:66"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34927,
                  "src": "1360:9:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "1360:9:66"
              }
            ],
            "name": "setWhiteAddresses",
            "nameLocation": "1305:17:66",
            "parameters": {
              "id": 40894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40893,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "1340:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40903,
                  "src": "1323:26:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40891,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1323:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 40892,
                    "nodeType": "ArrayTypeName",
                    "src": "1323:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1322:28:66"
            },
            "returnParameters": {
              "id": 40897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:66"
            },
            "scope": 41114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40984,
            "nodeType": "FunctionDefinition",
            "src": "1419:755:66",
            "nodes": [],
            "body": {
              "id": 40983,
              "nodeType": "Block",
              "src": "1628:546:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40919,
                    40921,
                    40923
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40919,
                      "mutability": "mutable",
                      "name": "dest",
                      "nameLocation": "1647:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 40983,
                      "src": "1639:12:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 40918,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1639:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 40921,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1661:5:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 40983,
                      "src": "1653:13:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1653:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 40923,
                      "mutability": "mutable",
                      "name": "func",
                      "nameLocation": "1681:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 40983,
                      "src": "1668:17:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 40922,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1668:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40938,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 40926,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40906,
                            "src": "1700:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$6010_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 40927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1707:8:66",
                          "memberName": "callData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5995,
                          "src": "1700:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 40929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "1700:19:66",
                        "startExpression": {
                          "hexValue": "34",
                          "id": 40928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1716:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 40931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1722:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40930,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1722:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 40933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1731:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 40932,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1731:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 40935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1740:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 40934,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1740:5:66",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 40936,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1721:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 40924,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1689:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 40925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1693:6:66",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1689:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 40937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1689:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(address payable,uint256,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1638:109:66"
                },
                {
                  "condition": {
                    "id": 40942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1761:21:66",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 40940,
                          "name": "dest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40919,
                          "src": "1777:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40939,
                        "name": "_isInWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41016,
                        "src": "1762:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 40941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1762:20:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40948,
                  "nodeType": "IfStatement",
                  "src": "1757:66:66",
                  "trueBody": {
                    "id": 40947,
                    "nodeType": "Block",
                    "src": "1784:39:66",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 40943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1806:2:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 40944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1810:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 40945,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1805:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 40917,
                        "id": 40946,
                        "nodeType": "Return",
                        "src": "1798:14:66"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40950,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40906,
                          "src": "1854:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$6010_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 40951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1861:12:66",
                        "memberName": "callGasLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5997,
                        "src": "1854:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40949,
                      "name": "_exceedsGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41032,
                      "src": "1837:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 40952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:37:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40958,
                  "nodeType": "IfStatement",
                  "src": "1833:82:66",
                  "trueBody": {
                    "id": 40957,
                    "nodeType": "Block",
                    "src": "1876:39:66",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 40953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1898:2:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 40954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1902:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 40955,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1897:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 40917,
                        "id": 40956,
                        "nodeType": "Return",
                        "src": "1890:14:66"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 40960,
                        "name": "maxCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40910,
                        "src": "1951:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40959,
                      "name": "_exceedsSpendingLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41048,
                      "src": "1929:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 40961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1929:30:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40967,
                  "nodeType": "IfStatement",
                  "src": "1925:75:66",
                  "trueBody": {
                    "id": 40966,
                    "nodeType": "Block",
                    "src": "1961:39:66",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 40962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1983:2:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 40963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1987:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 40964,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1982:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 40917,
                        "id": 40965,
                        "nodeType": "Return",
                        "src": "1975:14:66"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 40972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2014:33:66",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 40969,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40906,
                            "src": "2033:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$6010_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 40970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2040:6:66",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5989,
                          "src": "2033:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40968,
                        "name": "_hasAvailablePass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41113,
                        "src": "2015:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 40971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2015:32:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40978,
                  "nodeType": "IfStatement",
                  "src": "2010:78:66",
                  "trueBody": {
                    "id": 40977,
                    "nodeType": "Block",
                    "src": "2049:39:66",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 40973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2071:2:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 40974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2075:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 40975,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2070:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 40917,
                        "id": 40976,
                        "nodeType": "Return",
                        "src": "2063:14:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 40979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2161:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "30",
                        "id": 40980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 40981,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2160:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$",
                      "typeString": "tuple(literal_string \"\",int_const 0)"
                    }
                  },
                  "functionReturnParameters": 40917,
                  "id": 40982,
                  "nodeType": "Return",
                  "src": "2153:14:66"
                }
              ]
            },
            "baseFunctions": [
              2931
            ],
            "functionSelector": "f465c77e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validatePaymasterUserOp",
            "nameLocation": "1428:23:66",
            "overrides": {
              "id": 40912,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1558:8:66"
            },
            "parameters": {
              "id": 40911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40906,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1475:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40984,
                  "src": "1452:29:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$6010_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 40905,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40904,
                      "name": "UserOperation",
                      "nameLocations": [
                        "1452:13:66"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6010,
                      "src": "1452:13:66"
                    },
                    "referencedDeclaration": 6010,
                    "src": "1452:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$6010_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40908,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1491:10:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40984,
                  "src": "1483:18:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40907,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40910,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "1511:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40984,
                  "src": "1503:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1451:68:66"
            },
            "returnParameters": {
              "id": 40917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40914,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1597:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40984,
                  "src": "1584:20:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40913,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40916,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1614:8:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 40984,
                  "src": "1606:16:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1583:40:66"
            },
            "scope": 41114,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41016,
            "nodeType": "FunctionDefinition",
            "src": "2180:257:66",
            "nodes": [],
            "body": {
              "id": 41015,
              "nodeType": "Block",
              "src": "2247:190:66",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 41011,
                    "nodeType": "Block",
                    "src": "2309:99:66",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 41006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 41002,
                              "name": "whiteAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40831,
                              "src": "2327:14:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 41004,
                            "indexExpression": {
                              "id": 41003,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40992,
                              "src": "2342:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2327:17:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 41005,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40986,
                            "src": "2348:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2327:25:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41010,
                        "nodeType": "IfStatement",
                        "src": "2323:75:66",
                        "trueBody": {
                          "id": 41009,
                          "nodeType": "Block",
                          "src": "2354:44:66",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 41007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2379:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 40990,
                              "id": 41008,
                              "nodeType": "Return",
                              "src": "2372:11:66"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40995,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40992,
                      "src": "2277:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 40996,
                        "name": "whiteAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40831,
                        "src": "2281:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 40997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2296:6:66",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2281:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2277:25:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41012,
                  "initializationExpression": {
                    "assignments": [
                      40992
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 40992,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2270:1:66",
                        "nodeType": "VariableDeclaration",
                        "scope": 41012,
                        "src": "2262:9:66",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40991,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2262:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 40994,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 40993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2274:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2262:13:66"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2304:3:66",
                      "subExpression": {
                        "id": 40999,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40992,
                        "src": "2304:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41001,
                    "nodeType": "ExpressionStatement",
                    "src": "2304:3:66"
                  },
                  "nodeType": "ForStatement",
                  "src": "2257:151:66"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 41013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2425:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 40990,
                  "id": 41014,
                  "nodeType": "Return",
                  "src": "2418:12:66"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isInWhiteList",
            "nameLocation": "2189:14:66",
            "parameters": {
              "id": 40987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40986,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2212:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 41016,
                  "src": "2204:12:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2204:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2203:14:66"
            },
            "returnParameters": {
              "id": 40990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40989,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41016,
                  "src": "2241:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40988,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2240:6:66"
            },
            "scope": 41114,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41032,
            "nodeType": "FunctionDefinition",
            "src": "2443:175:66",
            "nodes": [],
            "body": {
              "id": 41031,
              "nodeType": "Block",
              "src": "2525:93:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 41029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41023,
                        "name": "gasLimitPerOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40833,
                        "src": "2542:20:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 41024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2566:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2542:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41026,
                        "name": "operationGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41018,
                        "src": "2571:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 41027,
                        "name": "gasLimitPerOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40833,
                        "src": "2591:20:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2571:40:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2542:69:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 41022,
                  "id": 41030,
                  "nodeType": "Return",
                  "src": "2535:76:66"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exceedsGasLimit",
            "nameLocation": "2452:16:66",
            "parameters": {
              "id": 41019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41018,
                  "mutability": "mutable",
                  "name": "operationGasLimit",
                  "nameLocation": "2477:17:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 41032,
                  "src": "2469:25:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2468:27:66"
            },
            "returnParameters": {
              "id": 41022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41021,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41032,
                  "src": "2519:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41020,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2518:6:66"
            },
            "scope": 41114,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41048,
            "nodeType": "FunctionDefinition",
            "src": "2624:170:66",
            "nodes": [],
            "body": {
              "id": 41047,
              "nodeType": "Block",
              "src": "2701:93:66",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 41045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41039,
                        "name": "spendingLimitPerOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40835,
                        "src": "2718:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 41040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2747:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2718:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41042,
                        "name": "maxCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41034,
                        "src": "2752:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 41043,
                        "name": "spendingLimitPerOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40835,
                        "src": "2762:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2752:35:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2718:69:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 41038,
                  "id": 41046,
                  "nodeType": "Return",
                  "src": "2711:76:66"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exceedsSpendingLimit",
            "nameLocation": "2633:21:66",
            "parameters": {
              "id": 41035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41034,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "2663:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 41048,
                  "src": "2655:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2655:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2654:17:66"
            },
            "returnParameters": {
              "id": 41038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41037,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41048,
                  "src": "2695:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41036,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2695:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2694:6:66"
            },
            "scope": 41114,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41113,
            "nodeType": "FunctionDefinition",
            "src": "2800:603:66",
            "nodes": [],
            "body": {
              "id": 41112,
              "nodeType": "Block",
              "src": "2872:531:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41057,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "2895:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 41112,
                      "src": "2882:16:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hackathon721_$40813",
                        "typeString": "contract Hackathon721"
                      },
                      "typeName": {
                        "id": 41056,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41055,
                          "name": "Hackathon721",
                          "nameLocations": [
                            "2882:12:66"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40813,
                          "src": "2882:12:66"
                        },
                        "referencedDeclaration": 40813,
                        "src": "2882:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackathon721_$40813",
                          "typeString": "contract Hackathon721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41061,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41059,
                        "name": "nftPassAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40828,
                        "src": "2914:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41058,
                      "name": "Hackathon721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40813,
                      "src": "2901:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hackathon721_$40813_$",
                        "typeString": "type(contract Hackathon721)"
                      }
                    },
                    "id": 41060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2901:28:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hackathon721_$40813",
                      "typeString": "contract Hackathon721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2882:47:66"
                },
                {
                  "assignments": [
                    41063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41063,
                      "mutability": "mutable",
                      "name": "tokenCount",
                      "nameLocation": "2947:10:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 41112,
                      "src": "2939:18:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41062,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2939:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41068,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41066,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41050,
                        "src": "2974:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41064,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41057,
                        "src": "2960:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackathon721_$40813",
                          "typeString": "contract Hackathon721"
                        }
                      },
                      "id": 41065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2964:9:66",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35749,
                      "src": "2960:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2960:21:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2939:42:66"
                },
                {
                  "body": {
                    "id": 41108,
                    "nodeType": "Block",
                    "src": "3033:341:66",
                    "statements": [
                      {
                        "assignments": [
                          41080
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41080,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "3055:7:66",
                            "nodeType": "VariableDeclaration",
                            "scope": 41108,
                            "src": "3047:15:66",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 41079,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3047:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41086,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 41083,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41050,
                              "src": "3089:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 41084,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41070,
                              "src": "3097:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 41081,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41057,
                              "src": "3065:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hackathon721_$40813",
                                "typeString": "contract Hackathon721"
                              }
                            },
                            "id": 41082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3069:19:66",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36770,
                            "src": "3065:23:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 41085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3065:34:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3047:52:66"
                      },
                      {
                        "assignments": [
                          41088
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41088,
                            "mutability": "mutable",
                            "name": "mintedAt",
                            "nameLocation": "3121:8:66",
                            "nodeType": "VariableDeclaration",
                            "scope": 41108,
                            "src": "3113:16:66",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 41087,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3113:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41093,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 41091,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41080,
                              "src": "3148:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 41089,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41057,
                              "src": "3132:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hackathon721_$40813",
                                "typeString": "contract Hackathon721"
                              }
                            },
                            "id": 41090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3136:11:66",
                            "memberName": "getMintedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40741,
                            "src": "3132:15:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 41092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3132:24:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3113:43:66"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 41103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 41094,
                              "name": "timeLimitInSecond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40837,
                              "src": "3246:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 41095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3267:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3246:22:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 41097,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3272:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 41098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3278:9:66",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3272:15:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 41099,
                                "name": "mintedAt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41088,
                                "src": "3290:8:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 41100,
                                "name": "timeLimitInSecond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40837,
                                "src": "3301:17:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3290:28:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3272:46:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3246:72:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41107,
                        "nodeType": "IfStatement",
                        "src": "3242:122:66",
                        "trueBody": {
                          "id": 41106,
                          "nodeType": "Block",
                          "src": "3320:44:66",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 41104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3345:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 41054,
                              "id": 41105,
                              "nodeType": "Return",
                              "src": "3338:11:66"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41073,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41070,
                      "src": "3012:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 41074,
                      "name": "tokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41063,
                      "src": "3016:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3012:14:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41109,
                  "initializationExpression": {
                    "assignments": [
                      41070
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41070,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3005:1:66",
                        "nodeType": "VariableDeclaration",
                        "scope": 41109,
                        "src": "2997:9:66",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2997:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41072,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3009:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2997:13:66"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3028:3:66",
                      "subExpression": {
                        "id": 41076,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41070,
                        "src": "3028:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41078,
                    "nodeType": "ExpressionStatement",
                    "src": "3028:3:66"
                  },
                  "nodeType": "ForStatement",
                  "src": "2992:382:66"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 41110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3391:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 41054,
                  "id": 41111,
                  "nodeType": "Return",
                  "src": "3384:12:66"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasAvailablePass",
            "nameLocation": "2809:17:66",
            "parameters": {
              "id": 41051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41050,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2835:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 41113,
                  "src": "2827:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2827:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2826:16:66"
            },
            "returnParameters": {
              "id": 41054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41113,
                  "src": "2866:4:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41052,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2865:6:66"
            },
            "scope": 41114,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40819,
              "name": "BasePaymaster",
              "nameLocations": [
                "334:13:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3084,
              "src": "334:13:66"
            },
            "id": 40820,
            "nodeType": "InheritanceSpecifier",
            "src": "334:13:66"
          }
        ],
        "canonicalName": "HackathonPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41114,
          3084,
          35008,
          37503,
          5881
        ],
        "name": "HackathonPaymaster",
        "nameLocation": "312:18:66",
        "scope": 41115,
        "usedErrors": [
          40826
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 66
}