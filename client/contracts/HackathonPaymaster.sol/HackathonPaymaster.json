{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftPassAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftPassAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "name": "setEntryPoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newNftPassAddress",
          "type": "address"
        }
      ],
      "name": "setNftPassAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        }
      ],
      "name": "setWhiteAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "whiteAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200118738038062001187833981016040819052620000349162000225565b82620000403362000086565b6200004b81620000d6565b50600280546001600160a01b0319166001600160a01b03841617905580516200007c90600390602084019062000163565b5050505062000325565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000e062000102565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620001615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b828054828255906000526020600020908101928215620001bb579160200282015b82811115620001bb57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000184565b50620001c9929150620001cd565b5090565b5b80821115620001c95760008155600101620001ce565b6001600160a01b0381168114620001fa57600080fd5b50565b80516200020a81620001e4565b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200023b57600080fd5b83516200024881620001e4565b809350506020808501516200025d81620001e4565b60408601519093506001600160401b03808211156200027b57600080fd5b818701915087601f8301126200029057600080fd5b815181811115620002a557620002a56200020f565b8060051b604051601f19603f83011681018181108582111715620002cd57620002cd6200020f565b60405291825284820192508381018501918a831115620002ec57600080fd5b938501935b8285101562000315576200030585620001fd565b84529385019392850192620002f1565b8096505050505050509250925092565b610e5280620003356000396000f3fe6080604052600436106100fe5760003560e01c8063b0d691fe11610095578063d0e30db011610064578063d0e30db014610280578063d97e0ada14610288578063eb4bd055146102a8578063f2fde38b146102c8578063f465c77e146102e857600080fd5b8063b0d691fe14610208578063bb9fe6bf14610228578063c23a5cea1461023d578063c399ec881461025d57600080fd5b8063715018a6116100d1578063715018a6146101955780638da5cb5b146101aa578063a0ac611b146101c8578063a9a23409146101e857600080fd5b80630396cb6014610103578063205c287814610118578063584465f21461013857806366c00cca14610158575b600080fd5b6101166101113660046109c8565b610316565b005b34801561012457600080fd5b50610116610133366004610a0a565b610385565b34801561014457600080fd5b50610116610153366004610a36565b6103db565b34801561016457600080fd5b50600254610178906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a157600080fd5b50610116610405565b3480156101b657600080fd5b506000546001600160a01b0316610178565b3480156101d457600080fd5b506101786101e3366004610a53565b610419565b3480156101f457600080fd5b50610116610203366004610a6c565b610443565b34801561021457600080fd5b50600154610178906001600160a01b031681565b34801561023457600080fd5b5061011661045d565b34801561024957600080fd5b50610116610258366004610a36565b6104c9565b34801561026957600080fd5b50610272610533565b60405190815260200161018c565b6101166105a5565b34801561029457600080fd5b506101166102a3366004610a36565b6105eb565b3480156102b457600080fd5b506101166102c3366004610b42565b610615565b3480156102d457600080fd5b506101166102e3366004610a36565b610634565b3480156102f457600080fd5b50610308610303366004610bf4565b6106b2565b60405161018c929190610c48565b61031e6107ec565b600154604051621cb65b60e51b815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b505050505050565b61038d6107ec565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561036957600080fd5b6103e36107ec565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61040d6107ec565b6104176000610846565b565b6003818154811061042957600080fd5b6000918252602090912001546001600160a01b0316905081565b61044b610896565b610457848484846108ad565b50505050565b6104656107ec565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104b557600080fd5b505af1158015610457573d6000803e3d6000fd5b6104d16107ec565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a09190610c9d565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561051857600080fd5b6105f36107ec565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61061d6107ec565b805161063090600390602084019061094e565b5050565b61063c6107ec565b6001600160a01b0381166106a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6106af81610846565b50565b6002546060906000906001600160a01b031681816370a082316106d860208a018a610a36565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190610c9d565b90506000808061075360608b018b610cb6565b610761916004908290610d04565b81019061076e9190610d2e565b92509250925061077d836108e5565b6107a257600160405180602001604052806000815250909650965050505050506107e4565b83156107c957600060405180602001604052806000815250909650965050505050506107e4565b50506040805160208101909152600081529450600193505050505b935093915050565b6000546001600160a01b031633146104175760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161069d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461041757600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b604482015260640161069d565b6000805b60035481101561094557826001600160a01b03166003828154811061091057610910610ddf565b6000918252602090912001546001600160a01b0316036109335750600192915050565b8061093d81610df5565b9150506108e9565b50600092915050565b8280548282559060005260206000209081019282156109a3579160200282015b828111156109a357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061096e565b506109af9291506109b3565b5090565b5b808211156109af57600081556001016109b4565b6000602082840312156109da57600080fd5b813563ffffffff811681146109ee57600080fd5b9392505050565b6001600160a01b03811681146106af57600080fd5b60008060408385031215610a1d57600080fd5b8235610a28816109f5565b946020939093013593505050565b600060208284031215610a4857600080fd5b81356109ee816109f5565b600060208284031215610a6557600080fd5b5035919050565b60008060008060608587031215610a8257600080fd5b843560038110610a9157600080fd5b9350602085013567ffffffffffffffff80821115610aae57600080fd5b818701915087601f830112610ac257600080fd5b813581811115610ad157600080fd5b886020828501011115610ae357600080fd5b95986020929092019750949560400135945092505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b3a57610b3a610afb565b604052919050565b60006020808385031215610b5557600080fd5b823567ffffffffffffffff80821115610b6d57600080fd5b818501915085601f830112610b8157600080fd5b813581811115610b9357610b93610afb565b8060051b9150610ba4848301610b11565b8181529183018401918481019088841115610bbe57600080fd5b938501935b83851015610be85784359250610bd8836109f5565b8282529385019390850190610bc3565b98975050505050505050565b600080600060608486031215610c0957600080fd5b833567ffffffffffffffff811115610c2057600080fd5b84016101608187031215610c3357600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610c765760208187018101516060868401015201610c59565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610caf57600080fd5b5051919050565b6000808335601e19843603018112610ccd57600080fd5b83018035915067ffffffffffffffff821115610ce857600080fd5b602001915036819003821315610cfd57600080fd5b9250929050565b60008085851115610d1457600080fd5b83861115610d2157600080fd5b5050820193919092039150565b600080600060608486031215610d4357600080fd5b8335610d4e816109f5565b92506020848101359250604085013567ffffffffffffffff80821115610d7357600080fd5b818701915087601f830112610d8757600080fd5b813581811115610d9957610d99610afb565b610dab601f8201601f19168501610b11565b91508082528884828501011115610dc157600080fd5b80848401858401376000848284010152508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b600060018201610e1557634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220038640141b1b096d80d059b2296f423858093bbac73ae6dd0508925028df9a1164736f6c63430008130033",
    "sourceMap": "274:1715:68:-:0;;;445:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;557:11;936:32:38;719:10:52;936:18:38;:32::i;:::-;530:26:8;544:11;530:13;:26::i;:::-;-1:-1:-1;584:14:68::1;:32:::0;;-1:-1:-1;;;;;;584:32:68::1;-1:-1:-1::0;;;;;584:32:68;::::1;;::::0;;626:26;;::::1;::::0;:14:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;445:214:::0;;;274:1715;;2433:187:38;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:38;;;-1:-1:-1;;;;;;2541:17:38;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;569:106:8:-;1094:13:38;:11;:13::i;:::-;644:10:8::1;:24:::0;;-1:-1:-1;;;;;;644:24:8::1;-1:-1:-1::0;;;;;644:24:8;;;::::1;::::0;;;::::1;::::0;;569:106::o;1359:130:38:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:38;719:10:52;1422:23:38;1414:68;;;;-1:-1:-1;;;1414:68:38;;2095:2:74;1414:68:38;;;2077:21:74;;;2114:18;;;2107:30;2173:34;2153:18;;;2146:62;2225:18;;1414:68:38;;;;;;;;1359:130::o;274:1715:68:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;274:1715:68;-1:-1:-1;;;;;274:1715:68;;;;;;;;;;;-1:-1:-1;274:1715:68;;;;;;;-1:-1:-1;274:1715:68;;;-1:-1:-1;274:1715:68;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:144:74;-1:-1:-1;;;;;102:31:74;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:151::-;242:13;;264:44;242:13;264:44;:::i;:::-;163:151;;;:::o;319:127::-;380:10;375:3;371:20;368:1;361:31;411:4;408:1;401:15;435:4;432:1;425:15;451:1437;584:6;592;600;653:2;641:9;632:7;628:23;624:32;621:52;;;669:1;666;659:12;621:52;701:9;695:16;720:44;758:5;720:44;:::i;:::-;783:5;773:15;;;807:2;854;843:9;839:18;833:25;867:46;905:7;867:46;:::i;:::-;983:2;968:18;;962:25;932:7;;-1:-1:-1;;;;;;1036:14:74;;;1033:34;;;1063:1;1060;1053:12;1033:34;1101:6;1090:9;1086:22;1076:32;;1146:7;1139:4;1135:2;1131:13;1127:27;1117:55;;1168:1;1165;1158:12;1117:55;1197:2;1191:9;1219:2;1215;1212:10;1209:36;;;1225:18;;:::i;:::-;1271:2;1268:1;1264:10;1303:2;1297:9;1366:2;1362:7;1357:2;1353;1349:11;1345:25;1337:6;1333:38;1421:6;1409:10;1406:22;1401:2;1389:10;1386:18;1383:46;1380:72;;;1432:18;;:::i;:::-;1468:2;1461:22;1518:18;;;1552:15;;;;-1:-1:-1;1594:11:74;;;1590:20;;;1622:19;;;1619:39;;;1654:1;1651;1644:12;1619:39;1678:11;;;;1698:159;1714:6;1709:3;1706:15;1698:159;;;1780:34;1810:3;1780:34;:::i;:::-;1768:47;;1731:12;;;;1835;;;;1698:159;;;1876:6;1866:16;;;;;;;;451:1437;;;;;:::o;1893:356::-;274:1715:68;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100fe5760003560e01c8063b0d691fe11610095578063d0e30db011610064578063d0e30db014610280578063d97e0ada14610288578063eb4bd055146102a8578063f2fde38b146102c8578063f465c77e146102e857600080fd5b8063b0d691fe14610208578063bb9fe6bf14610228578063c23a5cea1461023d578063c399ec881461025d57600080fd5b8063715018a6116100d1578063715018a6146101955780638da5cb5b146101aa578063a0ac611b146101c8578063a9a23409146101e857600080fd5b80630396cb6014610103578063205c287814610118578063584465f21461013857806366c00cca14610158575b600080fd5b6101166101113660046109c8565b610316565b005b34801561012457600080fd5b50610116610133366004610a0a565b610385565b34801561014457600080fd5b50610116610153366004610a36565b6103db565b34801561016457600080fd5b50600254610178906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a157600080fd5b50610116610405565b3480156101b657600080fd5b506000546001600160a01b0316610178565b3480156101d457600080fd5b506101786101e3366004610a53565b610419565b3480156101f457600080fd5b50610116610203366004610a6c565b610443565b34801561021457600080fd5b50600154610178906001600160a01b031681565b34801561023457600080fd5b5061011661045d565b34801561024957600080fd5b50610116610258366004610a36565b6104c9565b34801561026957600080fd5b50610272610533565b60405190815260200161018c565b6101166105a5565b34801561029457600080fd5b506101166102a3366004610a36565b6105eb565b3480156102b457600080fd5b506101166102c3366004610b42565b610615565b3480156102d457600080fd5b506101166102e3366004610a36565b610634565b3480156102f457600080fd5b50610308610303366004610bf4565b6106b2565b60405161018c929190610c48565b61031e6107ec565b600154604051621cb65b60e51b815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b505050505050565b61038d6107ec565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561036957600080fd5b6103e36107ec565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61040d6107ec565b6104176000610846565b565b6003818154811061042957600080fd5b6000918252602090912001546001600160a01b0316905081565b61044b610896565b610457848484846108ad565b50505050565b6104656107ec565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104b557600080fd5b505af1158015610457573d6000803e3d6000fd5b6104d16107ec565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a09190610c9d565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561051857600080fd5b6105f36107ec565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61061d6107ec565b805161063090600390602084019061094e565b5050565b61063c6107ec565b6001600160a01b0381166106a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6106af81610846565b50565b6002546060906000906001600160a01b031681816370a082316106d860208a018a610a36565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190610c9d565b90506000808061075360608b018b610cb6565b610761916004908290610d04565b81019061076e9190610d2e565b92509250925061077d836108e5565b6107a257600160405180602001604052806000815250909650965050505050506107e4565b83156107c957600060405180602001604052806000815250909650965050505050506107e4565b50506040805160208101909152600081529450600193505050505b935093915050565b6000546001600160a01b031633146104175760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161069d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461041757600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b604482015260640161069d565b6000805b60035481101561094557826001600160a01b03166003828154811061091057610910610ddf565b6000918252602090912001546001600160a01b0316036109335750600192915050565b8061093d81610df5565b9150506108e9565b50600092915050565b8280548282559060005260206000209081019282156109a3579160200282015b828111156109a357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061096e565b506109af9291506109b3565b5090565b5b808211156109af57600081556001016109b4565b6000602082840312156109da57600080fd5b813563ffffffff811681146109ee57600080fd5b9392505050565b6001600160a01b03811681146106af57600080fd5b60008060408385031215610a1d57600080fd5b8235610a28816109f5565b946020939093013593505050565b600060208284031215610a4857600080fd5b81356109ee816109f5565b600060208284031215610a6557600080fd5b5035919050565b60008060008060608587031215610a8257600080fd5b843560038110610a9157600080fd5b9350602085013567ffffffffffffffff80821115610aae57600080fd5b818701915087601f830112610ac257600080fd5b813581811115610ad157600080fd5b886020828501011115610ae357600080fd5b95986020929092019750949560400135945092505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b3a57610b3a610afb565b604052919050565b60006020808385031215610b5557600080fd5b823567ffffffffffffffff80821115610b6d57600080fd5b818501915085601f830112610b8157600080fd5b813581811115610b9357610b93610afb565b8060051b9150610ba4848301610b11565b8181529183018401918481019088841115610bbe57600080fd5b938501935b83851015610be85784359250610bd8836109f5565b8282529385019390850190610bc3565b98975050505050505050565b600080600060608486031215610c0957600080fd5b833567ffffffffffffffff811115610c2057600080fd5b84016101608187031215610c3357600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610c765760208187018101516060868401015201610c59565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610caf57600080fd5b5051919050565b6000808335601e19843603018112610ccd57600080fd5b83018035915067ffffffffffffffff821115610ce857600080fd5b602001915036819003821315610cfd57600080fd5b9250929050565b60008085851115610d1457600080fd5b83861115610d2157600080fd5b5050820193919092039150565b600080600060608486031215610d4357600080fd5b8335610d4e816109f5565b92506020848101359250604085013567ffffffffffffffff80821115610d7357600080fd5b818701915087601f830112610d8757600080fd5b813581811115610d9957610d99610afb565b610dab601f8201601f19168501610b11565b91508082528884828501011115610dc157600080fd5b80848401858401376000848284010152508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b600060018201610e1557634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220038640141b1b096d80d059b2296f423858093bbac73ae6dd0508925028df9a1164736f6c63430008130033",
    "sourceMap": "274:1715:68:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2818:141:8;;;;;;:::i;:::-;;:::i;:::-;;2445:149;;;;;;;;;;-1:-1:-1;2445:149:8;;;;;:::i;:::-;;:::i;569:106::-;;;;;;;;;;-1:-1:-1;569:106:8;;;;;:::i;:::-;;:::i;372:29:68:-;;;;;;;;;;-1:-1:-1;372:29:68;;;;-1:-1:-1;;;;;372:29:68;;;;;;-1:-1:-1;;;;;1219:32:74;;;1201:51;;1189:2;1174:18;372:29:68;;;;;;;;1831:101:38;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:38;1273:6;-1:-1:-1;;;;;1273:6:38;1201:85;;407:31:68;;;;;;;;;;-1:-1:-1;407:31:68;;;;;:::i;:::-;;:::i;867:186:8:-;;;;;;;;;;-1:-1:-1;867:186:8;;;;;:::i;:::-;;:::i;447:29::-;;;;;;;;;;-1:-1:-1;447:29:8;;;;-1:-1:-1;;;;;447:29:8;;;3312:83;;;;;;;;;;;;;:::i;3614:133::-;;;;;;;;;;-1:-1:-1;3614:133:8;;;;;:::i;:::-;;:::i;3042:111::-;;;;;;;;;;;;;:::i;:::-;;;2913:25:74;;;2901:2;2886:18;3042:111:8;2767:177:74;2198:105:8;;;:::i;665:124:68:-;;;;;;;;;;-1:-1:-1;665:124:68;;;;;:::i;:::-;;:::i;795:117::-;;;;;;;;;;-1:-1:-1;795:117:68;;;;;:::i;:::-;;:::i;2081:198:38:-;;;;;;;;;;-1:-1:-1;2081:198:38;;;;;:::i;:::-;;:::i;918:778:68:-;;;;;;;;;;-1:-1:-1;918:778:68;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2818:141:8:-;1094:13:38;:11;:13::i;:::-;2897:10:8::1;::::0;:55:::1;::::0;-1:-1:-1;;;2897:55:8;;5970:10:74;5958:23;;2897:55:8::1;::::0;::::1;5940:42:74::0;-1:-1:-1;;;;;2897:10:8;;::::1;::::0;:19:::1;::::0;2925:9:::1;::::0;5913:18:74;;2897:55:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2818:141:::0;:::o;2445:149::-;1094:13:38;:11;:13::i;:::-;2541:10:8::1;::::0;:46:::1;::::0;-1:-1:-1;;;2541:46:8;;-1:-1:-1;;;;;6201:32:74;;;2541:46:8::1;::::0;::::1;6183:51:74::0;6250:18;;;6243:34;;;2541:10:8;;::::1;::::0;:21:::1;::::0;6156:18:74;;2541:46:8::1;;;;;;;;;;;;;;;;;::::0;::::1;569:106:::0;1094:13:38;:11;:13::i;:::-;644:10:8::1;:24:::0;;-1:-1:-1;;;;;;644:24:8::1;-1:-1:-1::0;;;;;644:24:8;;;::::1;::::0;;;::::1;::::0;;569:106::o;1831:101:38:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;407:31:68:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;407:31:68;;-1:-1:-1;407:31:68;:::o;867:186:8:-;975:24;:22;:24::i;:::-;1009:37;1017:4;1023:7;;1032:13;1009:7;:37::i;:::-;867:186;;;;:::o;3312:83::-;1094:13:38;:11;:13::i;:::-;3364:10:8::1;;;;;;;;;-1:-1:-1::0;;;;;3364:10:8::1;-1:-1:-1::0;;;;;3364:22:8::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3614:133:::0;1094:13:38;:11;:13::i;:::-;3699:10:8::1;::::0;:41:::1;::::0;-1:-1:-1;;;3699:41:8;;-1:-1:-1;;;;;1219:32:74;;;3699:41:8::1;::::0;::::1;1201:51:74::0;3699:10:8;;::::1;::::0;:24:::1;::::0;1174:18:74;;3699:41:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3614:133:::0;:::o;3042:111::-;3111:10;;:35;;-1:-1:-1;;;3111:35:8;;3140:4;3111:35;;;1201:51:74;3085:7:8;;-1:-1:-1;;;;;3111:10:8;;:20;;1174:18:74;;3111:35:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3104:42;;3042:111;:::o;2198:105::-;2242:10;;:54;;-1:-1:-1;;;2242:54:8;;2290:4;2242:54;;;1201:51:74;-1:-1:-1;;;;;2242:10:8;;;;:20;;2271:9;;1174:18:74;;2242:54:8;;;;;;;;;;;;;;;;;;;665:124:68;1094:13:38;:11;:13::i;:::-;748:14:68::1;:34:::0;;-1:-1:-1;;;;;;748:34:68::1;-1:-1:-1::0;;;;;748:34:68;;;::::1;::::0;;;::::1;::::0;;665:124::o;795:117::-;1094:13:38;:11;:13::i;:::-;879:26:68;;::::1;::::0;:14:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;795:117:::0;:::o;2081:198:38:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:38;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:38;;6903:2:74;2161:73:38::1;::::0;::::1;6885:21:74::0;6942:2;6922:18;;;6915:30;6981:34;6961:18;;;6954:62;-1:-1:-1;;;7032:18:74;;;7025:36;7078:19;;2161:73:38::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;918:778:68:-;1167:14;;1083:20;;1105:16;;-1:-1:-1;;;;;1167:14:68;1105:16;1167:14;1213:21;1235:13;;;;:6;:13;:::i;:::-;1213:36;;-1:-1:-1;;;;;;1213:36:68;;;;;;;-1:-1:-1;;;;;1219:32:74;;;1213:36:68;;;1201:51:74;1174:18;;1213:36:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1192:57;-1:-1:-1;1261:12:68;;;1322:15;;;;:6;:15;:::i;:::-;:19;;1338:1;;1322:19;;;:::i;:::-;1311:58;;;;;;;:::i;:::-;1260:109;;;;;;1384:20;1399:4;1384:14;:20::i;:::-;1379:66;;1432:1;1420:14;;;;;;;;;;;;;;;;;;;;;;;;1379:66;1459:14;;1455:235;;1560:1;1548:14;;;;;;;;;;;;;;;;;;;;;;;;1455:235;-1:-1:-1;;1665:14:68;;;;;;;;;-1:-1:-1;1665:14:68;;;-1:-1:-1;1677:1:68;;-1:-1:-1;;;;918:778:68;;;;;;;:::o;1359:130:38:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:38;719:10:52;1422:23:38;1414:68;;;;-1:-1:-1;;;1414:68:38;;9159:2:74;1414:68:38;;;9141:21:74;;;9178:18;;;9171:30;9237:34;9217:18;;;9210:62;9289:18;;1414:68:38;8957:356:74;2433:187:38;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:38;;;-1:-1:-1;;;;;;2541:17:38;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;3811:110:8:-;3902:10;;-1:-1:-1;;;;;3902:10:8;3880;:33;3872:42;;;;;1813:285;2068:23;;-1:-1:-1;;;2068:23:8;;9520:2:74;2068:23:8;;;9502:21:74;9559:2;9539:18;;;9532:30;-1:-1:-1;;;9578:18:74;;;9571:43;9631:18;;2068:23:8;9318:337:74;1702:285:68;1763:4;;1807:151;1831:14;:21;1827:25;;1807:151;;;1898:4;-1:-1:-1;;;;;1877:25:68;:14;1892:1;1877:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1877:17:68;:25;1873:75;;-1:-1:-1;1929:4:68;;1702:285;-1:-1:-1;;1702:285:68:o;1873:75::-;1854:3;;;;:::i;:::-;;;;1807:151;;;-1:-1:-1;1975:5:68;;1702:285;-1:-1:-1;;1702:285:68:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:276:74;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;199:61;279:5;14:276;-1:-1:-1;;;14:276:74:o;295:139::-;-1:-1:-1;;;;;378:31:74;;368:42;;358:70;;424:1;421;414:12;439:331;515:6;523;576:2;564:9;555:7;551:23;547:32;544:52;;;592:1;589;582:12;544:52;631:9;618:23;650:39;683:5;650:39;:::i;:::-;708:5;760:2;745:18;;;;732:32;;-1:-1:-1;;;439:331:74:o;775:275::-;854:6;907:2;895:9;886:7;882:23;878:32;875:52;;;923:1;920;913:12;875:52;962:9;949:23;981:39;1014:5;981:39;:::i;1263:180::-;1322:6;1375:2;1363:9;1354:7;1350:23;1346:32;1343:52;;;1391:1;1388;1381:12;1343:52;-1:-1:-1;1414:23:74;;1263:180;-1:-1:-1;1263:180:74:o;1448:818::-;1551:6;1559;1567;1575;1628:2;1616:9;1607:7;1603:23;1599:32;1596:52;;;1644:1;1641;1634:12;1596:52;1683:9;1670:23;1722:1;1715:5;1712:12;1702:40;;1738:1;1735;1728:12;1702:40;1761:5;-1:-1:-1;1817:2:74;1802:18;;1789:32;1840:18;1870:14;;;1867:34;;;1897:1;1894;1887:12;1867:34;1935:6;1924:9;1920:22;1910:32;;1980:7;1973:4;1969:2;1965:13;1961:27;1951:55;;2002:1;1999;1992:12;1951:55;2042:2;2029:16;2068:2;2060:6;2057:14;2054:34;;;2084:1;2081;2074:12;2054:34;2129:7;2124:2;2115:6;2111:2;2107:15;2103:24;2100:37;2097:57;;;2150:1;2147;2140:12;2097:57;1448:818;;2181:2;2173:11;;;;;-1:-1:-1;2203:6:74;;2256:2;2241:18;2228:32;;-1:-1:-1;1448:818:74;-1:-1:-1;;;1448:818:74:o;3209:127::-;3270:10;3265:3;3261:20;3258:1;3251:31;3301:4;3298:1;3291:15;3325:4;3322:1;3315:15;3341:275;3412:2;3406:9;3477:2;3458:13;;-1:-1:-1;;3454:27:74;3442:40;;3512:18;3497:34;;3533:22;;;3494:62;3491:88;;;3559:18;;:::i;:::-;3595:2;3588:22;3341:275;;-1:-1:-1;3341:275:74:o;3621:1029::-;3705:6;3736:2;3779;3767:9;3758:7;3754:23;3750:32;3747:52;;;3795:1;3792;3785:12;3747:52;3835:9;3822:23;3864:18;3905:2;3897:6;3894:14;3891:34;;;3921:1;3918;3911:12;3891:34;3959:6;3948:9;3944:22;3934:32;;4004:7;3997:4;3993:2;3989:13;3985:27;3975:55;;4026:1;4023;4016:12;3975:55;4062:2;4049:16;4084:2;4080;4077:10;4074:36;;;4090:18;;:::i;:::-;4136:2;4133:1;4129:10;4119:20;;4159:28;4183:2;4179;4175:11;4159:28;:::i;:::-;4221:15;;;4291:11;;;4287:20;;;4252:12;;;;4319:19;;;4316:39;;;4351:1;4348;4341:12;4316:39;4375:11;;;;4395:225;4411:6;4406:3;4403:15;4395:225;;;4491:3;4478:17;4465:30;;4508:39;4541:5;4508:39;:::i;:::-;4560:18;;;4428:12;;;;4598;;;;4395:225;;;4639:5;3621:1029;-1:-1:-1;;;;;;;;3621:1029:74:o;4655:529::-;4765:6;4773;4781;4834:2;4822:9;4813:7;4809:23;4805:32;4802:52;;;4850:1;4847;4840:12;4802:52;4890:9;4877:23;4923:18;4915:6;4912:30;4909:50;;;4955:1;4952;4945:12;4909:50;4978:22;;5034:3;5016:16;;;5012:26;5009:46;;;5051:1;5048;5041:12;5009:46;5074:2;5123;5108:18;;5095:32;;-1:-1:-1;5174:2:74;5159:18;;;5146:32;;4655:529;-1:-1:-1;;;4655:529:74:o;5189:602::-;5364:2;5353:9;5346:21;5327:4;5396:6;5390:13;5439:6;5434:2;5423:9;5419:18;5412:34;5464:1;5474:144;5488:6;5485:1;5482:13;5474:144;;;5601:4;5585:14;;;5581:25;;5575:32;5570:2;5551:17;;;5547:26;5540:68;5503:12;5474:144;;;5478:3;5667:1;5662:2;5653:6;5642:9;5638:22;5634:31;5627:42;5737:2;5730;5726:7;5721:2;5713:6;5709:15;5705:29;5694:9;5690:45;5686:54;5678:62;;;5778:6;5771:4;5760:9;5756:20;5749:36;5189:602;;;;;:::o;6512:184::-;6582:6;6635:2;6623:9;6614:7;6610:23;6606:32;6603:52;;;6651:1;6648;6641:12;6603:52;-1:-1:-1;6674:16:74;;6512:184;-1:-1:-1;6512:184:74:o;7108:521::-;7185:4;7191:6;7251:11;7238:25;7345:2;7341:7;7330:8;7314:14;7310:29;7306:43;7286:18;7282:68;7272:96;;7364:1;7361;7354:12;7272:96;7391:33;;7443:20;;;-1:-1:-1;7486:18:74;7475:30;;7472:50;;;7518:1;7515;7508:12;7472:50;7551:4;7539:17;;-1:-1:-1;7582:14:74;7578:27;;;7568:38;;7565:58;;;7619:1;7616;7609:12;7565:58;7108:521;;;;;:::o;7634:331::-;7739:9;7750;7792:8;7780:10;7777:24;7774:44;;;7814:1;7811;7804:12;7774:44;7843:6;7833:8;7830:20;7827:40;;;7863:1;7860;7853:12;7827:40;-1:-1:-1;;7889:23:74;;;7934:25;;;;;-1:-1:-1;7634:331:74:o;7970:982::-;8064:6;8072;8080;8133:2;8121:9;8112:7;8108:23;8104:32;8101:52;;;8149:1;8146;8139:12;8101:52;8188:9;8175:23;8207:39;8240:5;8207:39;:::i;:::-;8265:5;-1:-1:-1;8289:2:74;8323:18;;;8310:32;;-1:-1:-1;8393:2:74;8378:18;;8365:32;8416:18;8446:14;;;8443:34;;;8473:1;8470;8463:12;8443:34;8511:6;8500:9;8496:22;8486:32;;8556:7;8549:4;8545:2;8541:13;8537:27;8527:55;;8578:1;8575;8568:12;8527:55;8614:2;8601:16;8636:2;8632;8629:10;8626:36;;;8642:18;;:::i;:::-;8684:53;8727:2;8708:13;;-1:-1:-1;;8704:27:74;8700:36;;8684:53;:::i;:::-;8671:66;;8760:2;8753:5;8746:17;8800:7;8795:2;8790;8786;8782:11;8778:20;8775:33;8772:53;;;8821:1;8818;8811:12;8772:53;8876:2;8871;8867;8863:11;8858:2;8851:5;8847:14;8834:45;8920:1;8915:2;8910;8903:5;8899:14;8895:23;8888:34;;8941:5;8931:15;;;;;7970:982;;;;;:::o;9660:127::-;9721:10;9716:3;9712:20;9709:1;9702:31;9752:4;9749:1;9742:15;9776:4;9773:1;9766:15;9792:232;9831:3;9852:17;;;9849:140;;9911:10;9906:3;9902:20;9899:1;9892:31;9946:4;9943:1;9936:15;9974:4;9971:1;9964:15;9849:140;-1:-1:-1;10016:1:74;10005:13;;9792:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "nftPassAddress()": "66c00cca",
    "owner()": "8da5cb5b",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "setEntryPoint(address)": "584465f2",
    "setNftPassAddress(address)": "d97e0ada",
    "setWhiteAddresses(address[])": "eb4bd055",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "whiteAddresses(uint256)": "a0ac611b",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftPassAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftPassAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"name\":\"setEntryPoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNftPassAddress\",\"type\":\"address\"}],\"name\":\"setNftPassAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"setWhiteAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whiteAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp  zero length to signify postOp is not required.\",\"deadline\":\"the last block timestamp this operation is valid, or zero if it is valid indefinitely.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agree to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HackathonPaymaster.sol\":\"HackathonPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0xd73ea4e2674ec7847b2aac4ef36e86b0a7db6823ad34163c18aca4c1059aefcc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ba3d967d608e0593987cf32e446a11d7042eaf1c3f453fa52febe5a3d1cde35\",\"dweb:/ipfs/QmbtqHZAwUncGCdXN9psP8LM6QitqU3kvJYvYmuJEYgHZ6\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd9571db5b8274d652959060476948d100b07bf5a7e2468bde3b75063d68d3e26\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://73fbcd16fc5aa422bc14e5f8e312aa8a1aa68a5b1cdbe89536954752df66b326\",\"dweb:/ipfs/Qmf4HRjWGump1Hn7um5yEFzjd4EpymEco8tbPyMcn85M9C\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x51e4234bc9255d961214066d0eb08cbabea3821db32dc62215672f6497962ef9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://67db72c8acb87fb77536c15ee14e65fb74f5c76cdf6a46dd0f45d88d5d20afec\",\"dweb:/ipfs/QmSiZd2KGfX5z9iEjGDoYfY8ync9kTUfdYMh1i8dnQFQUT\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x4f5ef1112ffff9eea6083c900c1fd3e3c7cceb860b103c8b0ce36b0cfbc9bc33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b7bc9d9757aa9cdbdbd264fd1dd2f30496e3886ebd2b8c7cf0392668316c3c61\",\"dweb:/ipfs/QmR7idTPxRtBRgj7iveQnMySY1ZQEZccNK9aEJLb68t2hT\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x1b7b01d6eb948213ad51b33c3951469af52e8001c1827dabacbd55eb1f0c90a3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d164d7b2d8d24ceda5f395c435d457a19a2f3bfcb496317a7958f1a43da4672b\",\"dweb:/ipfs/QmXJ8SxCF8jZ1oLgDXvCXGi3xk7oVWMYz8MwtNSxVwzBCb\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x548134a6c652a9e4730beb582b94785587f93f91b0dded2a27bbda3048911ddd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4156e408fb62a783d11293fc5b6880ec786e0d4b704abbd96fbe06ac3b03b806\",\"dweb:/ipfs/QmWoiGVR8xUQbHoP5AhM29DkezWGC7Cs66stCpMqkkP6Lq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/HackathonPaymaster.sol\":{\"keccak256\":\"0xa52c24661c1c87415ec51207eacbd064f067f31106b84727088ec94673f43185\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://134b08004bdd8c2de1031964ae562cb03c94be1746c9f1bf8cecd6ac0ad4abec\",\"dweb:/ipfs/QmUTtVD69k6fd7dEV7nFydYRffhsrcWWnZ57rDw94GDsaE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nftPassAddress",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "addresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftPassAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntryPoint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newNftPassAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNftPassAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "addresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWhiteAddresses"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "whiteAddresses",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp  zero length to signify postOp is not required.",
              "deadline": "the last block timestamp this operation is valid, or zero if it is valid indefinitely.      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agree to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/HackathonPaymaster.sol": "HackathonPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BasePaymaster.sol": {
        "keccak256": "0xd73ea4e2674ec7847b2aac4ef36e86b0a7db6823ad34163c18aca4c1059aefcc",
        "urls": [
          "bzz-raw://6ba3d967d608e0593987cf32e446a11d7042eaf1c3f453fa52febe5a3d1cde35",
          "dweb:/ipfs/QmbtqHZAwUncGCdXN9psP8LM6QitqU3kvJYvYmuJEYgHZ6"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xd9571db5b8274d652959060476948d100b07bf5a7e2468bde3b75063d68d3e26",
        "urls": [
          "bzz-raw://73fbcd16fc5aa422bc14e5f8e312aa8a1aa68a5b1cdbe89536954752df66b326",
          "dweb:/ipfs/Qmf4HRjWGump1Hn7um5yEFzjd4EpymEco8tbPyMcn85M9C"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x51e4234bc9255d961214066d0eb08cbabea3821db32dc62215672f6497962ef9",
        "urls": [
          "bzz-raw://67db72c8acb87fb77536c15ee14e65fb74f5c76cdf6a46dd0f45d88d5d20afec",
          "dweb:/ipfs/QmSiZd2KGfX5z9iEjGDoYfY8ync9kTUfdYMh1i8dnQFQUT"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x4f5ef1112ffff9eea6083c900c1fd3e3c7cceb860b103c8b0ce36b0cfbc9bc33",
        "urls": [
          "bzz-raw://b7bc9d9757aa9cdbdbd264fd1dd2f30496e3886ebd2b8c7cf0392668316c3c61",
          "dweb:/ipfs/QmR7idTPxRtBRgj7iveQnMySY1ZQEZccNK9aEJLb68t2hT"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0x1b7b01d6eb948213ad51b33c3951469af52e8001c1827dabacbd55eb1f0c90a3",
        "urls": [
          "bzz-raw://d164d7b2d8d24ceda5f395c435d457a19a2f3bfcb496317a7958f1a43da4672b",
          "dweb:/ipfs/QmXJ8SxCF8jZ1oLgDXvCXGi3xk7oVWMYz8MwtNSxVwzBCb"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x548134a6c652a9e4730beb582b94785587f93f91b0dded2a27bbda3048911ddd",
        "urls": [
          "bzz-raw://4156e408fb62a783d11293fc5b6880ec786e0d4b704abbd96fbe06ac3b03b806",
          "dweb:/ipfs/QmWoiGVR8xUQbHoP5AhM29DkezWGC7Cs66stCpMqkkP6Lq"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/HackathonPaymaster.sol": {
        "keccak256": "0xa52c24661c1c87415ec51207eacbd064f067f31106b84727088ec94673f43185",
        "urls": [
          "bzz-raw://134b08004bdd8c2de1031964ae562cb03c94be1746c9f1bf8cecd6ac0ad4abec",
          "dweb:/ipfs/QmUTtVD69k6fd7dEV7nFydYRffhsrcWWnZ57rDw94GDsaE"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/HackathonPaymaster.sol",
    "id": 41707,
    "exportedSymbols": {
      "BasePaymaster": [
        3084
      ],
      "Context": [
        37503
      ],
      "HackathonPaymaster": [
        41706
      ],
      "IAggregator": [
        5657
      ],
      "IERC165": [
        38135
      ],
      "IERC721": [
        36674
      ],
      "IEntryPoint": [
        5846
      ],
      "IPaymaster": [
        5881
      ],
      "IStakeManager": [
        5985
      ],
      "Ownable": [
        35008
      ],
      "UserOperation": [
        6010
      ],
      "UserOperationLib": [
        6114
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:1954:68",
    "nodes": [
      {
        "id": 41536,
        "nodeType": "PragmaDirective",
        "src": "36:24:68",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 41537,
        "nodeType": "ImportDirective",
        "src": "99:69:68",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "file": "../lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41707,
        "sourceUnit": 3085,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41538,
        "nodeType": "ImportDirective",
        "src": "169:74:68",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41707,
        "sourceUnit": 36675,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41706,
        "nodeType": "ContractDefinition",
        "src": "274:1715:68",
        "nodes": [
          {
            "id": 41544,
            "nodeType": "UsingForDirective",
            "src": "325:41:68",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 41541,
              "name": "UserOperationLib",
              "nameLocations": [
                "331:16:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6114,
              "src": "331:16:68"
            },
            "typeName": {
              "id": 41543,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41542,
                "name": "UserOperation",
                "nameLocations": [
                  "352:13:68"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6010,
                "src": "352:13:68"
              },
              "referencedDeclaration": 6010,
              "src": "352:13:68",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$6010_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 41546,
            "nodeType": "VariableDeclaration",
            "src": "372:29:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "66c00cca",
            "mutability": "mutable",
            "name": "nftPassAddress",
            "nameLocation": "387:14:68",
            "scope": 41706,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41545,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "372:7:68",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41549,
            "nodeType": "VariableDeclaration",
            "src": "407:31:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0ac611b",
            "mutability": "mutable",
            "name": "whiteAddresses",
            "nameLocation": "424:14:68",
            "scope": 41706,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 41547,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "407:7:68",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 41548,
              "nodeType": "ArrayTypeName",
              "src": "407:9:68",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41572,
            "nodeType": "FunctionDefinition",
            "src": "445:214:68",
            "nodes": [],
            "body": {
              "id": 41571,
              "nodeType": "Block",
              "src": "574:85:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41563,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41546,
                      "src": "584:14:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41564,
                      "name": "_nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41554,
                      "src": "601:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "584:32:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41566,
                  "nodeType": "ExpressionStatement",
                  "src": "584:32:68"
                },
                {
                  "expression": {
                    "id": 41569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41567,
                      "name": "whiteAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41549,
                      "src": "626:14:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41568,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41557,
                      "src": "643:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "626:26:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 41570,
                  "nodeType": "ExpressionStatement",
                  "src": "626:26:68"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 41560,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41552,
                    "src": "557:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$5846",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 41561,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 41559,
                  "name": "BasePaymaster",
                  "nameLocations": [
                    "543:13:68"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3084,
                  "src": "543:13:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "543:26:68"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 41558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41552,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "469:11:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41572,
                  "src": "457:23:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$5846",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 41551,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41550,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "457:11:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5846,
                      "src": "457:11:68"
                    },
                    "referencedDeclaration": 5846,
                    "src": "457:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$5846",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41554,
                  "mutability": "mutable",
                  "name": "_nftPassAddress",
                  "nameLocation": "490:15:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41572,
                  "src": "482:23:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41557,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "524:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41572,
                  "src": "507:26:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41555,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "507:7:68",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 41556,
                    "nodeType": "ArrayTypeName",
                    "src": "507:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "456:78:68"
            },
            "returnParameters": {
              "id": 41562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:0:68"
            },
            "scope": 41706,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41584,
            "nodeType": "FunctionDefinition",
            "src": "665:124:68",
            "nodes": [],
            "body": {
              "id": 41583,
              "nodeType": "Block",
              "src": "738:51:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41579,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41546,
                      "src": "748:14:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41580,
                      "name": "newNftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41574,
                      "src": "765:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "748:34:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41582,
                  "nodeType": "ExpressionStatement",
                  "src": "748:34:68"
                }
              ]
            },
            "functionSelector": "d97e0ada",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41577,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41576,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "728:9:68"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34927,
                  "src": "728:9:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "728:9:68"
              }
            ],
            "name": "setNftPassAddress",
            "nameLocation": "674:17:68",
            "parameters": {
              "id": 41575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41574,
                  "mutability": "mutable",
                  "name": "newNftPassAddress",
                  "nameLocation": "700:17:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41584,
                  "src": "692:25:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "691:27:68"
            },
            "returnParameters": {
              "id": 41578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:68"
            },
            "scope": 41706,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41597,
            "nodeType": "FunctionDefinition",
            "src": "795:117:68",
            "nodes": [],
            "body": {
              "id": 41596,
              "nodeType": "Block",
              "src": "869:43:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41592,
                      "name": "whiteAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41549,
                      "src": "879:14:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41593,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41587,
                      "src": "896:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "879:26:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 41595,
                  "nodeType": "ExpressionStatement",
                  "src": "879:26:68"
                }
              ]
            },
            "functionSelector": "eb4bd055",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41590,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41589,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "859:9:68"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34927,
                  "src": "859:9:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "859:9:68"
              }
            ],
            "name": "setWhiteAddresses",
            "nameLocation": "804:17:68",
            "parameters": {
              "id": 41588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41587,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "839:9:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41597,
                  "src": "822:26:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41585,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "822:7:68",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 41586,
                    "nodeType": "ArrayTypeName",
                    "src": "822:9:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:28:68"
            },
            "returnParameters": {
              "id": 41591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "869:0:68"
            },
            "scope": 41706,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41673,
            "nodeType": "FunctionDefinition",
            "src": "918:778:68",
            "nodes": [],
            "body": {
              "id": 41672,
              "nodeType": "Block",
              "src": "1127:569:68",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41614,
                      "mutability": "mutable",
                      "name": "nftContract",
                      "nameLocation": "1145:11:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 41672,
                      "src": "1137:19:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$36674",
                        "typeString": "contract IERC721"
                      },
                      "typeName": {
                        "id": 41613,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41612,
                          "name": "IERC721",
                          "nameLocations": [
                            "1137:7:68"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36674,
                          "src": "1137:7:68"
                        },
                        "referencedDeclaration": 36674,
                        "src": "1137:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$36674",
                          "typeString": "contract IERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41618,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41616,
                        "name": "nftPassAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41546,
                        "src": "1167:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41615,
                      "name": "IERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36674,
                      "src": "1159:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC721_$36674_$",
                        "typeString": "type(contract IERC721)"
                      }
                    },
                    "id": 41617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1159:23:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$36674",
                      "typeString": "contract IERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1137:45:68"
                },
                {
                  "assignments": [
                    41620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41620,
                      "mutability": "mutable",
                      "name": "tokenCount",
                      "nameLocation": "1200:10:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 41672,
                      "src": "1192:18:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41619,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1192:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41626,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41623,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41600,
                          "src": "1235:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$6010_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 41624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1242:6:68",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5989,
                        "src": "1235:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41621,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41614,
                        "src": "1213:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$36674",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 41622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1225:9:68",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36599,
                      "src": "1213:21:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1213:36:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1192:57:68"
                },
                {
                  "assignments": [
                    41628,
                    41630,
                    41632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41628,
                      "mutability": "mutable",
                      "name": "dest",
                      "nameLocation": "1269:4:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 41672,
                      "src": "1261:12:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41627,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1261:7:68",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41630,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1283:5:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 41672,
                      "src": "1275:13:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41629,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1275:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41632,
                      "mutability": "mutable",
                      "name": "func",
                      "nameLocation": "1303:4:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 41672,
                      "src": "1290:17:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 41631,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1290:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41647,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 41635,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41600,
                            "src": "1322:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$6010_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 41636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1329:8:68",
                          "memberName": "callData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5995,
                          "src": "1322:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 41638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "1322:19:68",
                        "startExpression": {
                          "hexValue": "34",
                          "id": 41637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1338:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 41640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1344:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41639,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1344:7:68",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 41642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1353:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 41641,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1353:7:68",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 41644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1362:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 41643,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1362:5:68",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 41645,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1343:25:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 41633,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1311:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 41634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1315:6:68",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1311:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 41646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1311:58:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(address payable,uint256,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1260:109:68"
                },
                {
                  "condition": {
                    "id": 41651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1383:21:68",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 41649,
                          "name": "dest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41628,
                          "src": "1399:4:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41648,
                        "name": "_isInWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41705,
                        "src": "1384:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 41650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1384:20:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41657,
                  "nodeType": "IfStatement",
                  "src": "1379:66:68",
                  "trueBody": {
                    "id": 41656,
                    "nodeType": "Block",
                    "src": "1406:39:68",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 41652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1428:2:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 41653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1432:1:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 41654,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1427:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 41611,
                        "id": 41655,
                        "nodeType": "Return",
                        "src": "1420:14:68"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41658,
                      "name": "tokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41620,
                      "src": "1459:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 41659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1472:1:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1459:14:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 41670,
                    "nodeType": "Block",
                    "src": "1579:111:68",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 41666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1673:2:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 41667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1677:1:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 41668,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1672:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 41611,
                        "id": 41669,
                        "nodeType": "Return",
                        "src": "1665:14:68"
                      }
                    ]
                  },
                  "id": 41671,
                  "nodeType": "IfStatement",
                  "src": "1455:235:68",
                  "trueBody": {
                    "id": 41665,
                    "nodeType": "Block",
                    "src": "1475:98:68",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 41661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1556:2:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "30",
                              "id": 41662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1560:1:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "id": 41663,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1555:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 0)"
                          }
                        },
                        "functionReturnParameters": 41611,
                        "id": 41664,
                        "nodeType": "Return",
                        "src": "1548:14:68"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              2931
            ],
            "functionSelector": "f465c77e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validatePaymasterUserOp",
            "nameLocation": "927:23:68",
            "overrides": {
              "id": 41606,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1057:8:68"
            },
            "parameters": {
              "id": 41605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41600,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "974:6:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41673,
                  "src": "951:29:68",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$6010_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 41599,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41598,
                      "name": "UserOperation",
                      "nameLocations": [
                        "951:13:68"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6010,
                      "src": "951:13:68"
                    },
                    "referencedDeclaration": 6010,
                    "src": "951:13:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$6010_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41602,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "990:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41673,
                  "src": "982:18:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 41601,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41604,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "1010:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41673,
                  "src": "1002:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "950:68:68"
            },
            "returnParameters": {
              "id": 41611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41608,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1096:7:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41673,
                  "src": "1083:20:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41607,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:5:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41610,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1113:8:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41673,
                  "src": "1105:16:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1082:40:68"
            },
            "scope": 41706,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41705,
            "nodeType": "FunctionDefinition",
            "src": "1702:285:68",
            "nodes": [],
            "body": {
              "id": 41704,
              "nodeType": "Block",
              "src": "1769:218:68",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 41700,
                    "nodeType": "Block",
                    "src": "1859:99:68",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 41695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 41691,
                              "name": "whiteAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41549,
                              "src": "1877:14:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 41693,
                            "indexExpression": {
                              "id": 41692,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41681,
                              "src": "1892:1:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1877:17:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 41694,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41675,
                            "src": "1898:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1877:25:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41699,
                        "nodeType": "IfStatement",
                        "src": "1873:75:68",
                        "trueBody": {
                          "id": 41698,
                          "nodeType": "Block",
                          "src": "1904:44:68",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 41696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1929:4:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 41679,
                              "id": 41697,
                              "nodeType": "Return",
                              "src": "1922:11:68"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41684,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41681,
                      "src": "1827:1:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 41685,
                        "name": "whiteAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41549,
                        "src": "1831:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 41686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1846:6:68",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1831:21:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1827:25:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41701,
                  "initializationExpression": {
                    "assignments": [
                      41681
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41681,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1820:1:68",
                        "nodeType": "VariableDeclaration",
                        "scope": 41701,
                        "src": "1812:9:68",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41680,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1812:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41683,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1824:1:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1812:13:68"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1854:3:68",
                      "subExpression": {
                        "id": 41688,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41681,
                        "src": "1854:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41690,
                    "nodeType": "ExpressionStatement",
                    "src": "1854:3:68"
                  },
                  "nodeType": "ForStatement",
                  "src": "1807:151:68"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 41702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1975:5:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 41679,
                  "id": 41703,
                  "nodeType": "Return",
                  "src": "1968:12:68"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isInWhiteList",
            "nameLocation": "1711:14:68",
            "parameters": {
              "id": 41676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41675,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1734:4:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 41705,
                  "src": "1726:12:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1725:14:68"
            },
            "returnParameters": {
              "id": 41679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41678,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41705,
                  "src": "1763:4:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41677,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1762:6:68"
            },
            "scope": 41706,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41539,
              "name": "BasePaymaster",
              "nameLocations": [
                "305:13:68"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3084,
              "src": "305:13:68"
            },
            "id": 41540,
            "nodeType": "InheritanceSpecifier",
            "src": "305:13:68"
          }
        ],
        "canonicalName": "HackathonPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41706,
          3084,
          35008,
          37503,
          5881
        ],
        "name": "HackathonPaymaster",
        "nameLocation": "283:18:68",
        "scope": 41707,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 68
}