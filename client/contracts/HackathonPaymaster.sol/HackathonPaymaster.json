{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftPassAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftPassAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "name": "setEntryPoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newNftPassAddress",
          "type": "address"
        }
      ],
      "name": "setNftPassAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        }
      ],
      "name": "setWhiteAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "whiteAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620011343803806200113483398101604081905262000034916200020a565b8262000040336200006b565b6200004b81620000bb565b5080516200006190600390602084019062000148565b505050506200030a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000c5620000e7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620001465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b828054828255906000526020600020908101928215620001a0579160200282015b82811115620001a057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000169565b50620001ae929150620001b2565b5090565b5b80821115620001ae5760008155600101620001b3565b6001600160a01b0381168114620001df57600080fd5b50565b8051620001ef81620001c9565b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200022057600080fd5b83516200022d81620001c9565b809350506020808501516200024281620001c9565b60408601519093506001600160401b03808211156200026057600080fd5b818701915087601f8301126200027557600080fd5b8151818111156200028a576200028a620001f4565b8060051b604051601f19603f83011681018181108582111715620002b257620002b2620001f4565b60405291825284820192508381018501918a831115620002d157600080fd5b938501935b82851015620002fa57620002ea85620001e2565b84529385019392850192620002d6565b8096505050505050509250925092565b610e1a806200031a6000396000f3fe6080604052600436106100fe5760003560e01c8063b0d691fe11610095578063d0e30db011610064578063d0e30db014610280578063d97e0ada14610288578063eb4bd055146102a8578063f2fde38b146102c8578063f465c77e146102e857600080fd5b8063b0d691fe14610208578063bb9fe6bf14610228578063c23a5cea1461023d578063c399ec881461025d57600080fd5b8063715018a6116100d1578063715018a6146101955780638da5cb5b146101aa578063a0ac611b146101c8578063a9a23409146101e857600080fd5b80630396cb6014610103578063205c287814610118578063584465f21461013857806366c00cca14610158575b600080fd5b6101166101113660046109ba565b610316565b005b34801561012457600080fd5b506101166101333660046109fc565b610385565b34801561014457600080fd5b50610116610153366004610a28565b6103db565b34801561016457600080fd5b50600254610178906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a157600080fd5b50610116610405565b3480156101b657600080fd5b506000546001600160a01b0316610178565b3480156101d457600080fd5b506101786101e3366004610a45565b610419565b3480156101f457600080fd5b50610116610203366004610a5e565b610443565b34801561021457600080fd5b50600154610178906001600160a01b031681565b34801561023457600080fd5b5061011661045d565b34801561024957600080fd5b50610116610258366004610a28565b6104c9565b34801561026957600080fd5b50610272610533565b60405190815260200161018c565b6101166105a5565b34801561029457600080fd5b506101166102a3366004610a28565b6105eb565b3480156102b457600080fd5b506101166102c3366004610b34565b610615565b3480156102d457600080fd5b506101166102e3366004610a28565b610634565b3480156102f457600080fd5b50610308610303366004610be6565b6106b2565b60405161018c929190610c3a565b61031e6107de565b600154604051621cb65b60e51b815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b505050505050565b61038d6107de565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561036957600080fd5b6103e36107de565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61040d6107de565b6104176000610838565b565b6003818154811061042957600080fd5b6000918252602090912001546001600160a01b0316905081565b61044b610888565b6104578484848461089f565b50505050565b6104656107de565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104b557600080fd5b505af1158015610457573d6000803e3d6000fd5b6104d16107de565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a09190610c8f565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561051857600080fd5b6105f36107de565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61061d6107de565b8051610630906003906020840190610940565b5050565b61063c6107de565b6001600160a01b0381166106a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6106af81610838565b50565b6002546060906000906001600160a01b031681816370a082316106d860208a018a610a28565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190610c8f565b90506000808061075360608b018b610ca8565b8101906107609190610cf6565b92509250925061076f836108d7565b61079457600160405180602001604052806000815250909650965050505050506107d6565b83156107bb57600060405180602001604052806000815250909650965050505050506107d6565b50506040805160208101909152600081529450600193505050505b935093915050565b6000546001600160a01b031633146104175760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161069d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461041757600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b604482015260640161069d565b6000805b60035481101561093757826001600160a01b03166003828154811061090257610902610da7565b6000918252602090912001546001600160a01b0316036109255750600192915050565b8061092f81610dbd565b9150506108db565b50600092915050565b828054828255906000526020600020908101928215610995579160200282015b8281111561099557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610960565b506109a19291506109a5565b5090565b5b808211156109a157600081556001016109a6565b6000602082840312156109cc57600080fd5b813563ffffffff811681146109e057600080fd5b9392505050565b6001600160a01b03811681146106af57600080fd5b60008060408385031215610a0f57600080fd5b8235610a1a816109e7565b946020939093013593505050565b600060208284031215610a3a57600080fd5b81356109e0816109e7565b600060208284031215610a5757600080fd5b5035919050565b60008060008060608587031215610a7457600080fd5b843560038110610a8357600080fd5b9350602085013567ffffffffffffffff80821115610aa057600080fd5b818701915087601f830112610ab457600080fd5b813581811115610ac357600080fd5b886020828501011115610ad557600080fd5b95986020929092019750949560400135945092505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b2c57610b2c610aed565b604052919050565b60006020808385031215610b4757600080fd5b823567ffffffffffffffff80821115610b5f57600080fd5b818501915085601f830112610b7357600080fd5b813581811115610b8557610b85610aed565b8060051b9150610b96848301610b03565b8181529183018401918481019088841115610bb057600080fd5b938501935b83851015610bda5784359250610bca836109e7565b8282529385019390850190610bb5565b98975050505050505050565b600080600060608486031215610bfb57600080fd5b833567ffffffffffffffff811115610c1257600080fd5b84016101608187031215610c2557600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610c685760208187018101516060868401015201610c4b565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610ca157600080fd5b5051919050565b6000808335601e19843603018112610cbf57600080fd5b83018035915067ffffffffffffffff821115610cda57600080fd5b602001915036819003821315610cef57600080fd5b9250929050565b600080600060608486031215610d0b57600080fd5b8335610d16816109e7565b92506020848101359250604085013567ffffffffffffffff80821115610d3b57600080fd5b818701915087601f830112610d4f57600080fd5b813581811115610d6157610d61610aed565b610d73601f8201601f19168501610b03565b91508082528884828501011115610d8957600080fd5b80848401858401376000848284010152508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b600060018201610ddd57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212209802d5d75d827956fc201a0fca31ea46231785c92da1b3970979fdb7f4e50a5a64736f6c63430008130033",
    "sourceMap": "274:1709:10:-:0;;;445:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;556:11;936:32:6;719:10:8;936:18:6;:32::i;:::-;528:26:0;542:11;528:13;:26::i;:::-;-1:-1:-1;624:26:10;;::::1;::::0;:14:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;445:212:::0;;;274:1709;;2433:187:6;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:6;;;-1:-1:-1;;;;;;2541:17:6;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;567:106:0:-;1094:13:6;:11;:13::i;:::-;642:10:0::1;:24:::0;;-1:-1:-1;;;;;;642:24:0::1;-1:-1:-1::0;;;;;642:24:0;;;::::1;::::0;;;::::1;::::0;;567:106::o;1359:130:6:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:6;719:10:8;1422:23:6;1414:68;;;;-1:-1:-1;;;1414:68:6;;2094:2:11;1414:68:6;;;2076:21:11;;;2113:18;;;2106:30;2172:34;2152:18;;;2145:62;2224:18;;1414:68:6;;;;;;;;1359:130::o;274:1709:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;274:1709:10;-1:-1:-1;;;;;274:1709:10;;;;;;;;;;;-1:-1:-1;274:1709:10;;;;;;;-1:-1:-1;274:1709:10;;;-1:-1:-1;274:1709:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:144:11;-1:-1:-1;;;;;102:31:11;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:151::-;242:13;;264:44;242:13;264:44;:::i;:::-;163:151;;;:::o;319:127::-;380:10;375:3;371:20;368:1;361:31;411:4;408:1;401:15;435:4;432:1;425:15;451:1436;583:6;591;599;652:2;640:9;631:7;627:23;623:32;620:52;;;668:1;665;658:12;620:52;700:9;694:16;719:44;757:5;719:44;:::i;:::-;782:5;772:15;;;806:2;853;842:9;838:18;832:25;866:46;904:7;866:46;:::i;:::-;982:2;967:18;;961:25;931:7;;-1:-1:-1;;;;;;1035:14:11;;;1032:34;;;1062:1;1059;1052:12;1032:34;1100:6;1089:9;1085:22;1075:32;;1145:7;1138:4;1134:2;1130:13;1126:27;1116:55;;1167:1;1164;1157:12;1116:55;1196:2;1190:9;1218:2;1214;1211:10;1208:36;;;1224:18;;:::i;:::-;1270:2;1267:1;1263:10;1302:2;1296:9;1365:2;1361:7;1356:2;1352;1348:11;1344:25;1336:6;1332:38;1420:6;1408:10;1405:22;1400:2;1388:10;1385:18;1382:46;1379:72;;;1431:18;;:::i;:::-;1467:2;1460:22;1517:18;;;1551:15;;;;-1:-1:-1;1593:11:11;;;1589:20;;;1621:19;;;1618:39;;;1653:1;1650;1643:12;1618:39;1677:11;;;;1697:159;1713:6;1708:3;1705:15;1697:159;;;1779:34;1809:3;1779:34;:::i;:::-;1767:47;;1730:12;;;;1834;;;;1697:159;;;1875:6;1865:16;;;;;;;;451:1436;;;;;:::o;1892:356::-;274:1709:10;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100fe5760003560e01c8063b0d691fe11610095578063d0e30db011610064578063d0e30db014610280578063d97e0ada14610288578063eb4bd055146102a8578063f2fde38b146102c8578063f465c77e146102e857600080fd5b8063b0d691fe14610208578063bb9fe6bf14610228578063c23a5cea1461023d578063c399ec881461025d57600080fd5b8063715018a6116100d1578063715018a6146101955780638da5cb5b146101aa578063a0ac611b146101c8578063a9a23409146101e857600080fd5b80630396cb6014610103578063205c287814610118578063584465f21461013857806366c00cca14610158575b600080fd5b6101166101113660046109ba565b610316565b005b34801561012457600080fd5b506101166101333660046109fc565b610385565b34801561014457600080fd5b50610116610153366004610a28565b6103db565b34801561016457600080fd5b50600254610178906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a157600080fd5b50610116610405565b3480156101b657600080fd5b506000546001600160a01b0316610178565b3480156101d457600080fd5b506101786101e3366004610a45565b610419565b3480156101f457600080fd5b50610116610203366004610a5e565b610443565b34801561021457600080fd5b50600154610178906001600160a01b031681565b34801561023457600080fd5b5061011661045d565b34801561024957600080fd5b50610116610258366004610a28565b6104c9565b34801561026957600080fd5b50610272610533565b60405190815260200161018c565b6101166105a5565b34801561029457600080fd5b506101166102a3366004610a28565b6105eb565b3480156102b457600080fd5b506101166102c3366004610b34565b610615565b3480156102d457600080fd5b506101166102e3366004610a28565b610634565b3480156102f457600080fd5b50610308610303366004610be6565b6106b2565b60405161018c929190610c3a565b61031e6107de565b600154604051621cb65b60e51b815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b505050505050565b61038d6107de565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561036957600080fd5b6103e36107de565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61040d6107de565b6104176000610838565b565b6003818154811061042957600080fd5b6000918252602090912001546001600160a01b0316905081565b61044b610888565b6104578484848461089f565b50505050565b6104656107de565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104b557600080fd5b505af1158015610457573d6000803e3d6000fd5b6104d16107de565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a09190610c8f565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561051857600080fd5b6105f36107de565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61061d6107de565b8051610630906003906020840190610940565b5050565b61063c6107de565b6001600160a01b0381166106a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6106af81610838565b50565b6002546060906000906001600160a01b031681816370a082316106d860208a018a610a28565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190610c8f565b90506000808061075360608b018b610ca8565b8101906107609190610cf6565b92509250925061076f836108d7565b61079457600160405180602001604052806000815250909650965050505050506107d6565b83156107bb57600060405180602001604052806000815250909650965050505050506107d6565b50506040805160208101909152600081529450600193505050505b935093915050565b6000546001600160a01b031633146104175760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161069d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461041757600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b604482015260640161069d565b6000805b60035481101561093757826001600160a01b03166003828154811061090257610902610da7565b6000918252602090912001546001600160a01b0316036109255750600192915050565b8061092f81610dbd565b9150506108db565b50600092915050565b828054828255906000526020600020908101928215610995579160200282015b8281111561099557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610960565b506109a19291506109a5565b5090565b5b808211156109a157600081556001016109a6565b6000602082840312156109cc57600080fd5b813563ffffffff811681146109e057600080fd5b9392505050565b6001600160a01b03811681146106af57600080fd5b60008060408385031215610a0f57600080fd5b8235610a1a816109e7565b946020939093013593505050565b600060208284031215610a3a57600080fd5b81356109e0816109e7565b600060208284031215610a5757600080fd5b5035919050565b60008060008060608587031215610a7457600080fd5b843560038110610a8357600080fd5b9350602085013567ffffffffffffffff80821115610aa057600080fd5b818701915087601f830112610ab457600080fd5b813581811115610ac357600080fd5b886020828501011115610ad557600080fd5b95986020929092019750949560400135945092505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b2c57610b2c610aed565b604052919050565b60006020808385031215610b4757600080fd5b823567ffffffffffffffff80821115610b5f57600080fd5b818501915085601f830112610b7357600080fd5b813581811115610b8557610b85610aed565b8060051b9150610b96848301610b03565b8181529183018401918481019088841115610bb057600080fd5b938501935b83851015610bda5784359250610bca836109e7565b8282529385019390850190610bb5565b98975050505050505050565b600080600060608486031215610bfb57600080fd5b833567ffffffffffffffff811115610c1257600080fd5b84016101608187031215610c2557600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610c685760208187018101516060868401015201610c4b565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610ca157600080fd5b5051919050565b6000808335601e19843603018112610cbf57600080fd5b83018035915067ffffffffffffffff821115610cda57600080fd5b602001915036819003821315610cef57600080fd5b9250929050565b600080600060608486031215610d0b57600080fd5b8335610d16816109e7565b92506020848101359250604085013567ffffffffffffffff80821115610d3b57600080fd5b818701915087601f830112610d4f57600080fd5b813581811115610d6157610d61610aed565b610d73601f8201601f19168501610b03565b91508082528884828501011115610d8957600080fd5b80848401858401376000848284010152508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b600060018201610ddd57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212209802d5d75d827956fc201a0fca31ea46231785c92da1b3970979fdb7f4e50a5a64736f6c63430008130033",
    "sourceMap": "274:1709:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2845:140:0;;;;;;:::i;:::-;;:::i;:::-;;2471:149;;;;;;;;;;-1:-1:-1;2471:149:0;;;;;:::i;:::-;;:::i;567:106::-;;;;;;;;;;-1:-1:-1;567:106:0;;;;;:::i;:::-;;:::i;372:29:10:-;;;;;;;;;;-1:-1:-1;372:29:10;;;;-1:-1:-1;;;;;372:29:10;;;;;;-1:-1:-1;;;;;1218:32:11;;;1200:51;;1188:2;1173:18;372:29:10;;;;;;;;1831:101:6;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:6;1273:6;-1:-1:-1;;;;;1273:6:6;1201:85;;407:31:10;;;;;;;;;;-1:-1:-1;407:31:10;;;;;:::i;:::-;;:::i;893:186:0:-;;;;;;;;;;-1:-1:-1;893:186:0;;;;;:::i;:::-;;:::i;445:29::-;;;;;;;;;;-1:-1:-1;445:29:0;;;;-1:-1:-1;;;;;445:29:0;;;3338:83;;;;;;;;;;;;;:::i;3640:133::-;;;;;;;;;;-1:-1:-1;3640:133:0;;;;;:::i;:::-;;:::i;3068:111::-;;;;;;;;;;;;;:::i;:::-;;;2910:25:11;;;2898:2;2883:18;3068:111:0;2764:177:11;2225:104:0;;;:::i;663:124:10:-;;;;;;;;;;-1:-1:-1;663:124:10;;;;;:::i;:::-;;:::i;793:117::-;;;;;;;;;;-1:-1:-1;793:117:10;;;;;:::i;:::-;;:::i;2081:198:6:-;;;;;;;;;;-1:-1:-1;2081:198:6;;;;;:::i;:::-;;:::i;916:774:10:-;;;;;;;;;;-1:-1:-1;916:774:10;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2845:140:0:-;1094:13:6;:11;:13::i;:::-;2924:10:0::1;::::0;:54:::1;::::0;-1:-1:-1;;;2924:54:0;;5966:10:11;5954:23;;2924:54:0::1;::::0;::::1;5936:42:11::0;-1:-1:-1;;;;;2924:10:0;;::::1;::::0;:19:::1;::::0;2951:9:::1;::::0;5909:18:11;;2924:54:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2845:140:::0;:::o;2471:149::-;1094:13:6;:11;:13::i;:::-;2567:10:0::1;::::0;:46:::1;::::0;-1:-1:-1;;;2567:46:0;;-1:-1:-1;;;;;6197:32:11;;;2567:46:0::1;::::0;::::1;6179:51:11::0;6246:18;;;6239:34;;;2567:10:0;;::::1;::::0;:21:::1;::::0;6152:18:11;;2567:46:0::1;;;;;;;;;;;;;;;;;::::0;::::1;567:106:::0;1094:13:6;:11;:13::i;:::-;642:10:0::1;:24:::0;;-1:-1:-1;;;;;;642:24:0::1;-1:-1:-1::0;;;;;642:24:0;;;::::1;::::0;;;::::1;::::0;;567:106::o;1831:101:6:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;407:31:10:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;407:31:10;;-1:-1:-1;407:31:10;:::o;893:186:0:-;1001:24;:22;:24::i;:::-;1035:37;1043:4;1049:7;;1058:13;1035:7;:37::i;:::-;893:186;;;;:::o;3338:83::-;1094:13:6;:11;:13::i;:::-;3390:10:0::1;;;;;;;;;-1:-1:-1::0;;;;;3390:10:0::1;-1:-1:-1::0;;;;;3390:22:0::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3640:133:::0;1094:13:6;:11;:13::i;:::-;3725:10:0::1;::::0;:41:::1;::::0;-1:-1:-1;;;3725:41:0;;-1:-1:-1;;;;;1218:32:11;;;3725:41:0::1;::::0;::::1;1200:51:11::0;3725:10:0;;::::1;::::0;:24:::1;::::0;1173:18:11;;3725:41:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3640:133:::0;:::o;3068:111::-;3137:10;;:35;;-1:-1:-1;;;3137:35:0;;3166:4;3137:35;;;1200:51:11;3111:7:0;;-1:-1:-1;;;;;3137:10:0;;:20;;1173:18:11;;3137:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3130:42;;3068:111;:::o;2225:104::-;2269:10;;:53;;-1:-1:-1;;;2269:53:0;;2316:4;2269:53;;;1200:51:11;-1:-1:-1;;;;;2269:10:0;;;;:20;;2297:9;;1173:18:11;;2269:53:0;;;;;;;;;;;;;;;;;;;663:124:10;1094:13:6;:11;:13::i;:::-;746:14:10::1;:34:::0;;-1:-1:-1;;;;;;746:34:10::1;-1:-1:-1::0;;;;;746:34:10;;;::::1;::::0;;;::::1;::::0;;663:124::o;793:117::-;1094:13:6;:11;:13::i;:::-;877:26:10;;::::1;::::0;:14:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;793:117:::0;:::o;2081:198:6:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:6;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:6;;6899:2:11;2161:73:6::1;::::0;::::1;6881:21:11::0;6938:2;6918:18;;;6911:30;6977:34;6957:18;;;6950:62;-1:-1:-1;;;7028:18:11;;;7021:36;7074:19;;2161:73:6::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;916:774:10:-;1165:14;;1081:20;;1103:16;;-1:-1:-1;;;;;1165:14:10;1103:16;1165:14;1211:21;1233:13;;;;:6;:13;:::i;:::-;1211:36;;-1:-1:-1;;;;;;1211:36:10;;;;;;;-1:-1:-1;;;;;1218:32:11;;;1211:36:10;;;1200:51:11;1173:18;;1211:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1190:57;-1:-1:-1;1259:12:10;;;1320:15;;;;:6;:15;:::i;:::-;1309:54;;;;;;;:::i;:::-;1258:105;;;;;;1378:20;1393:4;1378:14;:20::i;:::-;1373:66;;1426:1;1414:14;;;;;;;;;;;;;;;;;;;;;;;;1373:66;1453:14;;1449:235;;1554:1;1542:14;;;;;;;;;;;;;;;;;;;;;;;;1449:235;-1:-1:-1;;1659:14:10;;;;;;;;;-1:-1:-1;1659:14:10;;;-1:-1:-1;1671:1:10;;-1:-1:-1;;;;916:774:10;;;;;;;:::o;1359:130:6:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:6;719:10:8;1422:23:6;1414:68;;;;-1:-1:-1;;;1414:68:6;;8819:2:11;1414:68:6;;;8801:21:11;;;8838:18;;;8831:30;8897:34;8877:18;;;8870:62;8949:18;;1414:68:6;8617:356:11;2433:187:6;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:6;;;-1:-1:-1;;;;;;2541:17:6;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;3837:110:0:-;3928:10;;-1:-1:-1;;;;;3928:10:0;3906;:33;3898:42;;;;;1839:286;2095:23;;-1:-1:-1;;;2095:23:0;;9180:2:11;2095:23:0;;;9162:21:11;9219:2;9199:18;;;9192:30;-1:-1:-1;;;9238:18:11;;;9231:43;9291:18;;2095:23:0;8978:337:11;1696:285:10;1757:4;;1801:151;1825:14;:21;1821:25;;1801:151;;;1892:4;-1:-1:-1;;;;;1871:25:10;:14;1886:1;1871:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1871:17:10;:25;1867:75;;-1:-1:-1;1923:4:10;;1696:285;-1:-1:-1;;1696:285:10:o;1867:75::-;1848:3;;;;:::i;:::-;;;;1801:151;;;-1:-1:-1;1969:5:10;;1696:285;-1:-1:-1;;1696:285:10:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:276:11;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;199:61;279:5;14:276;-1:-1:-1;;;14:276:11:o;295:139::-;-1:-1:-1;;;;;378:31:11;;368:42;;358:70;;424:1;421;414:12;439:331;515:6;523;576:2;564:9;555:7;551:23;547:32;544:52;;;592:1;589;582:12;544:52;631:9;618:23;650:39;683:5;650:39;:::i;:::-;708:5;760:2;745:18;;;;732:32;;-1:-1:-1;;;439:331:11:o;775:274::-;853:6;906:2;894:9;885:7;881:23;877:32;874:52;;;922:1;919;912:12;874:52;961:9;948:23;980:39;1013:5;980:39;:::i;1262:180::-;1321:6;1374:2;1362:9;1353:7;1349:23;1345:32;1342:52;;;1390:1;1387;1380:12;1342:52;-1:-1:-1;1413:23:11;;1262:180;-1:-1:-1;1262:180:11:o;1447:817::-;1549:6;1557;1565;1573;1626:2;1614:9;1605:7;1601:23;1597:32;1594:52;;;1642:1;1639;1632:12;1594:52;1681:9;1668:23;1720:1;1713:5;1710:12;1700:40;;1736:1;1733;1726:12;1700:40;1759:5;-1:-1:-1;1815:2:11;1800:18;;1787:32;1838:18;1868:14;;;1865:34;;;1895:1;1892;1885:12;1865:34;1933:6;1922:9;1918:22;1908:32;;1978:7;1971:4;1967:2;1963:13;1959:27;1949:55;;2000:1;1997;1990:12;1949:55;2040:2;2027:16;2066:2;2058:6;2055:14;2052:34;;;2082:1;2079;2072:12;2052:34;2127:7;2122:2;2113:6;2109:2;2105:15;2101:24;2098:37;2095:57;;;2148:1;2145;2138:12;2095:57;1447:817;;2179:2;2171:11;;;;;-1:-1:-1;2201:6:11;;2254:2;2239:18;2226:32;;-1:-1:-1;1447:817:11;-1:-1:-1;;;1447:817:11:o;3206:127::-;3267:10;3262:3;3258:20;3255:1;3248:31;3298:4;3295:1;3288:15;3322:4;3319:1;3312:15;3338:275;3409:2;3403:9;3474:2;3455:13;;-1:-1:-1;;3451:27:11;3439:40;;3509:18;3494:34;;3530:22;;;3491:62;3488:88;;;3556:18;;:::i;:::-;3592:2;3585:22;3338:275;;-1:-1:-1;3338:275:11:o;3618:1029::-;3702:6;3733:2;3776;3764:9;3755:7;3751:23;3747:32;3744:52;;;3792:1;3789;3782:12;3744:52;3832:9;3819:23;3861:18;3902:2;3894:6;3891:14;3888:34;;;3918:1;3915;3908:12;3888:34;3956:6;3945:9;3941:22;3931:32;;4001:7;3994:4;3990:2;3986:13;3982:27;3972:55;;4023:1;4020;4013:12;3972:55;4059:2;4046:16;4081:2;4077;4074:10;4071:36;;;4087:18;;:::i;:::-;4133:2;4130:1;4126:10;4116:20;;4156:28;4180:2;4176;4172:11;4156:28;:::i;:::-;4218:15;;;4288:11;;;4284:20;;;4249:12;;;;4316:19;;;4313:39;;;4348:1;4345;4338:12;4313:39;4372:11;;;;4392:225;4408:6;4403:3;4400:15;4392:225;;;4488:3;4475:17;4462:30;;4505:39;4538:5;4505:39;:::i;:::-;4557:18;;;4425:12;;;;4595;;;;4392:225;;;4636:5;3618:1029;-1:-1:-1;;;;;;;;3618:1029:11:o;4652:528::-;4761:6;4769;4777;4830:2;4818:9;4809:7;4805:23;4801:32;4798:52;;;4846:1;4843;4836:12;4798:52;4886:9;4873:23;4919:18;4911:6;4908:30;4905:50;;;4951:1;4948;4941:12;4905:50;4974:22;;5030:3;5012:16;;;5008:26;5005:46;;;5047:1;5044;5037:12;5005:46;5070:2;5119;5104:18;;5091:32;;-1:-1:-1;5170:2:11;5155:18;;;5142:32;;4652:528;-1:-1:-1;;;4652:528:11:o;5185:602::-;5360:2;5349:9;5342:21;5323:4;5392:6;5386:13;5435:6;5430:2;5419:9;5415:18;5408:34;5460:1;5470:144;5484:6;5481:1;5478:13;5470:144;;;5597:4;5581:14;;;5577:25;;5571:32;5566:2;5547:17;;;5543:26;5536:68;5499:12;5470:144;;;5474:3;5663:1;5658:2;5649:6;5638:9;5634:22;5630:31;5623:42;5733:2;5726;5722:7;5717:2;5709:6;5705:15;5701:29;5690:9;5686:45;5682:54;5674:62;;;5774:6;5767:4;5756:9;5752:20;5745:36;5185:602;;;;;:::o;6508:184::-;6578:6;6631:2;6619:9;6610:7;6606:23;6602:32;6599:52;;;6647:1;6644;6637:12;6599:52;-1:-1:-1;6670:16:11;;6508:184;-1:-1:-1;6508:184:11:o;7104:521::-;7181:4;7187:6;7247:11;7234:25;7341:2;7337:7;7326:8;7310:14;7306:29;7302:43;7282:18;7278:68;7268:96;;7360:1;7357;7350:12;7268:96;7387:33;;7439:20;;;-1:-1:-1;7482:18:11;7471:30;;7468:50;;;7514:1;7511;7504:12;7468:50;7547:4;7535:17;;-1:-1:-1;7578:14:11;7574:27;;;7564:38;;7561:58;;;7615:1;7612;7605:12;7561:58;7104:521;;;;;:::o;7630:982::-;7724:6;7732;7740;7793:2;7781:9;7772:7;7768:23;7764:32;7761:52;;;7809:1;7806;7799:12;7761:52;7848:9;7835:23;7867:39;7900:5;7867:39;:::i;:::-;7925:5;-1:-1:-1;7949:2:11;7983:18;;;7970:32;;-1:-1:-1;8053:2:11;8038:18;;8025:32;8076:18;8106:14;;;8103:34;;;8133:1;8130;8123:12;8103:34;8171:6;8160:9;8156:22;8146:32;;8216:7;8209:4;8205:2;8201:13;8197:27;8187:55;;8238:1;8235;8228:12;8187:55;8274:2;8261:16;8296:2;8292;8289:10;8286:36;;;8302:18;;:::i;:::-;8344:53;8387:2;8368:13;;-1:-1:-1;;8364:27:11;8360:36;;8344:53;:::i;:::-;8331:66;;8420:2;8413:5;8406:17;8460:7;8455:2;8450;8446;8442:11;8438:20;8435:33;8432:53;;;8481:1;8478;8471:12;8432:53;8536:2;8531;8527;8523:11;8518:2;8511:5;8507:14;8494:45;8580:1;8575:2;8570;8563:5;8559:14;8555:23;8548:34;;8601:5;8591:15;;;;;7630:982;;;;;:::o;9320:127::-;9381:10;9376:3;9372:20;9369:1;9362:31;9412:4;9409:1;9402:15;9436:4;9433:1;9426:15;9452:232;9491:3;9512:17;;;9509:140;;9571:10;9566:3;9562:20;9559:1;9552:31;9606:4;9603:1;9596:15;9634:4;9631:1;9624:15;9509:140;-1:-1:-1;9676:1:11;9665:13;;9452:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "nftPassAddress()": "66c00cca",
    "owner()": "8da5cb5b",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "setEntryPoint(address)": "584465f2",
    "setNftPassAddress(address)": "d97e0ada",
    "setWhiteAddresses(address[])": "eb4bd055",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "whiteAddresses(uint256)": "a0ac611b",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftPassAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftPassAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"name\":\"setEntryPoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNftPassAddress\",\"type\":\"address\"}],\"name\":\"setNftPassAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"setWhiteAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whiteAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp  zero length to signify postOp is not required.\",\"deadline\":\"the last block timestamp this operation is valid, or zero if it is valid indefinitely.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agree to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HackathonPaymaster.sol\":\"HackathonPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x1b12d38bc24b410bc582a5fc0f5155184e68e14630b1391ef3d4c3cd407354b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://793e93f891872eef7c5a0d915f220845eb6881db7e6ede8d1f15e7140c66c20b\",\"dweb:/ipfs/QmQMeyFdAocP4aL1JJu8sQqHjnJBtXoCdPbvPQmTyauWrt\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd9571db5b8274d652959060476948d100b07bf5a7e2468bde3b75063d68d3e26\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://73fbcd16fc5aa422bc14e5f8e312aa8a1aa68a5b1cdbe89536954752df66b326\",\"dweb:/ipfs/Qmf4HRjWGump1Hn7um5yEFzjd4EpymEco8tbPyMcn85M9C\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x51e4234bc9255d961214066d0eb08cbabea3821db32dc62215672f6497962ef9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://67db72c8acb87fb77536c15ee14e65fb74f5c76cdf6a46dd0f45d88d5d20afec\",\"dweb:/ipfs/QmSiZd2KGfX5z9iEjGDoYfY8ync9kTUfdYMh1i8dnQFQUT\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x4f5ef1112ffff9eea6083c900c1fd3e3c7cceb860b103c8b0ce36b0cfbc9bc33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b7bc9d9757aa9cdbdbd264fd1dd2f30496e3886ebd2b8c7cf0392668316c3c61\",\"dweb:/ipfs/QmR7idTPxRtBRgj7iveQnMySY1ZQEZccNK9aEJLb68t2hT\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x1b7b01d6eb948213ad51b33c3951469af52e8001c1827dabacbd55eb1f0c90a3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d164d7b2d8d24ceda5f395c435d457a19a2f3bfcb496317a7958f1a43da4672b\",\"dweb:/ipfs/QmXJ8SxCF8jZ1oLgDXvCXGi3xk7oVWMYz8MwtNSxVwzBCb\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x548134a6c652a9e4730beb582b94785587f93f91b0dded2a27bbda3048911ddd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4156e408fb62a783d11293fc5b6880ec786e0d4b704abbd96fbe06ac3b03b806\",\"dweb:/ipfs/QmWoiGVR8xUQbHoP5AhM29DkezWGC7Cs66stCpMqkkP6Lq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/HackathonPaymaster.sol\":{\"keccak256\":\"0xd1c5bce28124796bbdd3046415990a32c56b58106d696a3c813132eb95e92703\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://45d4e2c0cc1a17a6ed603a4fe96b050f2e72061c4101f4eeb4a59b6771627dae\",\"dweb:/ipfs/QmR5wQZdAkLEH9qNyRYd5hiNZVzV8WpTkuyz5De899mXHQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nftPassAddress",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "addresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftPassAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntryPoint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newNftPassAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNftPassAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "addresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWhiteAddresses"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "whiteAddresses",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp  zero length to signify postOp is not required.",
              "deadline": "the last block timestamp this operation is valid, or zero if it is valid indefinitely.      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agree to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/HackathonPaymaster.sol": "HackathonPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BasePaymaster.sol": {
        "keccak256": "0x1b12d38bc24b410bc582a5fc0f5155184e68e14630b1391ef3d4c3cd407354b6",
        "urls": [
          "bzz-raw://793e93f891872eef7c5a0d915f220845eb6881db7e6ede8d1f15e7140c66c20b",
          "dweb:/ipfs/QmQMeyFdAocP4aL1JJu8sQqHjnJBtXoCdPbvPQmTyauWrt"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xd9571db5b8274d652959060476948d100b07bf5a7e2468bde3b75063d68d3e26",
        "urls": [
          "bzz-raw://73fbcd16fc5aa422bc14e5f8e312aa8a1aa68a5b1cdbe89536954752df66b326",
          "dweb:/ipfs/Qmf4HRjWGump1Hn7um5yEFzjd4EpymEco8tbPyMcn85M9C"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x51e4234bc9255d961214066d0eb08cbabea3821db32dc62215672f6497962ef9",
        "urls": [
          "bzz-raw://67db72c8acb87fb77536c15ee14e65fb74f5c76cdf6a46dd0f45d88d5d20afec",
          "dweb:/ipfs/QmSiZd2KGfX5z9iEjGDoYfY8ync9kTUfdYMh1i8dnQFQUT"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x4f5ef1112ffff9eea6083c900c1fd3e3c7cceb860b103c8b0ce36b0cfbc9bc33",
        "urls": [
          "bzz-raw://b7bc9d9757aa9cdbdbd264fd1dd2f30496e3886ebd2b8c7cf0392668316c3c61",
          "dweb:/ipfs/QmR7idTPxRtBRgj7iveQnMySY1ZQEZccNK9aEJLb68t2hT"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0x1b7b01d6eb948213ad51b33c3951469af52e8001c1827dabacbd55eb1f0c90a3",
        "urls": [
          "bzz-raw://d164d7b2d8d24ceda5f395c435d457a19a2f3bfcb496317a7958f1a43da4672b",
          "dweb:/ipfs/QmXJ8SxCF8jZ1oLgDXvCXGi3xk7oVWMYz8MwtNSxVwzBCb"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x548134a6c652a9e4730beb582b94785587f93f91b0dded2a27bbda3048911ddd",
        "urls": [
          "bzz-raw://4156e408fb62a783d11293fc5b6880ec786e0d4b704abbd96fbe06ac3b03b806",
          "dweb:/ipfs/QmWoiGVR8xUQbHoP5AhM29DkezWGC7Cs66stCpMqkkP6Lq"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/HackathonPaymaster.sol": {
        "keccak256": "0xd1c5bce28124796bbdd3046415990a32c56b58106d696a3c813132eb95e92703",
        "urls": [
          "bzz-raw://45d4e2c0cc1a17a6ed603a4fe96b050f2e72061c4101f4eeb4a59b6771627dae",
          "dweb:/ipfs/QmR5wQZdAkLEH9qNyRYd5hiNZVzV8WpTkuyz5De899mXHQ"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/HackathonPaymaster.sol",
    "id": 1129,
    "exportedSymbols": {
      "BasePaymaster": [
        204
      ],
      "Context": [
        946
      ],
      "HackathonPaymaster": [
        1128
      ],
      "IAggregator": [
        238
      ],
      "IERC165": [
        958
      ],
      "IERC721": [
        924
      ],
      "IEntryPoint": [
        427
      ],
      "IPaymaster": [
        462
      ],
      "IStakeManager": [
        566
      ],
      "Ownable": [
        808
      ],
      "UserOperation": [
        591
      ],
      "UserOperationLib": [
        695
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:1948:10",
    "nodes": [
      {
        "id": 960,
        "nodeType": "PragmaDirective",
        "src": "36:24:10",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 961,
        "nodeType": "ImportDirective",
        "src": "99:69:10",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "file": "../lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1129,
        "sourceUnit": 205,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 962,
        "nodeType": "ImportDirective",
        "src": "169:74:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1129,
        "sourceUnit": 925,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1128,
        "nodeType": "ContractDefinition",
        "src": "274:1709:10",
        "nodes": [
          {
            "id": 968,
            "nodeType": "UsingForDirective",
            "src": "325:41:10",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 965,
              "name": "UserOperationLib",
              "nameLocations": [
                "331:16:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 695,
              "src": "331:16:10"
            },
            "typeName": {
              "id": 967,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 966,
                "name": "UserOperation",
                "nameLocations": [
                  "352:13:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 591,
                "src": "352:13:10"
              },
              "referencedDeclaration": 591,
              "src": "352:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$591_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 970,
            "nodeType": "VariableDeclaration",
            "src": "372:29:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "66c00cca",
            "mutability": "mutable",
            "name": "nftPassAddress",
            "nameLocation": "387:14:10",
            "scope": 1128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 969,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "372:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 973,
            "nodeType": "VariableDeclaration",
            "src": "407:31:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0ac611b",
            "mutability": "mutable",
            "name": "whiteAddresses",
            "nameLocation": "424:14:10",
            "scope": 1128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 971,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "407:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 972,
              "nodeType": "ArrayTypeName",
              "src": "407:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 996,
            "nodeType": "FunctionDefinition",
            "src": "445:212:10",
            "nodes": [],
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "573:84:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 987,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "583:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 988,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "600:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "583:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "583:31:10"
                },
                {
                  "expression": {
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 991,
                      "name": "whiteAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "624:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 992,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "641:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "624:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "624:26:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 984,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 976,
                    "src": "556:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$427",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 985,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 983,
                  "name": "BasePaymaster",
                  "nameLocations": [
                    "542:13:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 204,
                  "src": "542:13:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "542:26:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "469:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "457:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$427",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 975,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 974,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "457:11:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 427,
                      "src": "457:11:10"
                    },
                    "referencedDeclaration": 427,
                    "src": "457:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$427",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "nftPassAddress",
                  "nameLocation": "490:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "482:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 981,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "523:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "506:26:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 979,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "506:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 980,
                    "nodeType": "ArrayTypeName",
                    "src": "506:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "456:77:10"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:10"
            },
            "scope": 1128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1008,
            "nodeType": "FunctionDefinition",
            "src": "663:124:10",
            "nodes": [],
            "body": {
              "id": 1007,
              "nodeType": "Block",
              "src": "736:51:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1003,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "746:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1004,
                      "name": "newNftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "763:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "746:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "746:34:10"
                }
              ]
            },
            "functionSelector": "d97e0ada",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1001,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1000,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "726:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 727,
                  "src": "726:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "726:9:10"
              }
            ],
            "name": "setNftPassAddress",
            "nameLocation": "672:17:10",
            "parameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "newNftPassAddress",
                  "nameLocation": "698:17:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "690:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:27:10"
            },
            "returnParameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:0:10"
            },
            "scope": 1128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1021,
            "nodeType": "FunctionDefinition",
            "src": "793:117:10",
            "nodes": [],
            "body": {
              "id": 1020,
              "nodeType": "Block",
              "src": "867:43:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1016,
                      "name": "whiteAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "877:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1017,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "894:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "877:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "877:26:10"
                }
              ]
            },
            "functionSelector": "eb4bd055",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1014,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1013,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "857:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 727,
                  "src": "857:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "857:9:10"
              }
            ],
            "name": "setWhiteAddresses",
            "nameLocation": "802:17:10",
            "parameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1011,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "837:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1021,
                  "src": "820:26:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1009,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "820:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1010,
                    "nodeType": "ArrayTypeName",
                    "src": "820:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:28:10"
            },
            "returnParameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "867:0:10"
            },
            "scope": 1128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1095,
            "nodeType": "FunctionDefinition",
            "src": "916:774:10",
            "nodes": [],
            "body": {
              "id": 1094,
              "nodeType": "Block",
              "src": "1125:565:10",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1038,
                      "mutability": "mutable",
                      "name": "nftContract",
                      "nameLocation": "1143:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1094,
                      "src": "1135:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$924",
                        "typeString": "contract IERC721"
                      },
                      "typeName": {
                        "id": 1037,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1036,
                          "name": "IERC721",
                          "nameLocations": [
                            "1135:7:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 924,
                          "src": "1135:7:10"
                        },
                        "referencedDeclaration": 924,
                        "src": "1135:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$924",
                          "typeString": "contract IERC721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1042,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1040,
                        "name": "nftPassAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 970,
                        "src": "1165:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1039,
                      "name": "IERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 924,
                      "src": "1157:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC721_$924_$",
                        "typeString": "type(contract IERC721)"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$924",
                      "typeString": "contract IERC721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1135:45:10"
                },
                {
                  "assignments": [
                    1044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1044,
                      "mutability": "mutable",
                      "name": "tokenCount",
                      "nameLocation": "1198:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1094,
                      "src": "1190:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1043,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1190:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1050,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1047,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1024,
                          "src": "1233:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$591_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1240:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 570,
                        "src": "1233:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1045,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1038,
                        "src": "1211:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$924",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1223:9:10",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 849,
                      "src": "1211:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1211:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1190:57:10"
                },
                {
                  "assignments": [
                    1052,
                    1054,
                    1056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1052,
                      "mutability": "mutable",
                      "name": "dest",
                      "nameLocation": "1267:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1094,
                      "src": "1259:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1051,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1259:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1054,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1281:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1094,
                      "src": "1273:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1053,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1273:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1056,
                      "mutability": "mutable",
                      "name": "func",
                      "nameLocation": "1301:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1094,
                      "src": "1288:17:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1055,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1288:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1069,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1059,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1024,
                          "src": "1320:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$591_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1327:8:10",
                        "memberName": "callData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 576,
                        "src": "1320:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1338:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1061,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1338:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 1064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1347:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1063,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1347:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 1066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1356:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1065,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1356:5:10",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 1067,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1337:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 1057,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1309:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1313:6:10",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1309:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1309:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(address payable,uint256,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1258:105:10"
                },
                {
                  "condition": {
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1377:21:10",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1071,
                          "name": "dest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "1393:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1070,
                        "name": "_isInWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1127,
                        "src": "1378:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 1072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1378:20:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1079,
                  "nodeType": "IfStatement",
                  "src": "1373:66:10",
                  "trueBody": {
                    "id": 1078,
                    "nodeType": "Block",
                    "src": "1400:39:10",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 1074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1422:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 1075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1426:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 1076,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1421:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 1035,
                        "id": 1077,
                        "nodeType": "Return",
                        "src": "1414:14:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1080,
                      "name": "tokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1044,
                      "src": "1453:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1466:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1453:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1092,
                    "nodeType": "Block",
                    "src": "1573:111:10",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 1088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1667:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1671:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 1090,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1666:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 1035,
                        "id": 1091,
                        "nodeType": "Return",
                        "src": "1659:14:10"
                      }
                    ]
                  },
                  "id": 1093,
                  "nodeType": "IfStatement",
                  "src": "1449:235:10",
                  "trueBody": {
                    "id": 1087,
                    "nodeType": "Block",
                    "src": "1469:98:10",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 1083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1550:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "30",
                              "id": 1084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1554:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "id": 1085,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1549:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 0)"
                          }
                        },
                        "functionReturnParameters": 1035,
                        "id": 1086,
                        "nodeType": "Return",
                        "src": "1542:14:10"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              51
            ],
            "functionSelector": "f465c77e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validatePaymasterUserOp",
            "nameLocation": "925:23:10",
            "overrides": {
              "id": 1030,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1055:8:10"
            },
            "parameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "972:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "949:29:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$591_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 1023,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1022,
                      "name": "UserOperation",
                      "nameLocations": [
                        "949:13:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 591,
                      "src": "949:13:10"
                    },
                    "referencedDeclaration": 591,
                    "src": "949:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$591_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "988:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "980:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "1008:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "1000:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "948:68:10"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1032,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1094:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "1081:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1031,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1111:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1095,
                  "src": "1103:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1080:40:10"
            },
            "scope": 1128,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1127,
            "nodeType": "FunctionDefinition",
            "src": "1696:285:10",
            "nodes": [],
            "body": {
              "id": 1126,
              "nodeType": "Block",
              "src": "1763:218:10",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 1122,
                    "nodeType": "Block",
                    "src": "1853:99:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1113,
                              "name": "whiteAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 973,
                              "src": "1871:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1115,
                            "indexExpression": {
                              "id": 1114,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1103,
                              "src": "1886:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1871:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1116,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1097,
                            "src": "1892:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1871:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1121,
                        "nodeType": "IfStatement",
                        "src": "1867:75:10",
                        "trueBody": {
                          "id": 1120,
                          "nodeType": "Block",
                          "src": "1898:44:10",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 1118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1923:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1101,
                              "id": 1119,
                              "nodeType": "Return",
                              "src": "1916:11:10"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1106,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1103,
                      "src": "1821:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1107,
                        "name": "whiteAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "1825:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1840:6:10",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1825:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1821:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1123,
                  "initializationExpression": {
                    "assignments": [
                      1103
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1814:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1123,
                        "src": "1806:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1806:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1105,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1818:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1806:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1848:3:10",
                      "subExpression": {
                        "id": 1110,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1103,
                        "src": "1848:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1112,
                    "nodeType": "ExpressionStatement",
                    "src": "1848:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "1801:151:10"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1969:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1101,
                  "id": 1125,
                  "nodeType": "Return",
                  "src": "1962:12:10"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isInWhiteList",
            "nameLocation": "1705:14:10",
            "parameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1728:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1127,
                  "src": "1720:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1719:14:10"
            },
            "returnParameters": {
              "id": 1101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1127,
                  "src": "1757:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1756:6:10"
            },
            "scope": 1128,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 963,
              "name": "BasePaymaster",
              "nameLocations": [
                "305:13:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 204,
              "src": "305:13:10"
            },
            "id": 964,
            "nodeType": "InheritanceSpecifier",
            "src": "305:13:10"
          }
        ],
        "canonicalName": "HackathonPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1128,
          204,
          808,
          946,
          462
        ],
        "name": "HackathonPaymaster",
        "nameLocation": "283:18:10",
        "scope": 1129,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 10
}