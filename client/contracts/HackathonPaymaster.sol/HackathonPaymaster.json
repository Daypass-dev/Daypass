{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftPassAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftPassAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "name": "setEntryPoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newNftPassAddress",
          "type": "address"
        }
      ],
      "name": "setNftPassAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        }
      ],
      "name": "setWhiteAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "whiteAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200133e3803806200133e833981016040819052620000349162000225565b82620000403362000086565b6200004b81620000d6565b50600280546001600160a01b0319166001600160a01b03841617905580516200007c90600390602084019062000163565b5050505062000325565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000e062000102565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620001615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b828054828255906000526020600020908101928215620001bb579160200282015b82811115620001bb57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000184565b50620001c9929150620001cd565b5090565b5b80821115620001c95760008155600101620001ce565b6001600160a01b0381168114620001fa57600080fd5b50565b80516200020a81620001e4565b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200023b57600080fd5b83516200024881620001e4565b809350506020808501516200025d81620001e4565b60408601519093506001600160401b03808211156200027b57600080fd5b818701915087601f8301126200029057600080fd5b815181811115620002a557620002a56200020f565b8060051b604051601f19603f83011681018181108582111715620002cd57620002cd6200020f565b60405291825284820192508381018501918a831115620002ec57600080fd5b938501935b8285101562000315576200030585620001fd565b84529385019392850192620002f1565b8096505050505050509250925092565b61100980620003356000396000f3fe6080604052600436106100fe5760003560e01c8063b0d691fe11610095578063d0e30db011610064578063d0e30db014610280578063d97e0ada14610288578063eb4bd055146102a8578063f2fde38b146102c8578063f465c77e146102e857600080fd5b8063b0d691fe14610208578063bb9fe6bf14610228578063c23a5cea1461023d578063c399ec881461025d57600080fd5b8063715018a6116100d1578063715018a6146101955780638da5cb5b146101aa578063a0ac611b146101c8578063a9a23409146101e857600080fd5b80630396cb6014610103578063205c287814610118578063584465f21461013857806366c00cca14610158575b600080fd5b610116610111366004610b5e565b610316565b005b34801561012457600080fd5b50610116610133366004610ba0565b610385565b34801561014457600080fd5b50610116610153366004610bcc565b6103db565b34801561016457600080fd5b50600254610178906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a157600080fd5b50610116610405565b3480156101b657600080fd5b506000546001600160a01b0316610178565b3480156101d457600080fd5b506101786101e3366004610be9565b610419565b3480156101f457600080fd5b50610116610203366004610c02565b610443565b34801561021457600080fd5b50600154610178906001600160a01b031681565b34801561023457600080fd5b5061011661045d565b34801561024957600080fd5b50610116610258366004610bcc565b6104c9565b34801561026957600080fd5b50610272610533565b60405190815260200161018c565b6101166105a5565b34801561029457600080fd5b506101166102a3366004610bcc565b6105eb565b3480156102b457600080fd5b506101166102c3366004610cd8565b610615565b3480156102d457600080fd5b506101166102e3366004610bcc565b610634565b3480156102f457600080fd5b50610308610303366004610d8a565b6106b2565b60405161018c929190610dde565b61031e61076d565b600154604051621cb65b60e51b815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b505050505050565b61038d61076d565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561036957600080fd5b6103e361076d565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61040d61076d565b61041760006107c7565b565b6003818154811061042957600080fd5b6000918252602090912001546001600160a01b0316905081565b61044b610817565b6104578484848461082e565b50505050565b61046561076d565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104b557600080fd5b505af1158015610457573d6000803e3d6000fd5b6104d161076d565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a09190610e33565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561051857600080fd5b6105f361076d565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61061d61076d565b8051610630906003906020840190610ae4565b5050565b61063c61076d565b6001600160a01b0381166106a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6106af816107c7565b50565b606060008080806106c588860189610e4c565b6106d3916004908290610e9a565b8101906106e09190610ec4565b9250925092506106ef83610866565b610712576001604051806020016040528060008152509094509450505050610765565b61072761072260208a018a610bcc565b6108cf565b61074a576001604051806020016040528060008152509094509450505050610765565b60006040518060200160405280600081525090945094505050505b935093915050565b6000546001600160a01b031633146104175760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161069d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461041757600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b604482015260640161069d565b6000805b6003548110156108c657826001600160a01b03166003828154811061089157610891610f75565b6000918252602090912001546001600160a01b0316036108b45750600192915050565b806108be81610fa1565b91505061086a565b50600092915050565b6002546040516370a0823160e01b81526001600160a01b0383811660048301526000921690829082906370a0823190602401602060405180830381865afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190610e33565b905060005b81811015610ad957604051632f745c5960e01b81526001600160a01b0386811660048301526024820183905260009190851690632f745c5990604401602060405180830381865afa1580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c49190610e33565b604051637a24d9a560e11b8152600481018290529091506000906001600160a01b0386169063f449b34a90602401602060405180830381865afa158015610a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a339190610e33565b60405163604b225160e01b8152600481018490529091506000906001600160a01b0387169063604b225190602401602060405180830381865afa158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190610e33565b9050610aae8183610fba565b421015610ac357506001979650505050505050565b5050508080610ad190610fa1565b915050610947565b506000949350505050565b828054828255906000526020600020908101928215610b39579160200282015b82811115610b3957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610b04565b50610b45929150610b49565b5090565b5b80821115610b455760008155600101610b4a565b600060208284031215610b7057600080fd5b813563ffffffff81168114610b8457600080fd5b9392505050565b6001600160a01b03811681146106af57600080fd5b60008060408385031215610bb357600080fd5b8235610bbe81610b8b565b946020939093013593505050565b600060208284031215610bde57600080fd5b8135610b8481610b8b565b600060208284031215610bfb57600080fd5b5035919050565b60008060008060608587031215610c1857600080fd5b843560038110610c2757600080fd5b9350602085013567ffffffffffffffff80821115610c4457600080fd5b818701915087601f830112610c5857600080fd5b813581811115610c6757600080fd5b886020828501011115610c7957600080fd5b95986020929092019750949560400135945092505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610cd057610cd0610c91565b604052919050565b60006020808385031215610ceb57600080fd5b823567ffffffffffffffff80821115610d0357600080fd5b818501915085601f830112610d1757600080fd5b813581811115610d2957610d29610c91565b8060051b9150610d3a848301610ca7565b8181529183018401918481019088841115610d5457600080fd5b938501935b83851015610d7e5784359250610d6e83610b8b565b8282529385019390850190610d59565b98975050505050505050565b600080600060608486031215610d9f57600080fd5b833567ffffffffffffffff811115610db657600080fd5b84016101608187031215610dc957600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610e0c5760208187018101516060868401015201610def565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610e4557600080fd5b5051919050565b6000808335601e19843603018112610e6357600080fd5b83018035915067ffffffffffffffff821115610e7e57600080fd5b602001915036819003821315610e9357600080fd5b9250929050565b60008085851115610eaa57600080fd5b83861115610eb757600080fd5b5050820193919092039150565b600080600060608486031215610ed957600080fd5b8335610ee481610b8b565b92506020848101359250604085013567ffffffffffffffff80821115610f0957600080fd5b818701915087601f830112610f1d57600080fd5b813581811115610f2f57610f2f610c91565b610f41601f8201601f19168501610ca7565b91508082528884828501011115610f5757600080fd5b80848401858401376000848284010152508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610fb357610fb3610f8b565b5060010190565b80820180821115610fcd57610fcd610f8b565b9291505056fea2646970667358221220dda98798ae050e06f3fca8d5633aba1c11fa04007dfa07791af5af1d000208de64736f6c63430008130033",
    "sourceMap": "303:2315:64:-:0;;;474:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;586:11;936:32:40;719:10:54;936:18:40;:32::i;:::-;528:26:8;542:11;528:13;:26::i;:::-;-1:-1:-1;613:14:64::1;:32:::0;;-1:-1:-1;;;;;;613:32:64::1;-1:-1:-1::0;;;;;613:32:64;::::1;;::::0;;655:26;;::::1;::::0;:14:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;474:214:::0;;;303:2315;;2433:187:40;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:40;;;-1:-1:-1;;;;;;2541:17:40;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;567:106:8:-;1094:13:40;:11;:13::i;:::-;642:10:8::1;:24:::0;;-1:-1:-1;;;;;;642:24:8::1;-1:-1:-1::0;;;;;642:24:8;;;::::1;::::0;;;::::1;::::0;;567:106::o;1359:130:40:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:40;719:10:54;1422:23:40;1414:68;;;;-1:-1:-1;;;1414:68:40;;2095:2:69;1414:68:40;;;2077:21:69;;;2114:18;;;2107:30;2173:34;2153:18;;;2146:62;2225:18;;1414:68:40;;;;;;;;1359:130::o;303:2315:64:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;303:2315:64;-1:-1:-1;;;;;303:2315:64;;;;;;;;;;;-1:-1:-1;303:2315:64;;;;;;;-1:-1:-1;303:2315:64;;;-1:-1:-1;303:2315:64;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:144:69;-1:-1:-1;;;;;102:31:69;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:151::-;242:13;;264:44;242:13;264:44;:::i;:::-;163:151;;;:::o;319:127::-;380:10;375:3;371:20;368:1;361:31;411:4;408:1;401:15;435:4;432:1;425:15;451:1437;584:6;592;600;653:2;641:9;632:7;628:23;624:32;621:52;;;669:1;666;659:12;621:52;701:9;695:16;720:44;758:5;720:44;:::i;:::-;783:5;773:15;;;807:2;854;843:9;839:18;833:25;867:46;905:7;867:46;:::i;:::-;983:2;968:18;;962:25;932:7;;-1:-1:-1;;;;;;1036:14:69;;;1033:34;;;1063:1;1060;1053:12;1033:34;1101:6;1090:9;1086:22;1076:32;;1146:7;1139:4;1135:2;1131:13;1127:27;1117:55;;1168:1;1165;1158:12;1117:55;1197:2;1191:9;1219:2;1215;1212:10;1209:36;;;1225:18;;:::i;:::-;1271:2;1268:1;1264:10;1303:2;1297:9;1366:2;1362:7;1357:2;1353;1349:11;1345:25;1337:6;1333:38;1421:6;1409:10;1406:22;1401:2;1389:10;1386:18;1383:46;1380:72;;;1432:18;;:::i;:::-;1468:2;1461:22;1518:18;;;1552:15;;;;-1:-1:-1;1594:11:69;;;1590:20;;;1622:19;;;1619:39;;;1654:1;1651;1644:12;1619:39;1678:11;;;;1698:159;1714:6;1709:3;1706:15;1698:159;;;1780:34;1810:3;1780:34;:::i;:::-;1768:47;;1731:12;;;;1835;;;;1698:159;;;1876:6;1866:16;;;;;;;;451:1437;;;;;:::o;1893:356::-;303:2315:64;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "303:2315:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2845:140:8;;;;;;:::i;:::-;;:::i;:::-;;2471:149;;;;;;;;;;-1:-1:-1;2471:149:8;;;;;:::i;:::-;;:::i;567:106::-;;;;;;;;;;-1:-1:-1;567:106:8;;;;;:::i;:::-;;:::i;401:29:64:-;;;;;;;;;;-1:-1:-1;401:29:64;;;;-1:-1:-1;;;;;401:29:64;;;;;;-1:-1:-1;;;;;1219:32:69;;;1201:51;;1189:2;1174:18;401:29:64;;;;;;;;1831:101:40;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:40;1273:6;-1:-1:-1;;;;;1273:6:40;1201:85;;436:31:64;;;;;;;;;;-1:-1:-1;436:31:64;;;;;:::i;:::-;;:::i;893:186:8:-;;;;;;;;;;-1:-1:-1;893:186:8;;;;;:::i;:::-;;:::i;445:29::-;;;;;;;;;;-1:-1:-1;445:29:8;;;;-1:-1:-1;;;;;445:29:8;;;3338:83;;;;;;;;;;;;;:::i;3640:133::-;;;;;;;;;;-1:-1:-1;3640:133:8;;;;;:::i;:::-;;:::i;3068:111::-;;;;;;;;;;;;;:::i;:::-;;;2913:25:69;;;2901:2;2886:18;3068:111:8;2767:177:69;2225:104:8;;;:::i;694:124:64:-;;;;;;;;;;-1:-1:-1;694:124:64;;;;;:::i;:::-;;:::i;824:117::-;;;;;;;;;;-1:-1:-1;824:117:64;;;;;:::i;:::-;;:::i;2081:198:40:-;;;;;;;;;;-1:-1:-1;2081:198:40;;;;;:::i;:::-;;:::i;947:820:64:-;;;;;;;;;;-1:-1:-1;947:820:64;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2845:140:8:-;1094:13:40;:11;:13::i;:::-;2924:10:8::1;::::0;:54:::1;::::0;-1:-1:-1;;;2924:54:8;;5970:10:69;5958:23;;2924:54:8::1;::::0;::::1;5940:42:69::0;-1:-1:-1;;;;;2924:10:8;;::::1;::::0;:19:::1;::::0;2951:9:::1;::::0;5913:18:69;;2924:54:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2845:140:::0;:::o;2471:149::-;1094:13:40;:11;:13::i;:::-;2567:10:8::1;::::0;:46:::1;::::0;-1:-1:-1;;;2567:46:8;;-1:-1:-1;;;;;6201:32:69;;;2567:46:8::1;::::0;::::1;6183:51:69::0;6250:18;;;6243:34;;;2567:10:8;;::::1;::::0;:21:::1;::::0;6156:18:69;;2567:46:8::1;;;;;;;;;;;;;;;;;::::0;::::1;567:106:::0;1094:13:40;:11;:13::i;:::-;642:10:8::1;:24:::0;;-1:-1:-1;;;;;;642:24:8::1;-1:-1:-1::0;;;;;642:24:8;;;::::1;::::0;;;::::1;::::0;;567:106::o;1831:101:40:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;436:31:64:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;436:31:64;;-1:-1:-1;436:31:64;:::o;893:186:8:-;1001:24;:22;:24::i;:::-;1035:37;1043:4;1049:7;;1058:13;1035:7;:37::i;:::-;893:186;;;;:::o;3338:83::-;1094:13:40;:11;:13::i;:::-;3390:10:8::1;;;;;;;;;-1:-1:-1::0;;;;;3390:10:8::1;-1:-1:-1::0;;;;;3390:22:8::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3640:133:::0;1094:13:40;:11;:13::i;:::-;3725:10:8::1;::::0;:41:::1;::::0;-1:-1:-1;;;3725:41:8;;-1:-1:-1;;;;;1219:32:69;;;3725:41:8::1;::::0;::::1;1201:51:69::0;3725:10:8;;::::1;::::0;:24:::1;::::0;1174:18:69;;3725:41:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3640:133:::0;:::o;3068:111::-;3137:10;;:35;;-1:-1:-1;;;3137:35:8;;3166:4;3137:35;;;1201:51:69;3111:7:8;;-1:-1:-1;;;;;3137:10:8;;:20;;1174:18:69;;3137:35:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3130:42;;3068:111;:::o;2225:104::-;2269:10;;:53;;-1:-1:-1;;;2269:53:8;;2316:4;2269:53;;;1201:51:69;-1:-1:-1;;;;;2269:10:8;;;;:20;;2297:9;;1174:18:69;;2269:53:8;;;;;;;;;;;;;;;;;;;694:124:64;1094:13:40;:11;:13::i;:::-;777:14:64::1;:34:::0;;-1:-1:-1;;;;;;777:34:64::1;-1:-1:-1::0;;;;;777:34:64;;;::::1;::::0;;;::::1;::::0;;694:124::o;824:117::-;1094:13:40;:11;:13::i;:::-;908:26:64;;::::1;::::0;:14:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;824:117:::0;:::o;2081:198:40:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:40;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:40;;6903:2:69;2161:73:40::1;::::0;::::1;6885:21:69::0;6942:2;6922:18;;;6915:30;6981:34;6961:18;;;6954:62;-1:-1:-1;;;7032:18:69;;;7025:36;7078:19;;2161:73:40::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;947:820:64:-;1112:20;1134:16;;;;1281:15;;;;:6;:15;:::i;:::-;:19;;1297:1;;1281:19;;;:::i;:::-;1270:58;;;;;;;:::i;:::-;1219:109;;;;;;1343:20;1358:4;1343:14;:20::i;:::-;1338:138;;1463:1;1451:14;;;;;;;;;;;;;;;;;;;;;;1338:138;1540:28;1554:13;;;;:6;:13;:::i;:::-;1540;:28::i;:::-;1535:146;;1668:1;1656:14;;;;;;;;;;;;;;;;;;;;;;1535:146;1758:1;1746:14;;;;;;;;;;;;;;;;;;;;947:820;;;;;;;:::o;1359:130:40:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:40;719:10:54;1422:23:40;1414:68;;;;-1:-1:-1;;;1414:68:40;;9159:2:69;1414:68:40;;;9141:21:69;;;9178:18;;;9171:30;9237:34;9217:18;;;9210:62;9289:18;;1414:68:40;8957:356:69;2433:187:40;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:40;;;-1:-1:-1;;;;;;2541:17:40;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;3837:110:8:-;3928:10;;-1:-1:-1;;;;;3928:10:8;3906;:33;3898:42;;;;;1839:286;2095:23;;-1:-1:-1;;;2095:23:8;;9520:2:69;2095:23:8;;;9502:21:69;9559:2;9539:18;;;9532:30;-1:-1:-1;;;9578:18:69;;;9571:43;9631:18;;2095:23:8;9318:337:69;1773:285:64;1834:4;;1878:151;1902:14;:21;1898:25;;1878:151;;;1969:4;-1:-1:-1;;;;;1948:25:64;:14;1963:1;1948:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1948:17:64;:25;1944:75;;-1:-1:-1;2000:4:64;;1773:285;-1:-1:-1;;1773:285:64:o;1944:75::-;1925:3;;;;:::i;:::-;;;;1878:151;;;-1:-1:-1;2046:5:64;;1773:285;-1:-1:-1;;1773:285:64:o;2064:552::-;2175:14;;2221:22;;-1:-1:-1;;;2221:22:64;;-1:-1:-1;;;;;1219:32:69;;;2221:22:64;;;1201:51:69;2127:4:64;;2175:14;;2127:4;;2175:14;;2221:13;;1174:18:69;;2221:22:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2200:43;;2259:9;2254:333;2278:10;2274:1;:14;2254:333;;;2327:35;;-1:-1:-1;;;2327:35:64;;-1:-1:-1;;;;;6201:32:69;;;2327:35:64;;;6183:51:69;6250:18;;;6243:34;;;2309:15:64;;2327:23;;;;;;6156:18:69;;2327:35:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2395:24;;-1:-1:-1;;;2395:24:64;;;;;2913:25:69;;;2309:53:64;;-1:-1:-1;2376:16:64;;-1:-1:-1;;;;;2395:15:64;;;;;2886:18:69;;2395:24:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2450:27;;-1:-1:-1;;;2450:27:64;;;;;2913:25:69;;;2376:43:64;;-1:-1:-1;2433:14:64;;-1:-1:-1;;;;;2450:18:64;;;;;2886::69;;2450:27:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2433:44;-1:-1:-1;2514:17:64;2433:44;2514:8;:17;:::i;:::-;2496:15;:35;2492:85;;;-1:-1:-1;2558:4:64;;2064:552;-1:-1:-1;;;;;;;2064:552:64:o;2492:85::-;2295:292;;;2290:3;;;;;:::i;:::-;;;;2254:333;;;-1:-1:-1;2604:5:64;;2064:552;-1:-1:-1;;;;2064:552:64:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:276:69;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;199:61;279:5;14:276;-1:-1:-1;;;14:276:69:o;295:139::-;-1:-1:-1;;;;;378:31:69;;368:42;;358:70;;424:1;421;414:12;439:331;515:6;523;576:2;564:9;555:7;551:23;547:32;544:52;;;592:1;589;582:12;544:52;631:9;618:23;650:39;683:5;650:39;:::i;:::-;708:5;760:2;745:18;;;;732:32;;-1:-1:-1;;;439:331:69:o;775:275::-;854:6;907:2;895:9;886:7;882:23;878:32;875:52;;;923:1;920;913:12;875:52;962:9;949:23;981:39;1014:5;981:39;:::i;1263:180::-;1322:6;1375:2;1363:9;1354:7;1350:23;1346:32;1343:52;;;1391:1;1388;1381:12;1343:52;-1:-1:-1;1414:23:69;;1263:180;-1:-1:-1;1263:180:69:o;1448:818::-;1551:6;1559;1567;1575;1628:2;1616:9;1607:7;1603:23;1599:32;1596:52;;;1644:1;1641;1634:12;1596:52;1683:9;1670:23;1722:1;1715:5;1712:12;1702:40;;1738:1;1735;1728:12;1702:40;1761:5;-1:-1:-1;1817:2:69;1802:18;;1789:32;1840:18;1870:14;;;1867:34;;;1897:1;1894;1887:12;1867:34;1935:6;1924:9;1920:22;1910:32;;1980:7;1973:4;1969:2;1965:13;1961:27;1951:55;;2002:1;1999;1992:12;1951:55;2042:2;2029:16;2068:2;2060:6;2057:14;2054:34;;;2084:1;2081;2074:12;2054:34;2129:7;2124:2;2115:6;2111:2;2107:15;2103:24;2100:37;2097:57;;;2150:1;2147;2140:12;2097:57;1448:818;;2181:2;2173:11;;;;;-1:-1:-1;2203:6:69;;2256:2;2241:18;2228:32;;-1:-1:-1;1448:818:69;-1:-1:-1;;;1448:818:69:o;3209:127::-;3270:10;3265:3;3261:20;3258:1;3251:31;3301:4;3298:1;3291:15;3325:4;3322:1;3315:15;3341:275;3412:2;3406:9;3477:2;3458:13;;-1:-1:-1;;3454:27:69;3442:40;;3512:18;3497:34;;3533:22;;;3494:62;3491:88;;;3559:18;;:::i;:::-;3595:2;3588:22;3341:275;;-1:-1:-1;3341:275:69:o;3621:1029::-;3705:6;3736:2;3779;3767:9;3758:7;3754:23;3750:32;3747:52;;;3795:1;3792;3785:12;3747:52;3835:9;3822:23;3864:18;3905:2;3897:6;3894:14;3891:34;;;3921:1;3918;3911:12;3891:34;3959:6;3948:9;3944:22;3934:32;;4004:7;3997:4;3993:2;3989:13;3985:27;3975:55;;4026:1;4023;4016:12;3975:55;4062:2;4049:16;4084:2;4080;4077:10;4074:36;;;4090:18;;:::i;:::-;4136:2;4133:1;4129:10;4119:20;;4159:28;4183:2;4179;4175:11;4159:28;:::i;:::-;4221:15;;;4291:11;;;4287:20;;;4252:12;;;;4319:19;;;4316:39;;;4351:1;4348;4341:12;4316:39;4375:11;;;;4395:225;4411:6;4406:3;4403:15;4395:225;;;4491:3;4478:17;4465:30;;4508:39;4541:5;4508:39;:::i;:::-;4560:18;;;4428:12;;;;4598;;;;4395:225;;;4639:5;3621:1029;-1:-1:-1;;;;;;;;3621:1029:69:o;4655:529::-;4765:6;4773;4781;4834:2;4822:9;4813:7;4809:23;4805:32;4802:52;;;4850:1;4847;4840:12;4802:52;4890:9;4877:23;4923:18;4915:6;4912:30;4909:50;;;4955:1;4952;4945:12;4909:50;4978:22;;5034:3;5016:16;;;5012:26;5009:46;;;5051:1;5048;5041:12;5009:46;5074:2;5123;5108:18;;5095:32;;-1:-1:-1;5174:2:69;5159:18;;;5146:32;;4655:529;-1:-1:-1;;;4655:529:69:o;5189:602::-;5364:2;5353:9;5346:21;5327:4;5396:6;5390:13;5439:6;5434:2;5423:9;5419:18;5412:34;5464:1;5474:144;5488:6;5485:1;5482:13;5474:144;;;5601:4;5585:14;;;5581:25;;5575:32;5570:2;5551:17;;;5547:26;5540:68;5503:12;5474:144;;;5478:3;5667:1;5662:2;5653:6;5642:9;5638:22;5634:31;5627:42;5737:2;5730;5726:7;5721:2;5713:6;5709:15;5705:29;5694:9;5690:45;5686:54;5678:62;;;5778:6;5771:4;5760:9;5756:20;5749:36;5189:602;;;;;:::o;6512:184::-;6582:6;6635:2;6623:9;6614:7;6610:23;6606:32;6603:52;;;6651:1;6648;6641:12;6603:52;-1:-1:-1;6674:16:69;;6512:184;-1:-1:-1;6512:184:69:o;7108:521::-;7185:4;7191:6;7251:11;7238:25;7345:2;7341:7;7330:8;7314:14;7310:29;7306:43;7286:18;7282:68;7272:96;;7364:1;7361;7354:12;7272:96;7391:33;;7443:20;;;-1:-1:-1;7486:18:69;7475:30;;7472:50;;;7518:1;7515;7508:12;7472:50;7551:4;7539:17;;-1:-1:-1;7582:14:69;7578:27;;;7568:38;;7565:58;;;7619:1;7616;7609:12;7565:58;7108:521;;;;;:::o;7634:331::-;7739:9;7750;7792:8;7780:10;7777:24;7774:44;;;7814:1;7811;7804:12;7774:44;7843:6;7833:8;7830:20;7827:40;;;7863:1;7860;7853:12;7827:40;-1:-1:-1;;7889:23:69;;;7934:25;;;;;-1:-1:-1;7634:331:69:o;7970:982::-;8064:6;8072;8080;8133:2;8121:9;8112:7;8108:23;8104:32;8101:52;;;8149:1;8146;8139:12;8101:52;8188:9;8175:23;8207:39;8240:5;8207:39;:::i;:::-;8265:5;-1:-1:-1;8289:2:69;8323:18;;;8310:32;;-1:-1:-1;8393:2:69;8378:18;;8365:32;8416:18;8446:14;;;8443:34;;;8473:1;8470;8463:12;8443:34;8511:6;8500:9;8496:22;8486:32;;8556:7;8549:4;8545:2;8541:13;8537:27;8527:55;;8578:1;8575;8568:12;8527:55;8614:2;8601:16;8636:2;8632;8629:10;8626:36;;;8642:18;;:::i;:::-;8684:53;8727:2;8708:13;;-1:-1:-1;;8704:27:69;8700:36;;8684:53;:::i;:::-;8671:66;;8760:2;8753:5;8746:17;8800:7;8795:2;8790;8786;8782:11;8778:20;8775:33;8772:53;;;8821:1;8818;8811:12;8772:53;8876:2;8871;8867;8863:11;8858:2;8851:5;8847:14;8834:45;8920:1;8915:2;8910;8903:5;8899:14;8895:23;8888:34;;8941:5;8931:15;;;;;7970:982;;;;;:::o;9660:127::-;9721:10;9716:3;9712:20;9709:1;9702:31;9752:4;9749:1;9742:15;9776:4;9773:1;9766:15;9792:127;9853:10;9848:3;9844:20;9841:1;9834:31;9884:4;9881:1;9874:15;9908:4;9905:1;9898:15;9924:135;9963:3;9984:17;;;9981:43;;10004:18;;:::i;:::-;-1:-1:-1;10051:1:69;10040:13;;9924:135::o;10343:125::-;10408:9;;;10429:10;;;10426:36;;;10442:18;;:::i;:::-;10343:125;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "nftPassAddress()": "66c00cca",
    "owner()": "8da5cb5b",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "setEntryPoint(address)": "584465f2",
    "setNftPassAddress(address)": "d97e0ada",
    "setWhiteAddresses(address[])": "eb4bd055",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "whiteAddresses(uint256)": "a0ac611b",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftPassAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftPassAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"name\":\"setEntryPoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNftPassAddress\",\"type\":\"address\"}],\"name\":\"setNftPassAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"setWhiteAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whiteAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"deadline\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HackathonPaymaster.sol\":\"HackathonPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x1b12d38bc24b410bc582a5fc0f5155184e68e14630b1391ef3d4c3cd407354b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://793e93f891872eef7c5a0d915f220845eb6881db7e6ede8d1f15e7140c66c20b\",\"dweb:/ipfs/QmQMeyFdAocP4aL1JJu8sQqHjnJBtXoCdPbvPQmTyauWrt\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x4fb508f4783ad56f4bb4f4f0bb2cce74adbf3ddc2b0534484b4f06b9a5978fb3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://22b844a90513e4f8cd1188c507284d6d9e79bd2c6447fea1ee88d50b9ec88c2e\",\"dweb:/ipfs/QmXEnA4bAXhwvpQXAMbU5JDjDh7yEFHLxMR18SFhXzgczv\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x838126b117bcf935509a46860821fb216678d9ce30f9a8471f62f48c37c1136c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2d0ea19eeb548599a0a06ebd1b72781d6a8a447130050eb8400fbd1ae452c139\",\"dweb:/ipfs/QmWAa9tygDnueVnp28295AnJrrStJc4VH5zHsU8xakPikw\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x81716fcec7b72fc72a4d64c06341bd4457d2cdecf5cb66c68784512af35a6c42\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0bdada4c9266d5bb904a44696f9f269c00a8a8b349732f20c160c92ce48ee0ec\",\"dweb:/ipfs/QmXRVu4AxT9TmLLo2aGuM7KT1qr93EVgy6dLjNb5FgwyxY\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab\",\"dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x9d677e4299f7c97c820f0c444739bd39cda943def1c38cdb7960038191697bbc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bd9abee48b95851f758e6e333e4bdf9aaed0e1a25fe6b2fb0e71c38782215df6\",\"dweb:/ipfs/QmRseGvgX9N8cHnJtbnuQKHxtd3JZYWR6quyUdrMQunYgq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/Hackathon721.sol\":{\"keccak256\":\"0x7f623e464193a797bda157355c864cb2312f8d837a433883692be2e10c251dfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444aba56b409cf49a4a0b034c281ad275660fe22ba2a0f82388fb2b530099876\",\"dweb:/ipfs/QmNzfnX1LAMNoDVdL2Hxuhhd7XiufBwGqSCuZbha22o6bw\"]},\"src/HackathonPaymaster.sol\":{\"keccak256\":\"0x560ae5bb47add9969c6dc4ea04b5b70732db2fb45c64d66ce63a6fee3b2d77b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://88b391f82889263fe1fc000b00be8248fcc04d5c1d6e70adc77a02f04078fb4d\",\"dweb:/ipfs/QmTnjde9MZbmhRj4G62pkdU5zEnNGb8QEfUka7fFTZtvaL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nftPassAddress",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "addresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftPassAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntryPoint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newNftPassAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNftPassAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "addresses",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWhiteAddresses"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "whiteAddresses",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp      zero length to signify postOp is not required.",
              "deadline": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/HackathonPaymaster.sol": "HackathonPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BasePaymaster.sol": {
        "keccak256": "0x1b12d38bc24b410bc582a5fc0f5155184e68e14630b1391ef3d4c3cd407354b6",
        "urls": [
          "bzz-raw://793e93f891872eef7c5a0d915f220845eb6881db7e6ede8d1f15e7140c66c20b",
          "dweb:/ipfs/QmQMeyFdAocP4aL1JJu8sQqHjnJBtXoCdPbvPQmTyauWrt"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x4fb508f4783ad56f4bb4f4f0bb2cce74adbf3ddc2b0534484b4f06b9a5978fb3",
        "urls": [
          "bzz-raw://22b844a90513e4f8cd1188c507284d6d9e79bd2c6447fea1ee88d50b9ec88c2e",
          "dweb:/ipfs/QmXEnA4bAXhwvpQXAMbU5JDjDh7yEFHLxMR18SFhXzgczv"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x838126b117bcf935509a46860821fb216678d9ce30f9a8471f62f48c37c1136c",
        "urls": [
          "bzz-raw://2d0ea19eeb548599a0a06ebd1b72781d6a8a447130050eb8400fbd1ae452c139",
          "dweb:/ipfs/QmWAa9tygDnueVnp28295AnJrrStJc4VH5zHsU8xakPikw"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x81716fcec7b72fc72a4d64c06341bd4457d2cdecf5cb66c68784512af35a6c42",
        "urls": [
          "bzz-raw://0bdada4c9266d5bb904a44696f9f269c00a8a8b349732f20c160c92ce48ee0ec",
          "dweb:/ipfs/QmXRVu4AxT9TmLLo2aGuM7KT1qr93EVgy6dLjNb5FgwyxY"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73",
        "urls": [
          "bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab",
          "dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x9d677e4299f7c97c820f0c444739bd39cda943def1c38cdb7960038191697bbc",
        "urls": [
          "bzz-raw://bd9abee48b95851f758e6e333e4bdf9aaed0e1a25fe6b2fb0e71c38782215df6",
          "dweb:/ipfs/QmRseGvgX9N8cHnJtbnuQKHxtd3JZYWR6quyUdrMQunYgq"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/Hackathon721.sol": {
        "keccak256": "0x7f623e464193a797bda157355c864cb2312f8d837a433883692be2e10c251dfb",
        "urls": [
          "bzz-raw://444aba56b409cf49a4a0b034c281ad275660fe22ba2a0f82388fb2b530099876",
          "dweb:/ipfs/QmNzfnX1LAMNoDVdL2Hxuhhd7XiufBwGqSCuZbha22o6bw"
        ],
        "license": "MIT"
      },
      "src/HackathonPaymaster.sol": {
        "keccak256": "0x560ae5bb47add9969c6dc4ea04b5b70732db2fb45c64d66ce63a6fee3b2d77b6",
        "urls": [
          "bzz-raw://88b391f82889263fe1fc000b00be8248fcc04d5c1d6e70adc77a02f04078fb4d",
          "dweb:/ipfs/QmTnjde9MZbmhRj4G62pkdU5zEnNGb8QEfUka7fFTZtvaL"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/HackathonPaymaster.sol",
    "id": 41172,
    "exportedSymbols": {
      "Address": [
        38531
      ],
      "BasePaymaster": [
        3085
      ],
      "Context": [
        38553
      ],
      "ERC165": [
        39184
      ],
      "ERC721": [
        37655
      ],
      "ERC721Enumerable": [
        38143
      ],
      "Hackathon721": [
        40944
      ],
      "HackathonPaymaster": [
        41171
      ],
      "IAggregator": [
        6054
      ],
      "IERC165": [
        39196
      ],
      "IERC721": [
        37771
      ],
      "IERC721Enumerable": [
        38174
      ],
      "IERC721Metadata": [
        38201
      ],
      "IERC721Receiver": [
        37789
      ],
      "IEntryPoint": [
        6253
      ],
      "IPaymaster": [
        6288
      ],
      "IStakeManager": [
        6393
      ],
      "Math": [
        40061
      ],
      "Ownable": [
        36098
      ],
      "Strings": [
        38788
      ],
      "UserOperation": [
        6418
      ],
      "UserOperationLib": [
        6523
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:2583:64",
    "nodes": [
      {
        "id": 40946,
        "nodeType": "PragmaDirective",
        "src": "36:24:64",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 40947,
        "nodeType": "ImportDirective",
        "src": "99:69:64",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "file": "../lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41172,
        "sourceUnit": 3086,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40948,
        "nodeType": "ImportDirective",
        "src": "169:74:64",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41172,
        "sourceUnit": 37772,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40949,
        "nodeType": "ImportDirective",
        "src": "244:28:64",
        "nodes": [],
        "absolutePath": "src/Hackathon721.sol",
        "file": "./Hackathon721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41172,
        "sourceUnit": 40945,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41171,
        "nodeType": "ContractDefinition",
        "src": "303:2315:64",
        "nodes": [
          {
            "id": 40955,
            "nodeType": "UsingForDirective",
            "src": "354:41:64",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40952,
              "name": "UserOperationLib",
              "nameLocations": [
                "360:16:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6523,
              "src": "360:16:64"
            },
            "typeName": {
              "id": 40954,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40953,
                "name": "UserOperation",
                "nameLocations": [
                  "381:13:64"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6418,
                "src": "381:13:64"
              },
              "referencedDeclaration": 6418,
              "src": "381:13:64",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$6418_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 40957,
            "nodeType": "VariableDeclaration",
            "src": "401:29:64",
            "nodes": [],
            "constant": false,
            "functionSelector": "66c00cca",
            "mutability": "mutable",
            "name": "nftPassAddress",
            "nameLocation": "416:14:64",
            "scope": 41171,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40956,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "401:7:64",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40960,
            "nodeType": "VariableDeclaration",
            "src": "436:31:64",
            "nodes": [],
            "constant": false,
            "functionSelector": "a0ac611b",
            "mutability": "mutable",
            "name": "whiteAddresses",
            "nameLocation": "453:14:64",
            "scope": 41171,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 40958,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "436:7:64",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40959,
              "nodeType": "ArrayTypeName",
              "src": "436:9:64",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40983,
            "nodeType": "FunctionDefinition",
            "src": "474:214:64",
            "nodes": [],
            "body": {
              "id": 40982,
              "nodeType": "Block",
              "src": "603:85:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40974,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40957,
                      "src": "613:14:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40975,
                      "name": "_nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40965,
                      "src": "630:15:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "613:32:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40977,
                  "nodeType": "ExpressionStatement",
                  "src": "613:32:64"
                },
                {
                  "expression": {
                    "id": 40980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40978,
                      "name": "whiteAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40960,
                      "src": "655:14:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40979,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40968,
                      "src": "672:9:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "655:26:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 40981,
                  "nodeType": "ExpressionStatement",
                  "src": "655:26:64"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 40971,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40963,
                    "src": "586:11:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$6253",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 40972,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 40970,
                  "name": "BasePaymaster",
                  "nameLocations": [
                    "572:13:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3085,
                  "src": "572:13:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "572:26:64"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 40969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40963,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "498:11:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 40983,
                  "src": "486:23:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$6253",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 40962,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40961,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "486:11:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6253,
                      "src": "486:11:64"
                    },
                    "referencedDeclaration": 6253,
                    "src": "486:11:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$6253",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40965,
                  "mutability": "mutable",
                  "name": "_nftPassAddress",
                  "nameLocation": "519:15:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 40983,
                  "src": "511:23:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40968,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "553:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 40983,
                  "src": "536:26:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40966,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "536:7:64",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 40967,
                    "nodeType": "ArrayTypeName",
                    "src": "536:9:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "485:78:64"
            },
            "returnParameters": {
              "id": 40973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:0:64"
            },
            "scope": 41171,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40995,
            "nodeType": "FunctionDefinition",
            "src": "694:124:64",
            "nodes": [],
            "body": {
              "id": 40994,
              "nodeType": "Block",
              "src": "767:51:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40990,
                      "name": "nftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40957,
                      "src": "777:14:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40991,
                      "name": "newNftPassAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40985,
                      "src": "794:17:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "777:34:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40993,
                  "nodeType": "ExpressionStatement",
                  "src": "777:34:64"
                }
              ]
            },
            "functionSelector": "d97e0ada",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40988,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40987,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "757:9:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36017,
                  "src": "757:9:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "757:9:64"
              }
            ],
            "name": "setNftPassAddress",
            "nameLocation": "703:17:64",
            "parameters": {
              "id": 40986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40985,
                  "mutability": "mutable",
                  "name": "newNftPassAddress",
                  "nameLocation": "729:17:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 40995,
                  "src": "721:25:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:27:64"
            },
            "returnParameters": {
              "id": 40989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:0:64"
            },
            "scope": 41171,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41008,
            "nodeType": "FunctionDefinition",
            "src": "824:117:64",
            "nodes": [],
            "body": {
              "id": 41007,
              "nodeType": "Block",
              "src": "898:43:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41003,
                      "name": "whiteAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40960,
                      "src": "908:14:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41004,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40998,
                      "src": "925:9:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "908:26:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 41006,
                  "nodeType": "ExpressionStatement",
                  "src": "908:26:64"
                }
              ]
            },
            "functionSelector": "eb4bd055",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41001,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41000,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "888:9:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36017,
                  "src": "888:9:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "888:9:64"
              }
            ],
            "name": "setWhiteAddresses",
            "nameLocation": "833:17:64",
            "parameters": {
              "id": 40999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40998,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "868:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41008,
                  "src": "851:26:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40996,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "851:7:64",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 40997,
                    "nodeType": "ArrayTypeName",
                    "src": "851:9:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "850:28:64"
            },
            "returnParameters": {
              "id": 41002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:0:64"
            },
            "scope": 41171,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41070,
            "nodeType": "FunctionDefinition",
            "src": "947:820:64",
            "nodes": [],
            "body": {
              "id": 41069,
              "nodeType": "Block",
              "src": "1156:611:64",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41024,
                    41026,
                    41028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41024,
                      "mutability": "mutable",
                      "name": "dest",
                      "nameLocation": "1228:4:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 41069,
                      "src": "1220:12:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41023,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1220:7:64",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41026,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1242:5:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 41069,
                      "src": "1234:13:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41025,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1234:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41028,
                      "mutability": "mutable",
                      "name": "func",
                      "nameLocation": "1262:4:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 41069,
                      "src": "1249:17:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 41027,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1249:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41043,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 41031,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41011,
                            "src": "1281:6:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$6418_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 41032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1288:8:64",
                          "memberName": "callData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6403,
                          "src": "1281:15:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 41034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "1281:19:64",
                        "startExpression": {
                          "hexValue": "34",
                          "id": 41033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1297:1:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 41036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1303:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41035,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1303:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 41038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1312:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 41037,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1312:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 41040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1321:5:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 41039,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1321:5:64",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 41041,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1302:25:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 41029,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1270:3:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 41030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1274:6:64",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1270:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 41042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1270:58:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(address payable,uint256,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1219:109:64"
                },
                {
                  "condition": {
                    "id": 41047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1342:21:64",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 41045,
                          "name": "dest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41024,
                          "src": "1358:4:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41044,
                        "name": "_isInWhiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41102,
                        "src": "1343:14:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 41046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1343:20:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41053,
                  "nodeType": "IfStatement",
                  "src": "1338:138:64",
                  "trueBody": {
                    "id": 41052,
                    "nodeType": "Block",
                    "src": "1365:111:64",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 41048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1459:2:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 41049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1463:1:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 41050,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1458:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 41022,
                        "id": 41051,
                        "nodeType": "Return",
                        "src": "1451:14:64"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 41058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1539:29:64",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 41055,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41011,
                            "src": "1554:6:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$6418_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 41056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1561:6:64",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6397,
                          "src": "1554:13:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41054,
                        "name": "_hasValidPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41170,
                        "src": "1540:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 41057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1540:28:64",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41064,
                  "nodeType": "IfStatement",
                  "src": "1535:146:64",
                  "trueBody": {
                    "id": 41063,
                    "nodeType": "Block",
                    "src": "1570:111:64",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 41059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1664:2:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "hexValue": "31",
                              "id": 41060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1668:1:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 41061,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1663:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_1_by_1_$",
                            "typeString": "tuple(literal_string \"\",int_const 1)"
                          }
                        },
                        "functionReturnParameters": 41022,
                        "id": 41062,
                        "nodeType": "Return",
                        "src": "1656:14:64"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 41065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1754:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "30",
                        "id": 41066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1758:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 41067,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1753:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$",
                      "typeString": "tuple(literal_string \"\",int_const 0)"
                    }
                  },
                  "functionReturnParameters": 41022,
                  "id": 41068,
                  "nodeType": "Return",
                  "src": "1746:14:64"
                }
              ]
            },
            "baseFunctions": [
              2932
            ],
            "functionSelector": "f465c77e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validatePaymasterUserOp",
            "nameLocation": "956:23:64",
            "overrides": {
              "id": 41017,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1086:8:64"
            },
            "parameters": {
              "id": 41016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41011,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1003:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41070,
                  "src": "980:29:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$6418_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 41010,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41009,
                      "name": "UserOperation",
                      "nameLocations": [
                        "980:13:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6418,
                      "src": "980:13:64"
                    },
                    "referencedDeclaration": 6418,
                    "src": "980:13:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$6418_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41013,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1019:10:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41070,
                  "src": "1011:18:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 41012,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41015,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "1039:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41070,
                  "src": "1031:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "979:68:64"
            },
            "returnParameters": {
              "id": 41022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41019,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1125:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41070,
                  "src": "1112:20:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41018,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41021,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1142:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41070,
                  "src": "1134:16:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1111:40:64"
            },
            "scope": 41171,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41102,
            "nodeType": "FunctionDefinition",
            "src": "1773:285:64",
            "nodes": [],
            "body": {
              "id": 41101,
              "nodeType": "Block",
              "src": "1840:218:64",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 41097,
                    "nodeType": "Block",
                    "src": "1930:99:64",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 41092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 41088,
                              "name": "whiteAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40960,
                              "src": "1948:14:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 41090,
                            "indexExpression": {
                              "id": 41089,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41078,
                              "src": "1963:1:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1948:17:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 41091,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41072,
                            "src": "1969:4:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1948:25:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41096,
                        "nodeType": "IfStatement",
                        "src": "1944:75:64",
                        "trueBody": {
                          "id": 41095,
                          "nodeType": "Block",
                          "src": "1975:44:64",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 41093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2000:4:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 41076,
                              "id": 41094,
                              "nodeType": "Return",
                              "src": "1993:11:64"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41081,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41078,
                      "src": "1898:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 41082,
                        "name": "whiteAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40960,
                        "src": "1902:14:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 41083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1917:6:64",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1902:21:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1898:25:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41098,
                  "initializationExpression": {
                    "assignments": [
                      41078
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41078,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1891:1:64",
                        "nodeType": "VariableDeclaration",
                        "scope": 41098,
                        "src": "1883:9:64",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41077,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1883:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41080,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1895:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1883:13:64"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1925:3:64",
                      "subExpression": {
                        "id": 41085,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41078,
                        "src": "1925:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41087,
                    "nodeType": "ExpressionStatement",
                    "src": "1925:3:64"
                  },
                  "nodeType": "ForStatement",
                  "src": "1878:151:64"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 41099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2046:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 41076,
                  "id": 41100,
                  "nodeType": "Return",
                  "src": "2039:12:64"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isInWhiteList",
            "nameLocation": "1782:14:64",
            "parameters": {
              "id": 41073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41072,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1805:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41102,
                  "src": "1797:12:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1796:14:64"
            },
            "returnParameters": {
              "id": 41076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41075,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41102,
                  "src": "1834:4:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41074,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:6:64"
            },
            "scope": 41171,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41170,
            "nodeType": "FunctionDefinition",
            "src": "2064:552:64",
            "nodes": [],
            "body": {
              "id": 41169,
              "nodeType": "Block",
              "src": "2133:483:64",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41111,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "2156:3:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 41169,
                      "src": "2143:16:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hackathon721_$40944",
                        "typeString": "contract Hackathon721"
                      },
                      "typeName": {
                        "id": 41110,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41109,
                          "name": "Hackathon721",
                          "nameLocations": [
                            "2143:12:64"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40944,
                          "src": "2143:12:64"
                        },
                        "referencedDeclaration": 40944,
                        "src": "2143:12:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackathon721_$40944",
                          "typeString": "contract Hackathon721"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41115,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41113,
                        "name": "nftPassAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40957,
                        "src": "2175:14:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41112,
                      "name": "Hackathon721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40944,
                      "src": "2162:12:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hackathon721_$40944_$",
                        "typeString": "type(contract Hackathon721)"
                      }
                    },
                    "id": 41114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2162:28:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hackathon721_$40944",
                      "typeString": "contract Hackathon721"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2143:47:64"
                },
                {
                  "assignments": [
                    41117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41117,
                      "mutability": "mutable",
                      "name": "tokenCount",
                      "nameLocation": "2208:10:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 41169,
                      "src": "2200:18:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41116,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2200:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41122,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41120,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41104,
                        "src": "2235:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41118,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41111,
                        "src": "2221:3:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackathon721_$40944",
                          "typeString": "contract Hackathon721"
                        }
                      },
                      "id": 41119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2225:9:64",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36846,
                      "src": "2221:13:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2221:22:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2200:43:64"
                },
                {
                  "body": {
                    "id": 41165,
                    "nodeType": "Block",
                    "src": "2295:292:64",
                    "statements": [
                      {
                        "assignments": [
                          41134
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41134,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "2317:7:64",
                            "nodeType": "VariableDeclaration",
                            "scope": 41165,
                            "src": "2309:15:64",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 41133,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2309:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41140,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 41137,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41104,
                              "src": "2351:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 41138,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41124,
                              "src": "2360:1:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 41135,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41111,
                              "src": "2327:3:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hackathon721_$40944",
                                "typeString": "contract Hackathon721"
                              }
                            },
                            "id": 41136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2331:19:64",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37867,
                            "src": "2327:23:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 41139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2327:35:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2309:53:64"
                      },
                      {
                        "assignments": [
                          41142
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41142,
                            "mutability": "mutable",
                            "name": "mintedAt",
                            "nameLocation": "2384:8:64",
                            "nodeType": "VariableDeclaration",
                            "scope": 41165,
                            "src": "2376:16:64",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 41141,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2376:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41147,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 41145,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41134,
                              "src": "2411:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 41143,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41111,
                              "src": "2395:3:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hackathon721_$40944",
                                "typeString": "contract Hackathon721"
                              }
                            },
                            "id": 41144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2399:11:64",
                            "memberName": "getMintedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40931,
                            "src": "2395:15:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 41146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2395:24:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2376:43:64"
                      },
                      {
                        "assignments": [
                          41149
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41149,
                            "mutability": "mutable",
                            "name": "period",
                            "nameLocation": "2441:6:64",
                            "nodeType": "VariableDeclaration",
                            "scope": 41165,
                            "src": "2433:14:64",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 41148,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2433:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41154,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 41152,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41134,
                              "src": "2469:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 41150,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41111,
                              "src": "2450:3:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hackathon721_$40944",
                                "typeString": "contract Hackathon721"
                              }
                            },
                            "id": 41151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2454:14:64",
                            "memberName": "getValidPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40943,
                            "src": "2450:18:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 41153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2450:27:64",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2433:44:64"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 41155,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2496:5:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 41156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2502:9:64",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2496:15:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 41157,
                              "name": "mintedAt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41142,
                              "src": "2514:8:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 41158,
                              "name": "period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41149,
                              "src": "2525:6:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2514:17:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2496:35:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41164,
                        "nodeType": "IfStatement",
                        "src": "2492:85:64",
                        "trueBody": {
                          "id": 41163,
                          "nodeType": "Block",
                          "src": "2533:44:64",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 41161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2558:4:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 41108,
                              "id": 41162,
                              "nodeType": "Return",
                              "src": "2551:11:64"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41127,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41124,
                      "src": "2274:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 41128,
                      "name": "tokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41117,
                      "src": "2278:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2274:14:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41166,
                  "initializationExpression": {
                    "assignments": [
                      41124
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41124,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2267:1:64",
                        "nodeType": "VariableDeclaration",
                        "scope": 41166,
                        "src": "2259:9:64",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2259:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41126,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2271:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2259:13:64"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2290:3:64",
                      "subExpression": {
                        "id": 41130,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41124,
                        "src": "2290:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41132,
                    "nodeType": "ExpressionStatement",
                    "src": "2290:3:64"
                  },
                  "nodeType": "ForStatement",
                  "src": "2254:333:64"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 41167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2604:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 41108,
                  "id": 41168,
                  "nodeType": "Return",
                  "src": "2597:12:64"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasValidPass",
            "nameLocation": "2073:13:64",
            "parameters": {
              "id": 41105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41104,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2095:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41170,
                  "src": "2087:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2086:17:64"
            },
            "returnParameters": {
              "id": 41108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41170,
                  "src": "2127:4:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41106,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2126:6:64"
            },
            "scope": 41171,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40950,
              "name": "BasePaymaster",
              "nameLocations": [
                "334:13:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3085,
              "src": "334:13:64"
            },
            "id": 40951,
            "nodeType": "InheritanceSpecifier",
            "src": "334:13:64"
          }
        ],
        "canonicalName": "HackathonPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41171,
          3085,
          36098,
          38553,
          6288
        ],
        "name": "HackathonPaymaster",
        "nameLocation": "312:18:64",
        "scope": 41172,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 64
}