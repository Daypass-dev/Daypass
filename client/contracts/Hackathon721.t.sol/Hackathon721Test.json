{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "testFailIncorrectValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "testFailTooManyTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFailWithdrawNotOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenUri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "testValidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawalWorksAsOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b50614dde8061003d6000396000f3fe60806040523480156200001157600080fd5b50600436106200012d5760003560e01c806385226c8111620000af578063ba85d69b116200007a578063ba85d69b1462000224578063df64143c146200022e578063e20c9f711462000245578063f053b645146200024f578063fa7626d4146200025957600080fd5b806385226c8114620001dc578063916a17c614620001f5578063b5508aa914620001ff578063ba414fa6146200020957600080fd5b80633e5e3c2311620000fc5780633e5e3c2314620001815780633f7286f4146200018b57806345a8f0e8146200019557806365cff61a14620001ac57806366d9a9a014620001c357600080fd5b80630449cdc114620001325780630a9254e4146200013e5780631ed7831c14620001485780632f3f94ae146200016a575b600080fd5b6200013c62000267565b005b6200013c62000338565b62000152620004d6565b60405162000161919062001f16565b60405180910390f35b6200013c6200017b36600462001f65565b6200053a565b62000152620008e8565b620001526200094a565b6200013c620001a636600462001f65565b620009ac565b6200013c620001bd36600462001f65565b62000bfa565b620001cd62001047565b60405162000161919062001f7f565b620001e66200113a565b6040516200016191906200208a565b620001cd62001214565b620001e6620012fe565b62000213620013d8565b604051901515815260200162000161565b6200013c62001503565b6200013c6200023f36600462001f65565b620017e3565b62000152620019b7565b6200013c62001a19565b600054620002139060ff1681565b601c5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062004d898339815191529063ca669fa790602401600060405180830381600087803b158015620002bc57600080fd5b505af1158015620002d1573d6000803e3d6000fd5b5050601b54604051630c6cfae560e21b8152600060048201526001600160a01b0390911692506331b3eb9491506024015b600060405180830381600087803b1580156200031d57600080fd5b505af115801562000332573d6000803e3d6000fd5b50505050565b601e80546001600160a01b031916600190811790915560405163ca669fa760e01b8152600481019190915260008051602062004d898339815191529063ca669fa790602401600060405180830381600087803b1580156200039857600080fd5b505af1158015620003ad573d6000803e3d6000fd5b50505050604051620003bf9062001f08565b604051809103906000f080158015620003dc573d6000803e3d6000fd5b50601b80546001600160a01b03929092166001600160a01b03199283168117909155601d8054831682179055601c805490921660021790915560405163c88a5e6d60e01b8152600481019190915268056bc75e2d63100000602482015260008051602062004d898339815191529063c88a5e6d90604401600060405180830381600087803b1580156200046e57600080fd5b505af115801562000483573d6000803e3d6000fd5b5050601c5460405163c88a5e6d60e01b81526001600160a01b03909116600482015268056bc75e2d63100000602482015260008051602062004d89833981519152925063c88a5e6d915060440162000302565b6060600d8054806020026020016040519081016040528092919081815260200182805480156200053057602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000511575b5050505050905090565b601c546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062004d89833981519152906306447d5690602401600060405180830381600087803b1580156200058f57600080fd5b505af1158015620005a4573d6000803e3d6000fd5b5050601b54601c546040516370a0823160e01b81526001600160a01b039182166004820152620006299450911691506370a08231906024015b602060405180830381865afa158015620005fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006219190620020f0565b600062001b22565b601b546040805163f34341c760e01b8152905160008051602062004d8983398151915292634c63e562926001600160a01b039091169163f34341c7916004808201926020929091908290030181865afa1580156200068b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006b19190620020f0565b83108015620006c05750600083115b6040518263ffffffff1660e01b8152600401620006e1911515815260200190565b60006040518083038186803b158015620006fa57600080fd5b505afa1580156200070f573d6000803e3d6000fd5b5050601b546040805163f51f96dd60e01b815290516001600160a01b03909216935063a0712d6892508491849163f51f96dd9160048083019260209291908290030181865afa15801562000767573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078d9190620020f0565b62000799919062002120565b836040518363ffffffff1660e01b8152600401620007b991815260200190565b6000604051808303818588803b158015620007d357600080fd5b505af1158015620007e8573d6000803e3d6000fd5b5050601b54601c546040516370a0823160e01b81526001600160a01b0391821660048201526200086d9550911692506370a0823191506024015b602060405180830381865afa15801562000840573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008669190620020f0565b8262001b22565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620008cc57600080fd5b505af1158015620008e1573d6000803e3d6000fd5b5050505050565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000530576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000511575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000530576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000511575050505050905090565b601b546040805163f34341c760e01b8152905160008051602062004d8983398151915292634c63e562926001600160a01b039091169163f34341c7916004808201926020929091908290030181865afa15801562000a0e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a349190620020f0565b8311801562000a435750606483105b6040518263ffffffff1660e01b815260040162000a64911515815260200190565b60006040518083038186803b15801562000a7d57600080fd5b505afa15801562000a92573d6000803e3d6000fd5b505050506000601b60009054906101000a90046001600160a01b03166001600160a01b031663f51f96dd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000aec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b129190620020f0565b601c5460405163ca669fa760e01b81526001600160a01b03909116600482015290915060008051602062004d898339815191529063ca669fa790602401600060405180830381600087803b15801562000b6a57600080fd5b505af115801562000b7f573d6000803e3d6000fd5b5050601b546001600160a01b0316915063a0712d68905062000ba2848462002120565b846040518363ffffffff1660e01b815260040162000bc291815260200190565b6000604051808303818588803b15801562000bdc57600080fd5b505af115801562000bf1573d6000803e3d6000fd5b50505050505050565b601c546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062004d89833981519152906306447d5690602401600060405180830381600087803b15801562000c4f57600080fd5b505af115801562000c64573d6000803e3d6000fd5b5050601b54601c546040516370a0823160e01b81526001600160a01b03918216600482015262000ca29450911691506370a0823190602401620005dd565b601b54601c5460405163018dbe6b60e41b81526001600160a01b03918216600482015262000d259291909116906318dbe6b0906024015b602060405180830381865afa15801562000cf7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d1d919062002140565b600062001c1d565b601b546040805163f34341c760e01b8152905160008051602062004d8983398151915292634c63e562926001600160a01b039091169163f34341c7916004808201926020929091908290030181865afa15801562000d87573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000dad9190620020f0565b8310801562000dbc5750600083115b6040518263ffffffff1660e01b815260040162000ddd911515815260200190565b60006040518083038186803b15801562000df657600080fd5b505afa15801562000e0b573d6000803e3d6000fd5b5050601b546040805163f51f96dd60e01b815290516001600160a01b03909216935063a0712d6892508491849163f51f96dd9160048083019260209291908290030181865afa15801562000e63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e899190620020f0565b62000e95919062002120565b836040518363ffffffff1660e01b815260040162000eb591815260200190565b6000604051808303818588803b15801562000ecf57600080fd5b505af115801562000ee4573d6000803e3d6000fd5b5050601b54601c546040516370a0823160e01b81526001600160a01b03918216600482015262000f239550911692506370a08231915060240162000822565b601b54601c5460405163018dbe6b60e41b81526001600160a01b03918216600482015262000fa59291909116906318dbe6b090602401602060405180830381865afa15801562000f77573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f9d919062002140565b600162001c1d565b6040516372eb5f8160e11b815266038d7ea4c68000600482015260008051602062004d898339815191529063e5d6bf0290602401600060405180830381600087803b15801562000ff457600080fd5b505af115801562001009573d6000803e3d6000fd5b5050601b54601c5460405163018dbe6b60e41b81526001600160a01b0391821660048201526200086d9450911691506318dbe6b09060240162000cd9565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015620011315760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200111857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620010d95790505b505050505081525050815260200190600101906200106b565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156200113157838290600052602060002001805462001180906200216b565b80601f0160208091040260200160405190810160405280929190818152602001828054620011ae906200216b565b8015620011ff5780601f10620011d357610100808354040283529160200191620011ff565b820191906000526020600020905b815481529060010190602001808311620011e157829003601f168201915b5050505050815260200190600101906200115e565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015620011315760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620012e557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620012a65790505b5050505050815250508152602001906001019062001238565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156200113157838290600052602060002001805462001344906200216b565b80601f016020809104026020016040519081016040528092919081815260200182805462001372906200216b565b8015620013c35780601f106200139757610100808354040283529160200191620013c3565b820191906000526020600020905b815481529060010190602001808311620013a557829003601f168201915b50505050508152602001906001019062001322565b60008054610100900460ff1615620013f95750600054610100900460ff1690565b600060008051602062004d898339815191523b15620014fe576040805160008051602062004d89833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162001480917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620021a7565b60408051601f19818403018152908290526200149c91620021da565b6000604051808303816000865af19150503d8060008114620014db576040519150601f19603f3d011682016040523d82523d6000602084013e620014e0565b606091505b5091505080806020019051810190620014fa919062002140565b9150505b919050565b601c546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062004d89833981519152906306447d5690602401600060405180830381600087803b1580156200155857600080fd5b505af11580156200156d573d6000803e3d6000fd5b5050601b54601c546040516370a0823160e01b81526001600160a01b039182166004820152620015ab9450911691506370a0823190602401620005dd565b601b546040805163f51f96dd60e01b815290516001600160a01b039092169163a0712d6891839163f51f96dd916004808201926020929091908290030181865afa158015620015fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016249190620020f0565b6200163190600162002120565b6040516001600160e01b031960e084901b168152600160048201526024016000604051808303818588803b1580156200166957600080fd5b505af11580156200167e573d6000803e3d6000fd5b5050601b5460405163c87b56dd60e01b8152600160048201526200170294506001600160a01b03909116925063c87b56dd9150602401600060405180830381865afa158015620016d2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620016fc91908101906200220e565b62001d94565b601b54601c546040516370a0823160e01b81526001600160a01b039182166004820152620017849291909116906370a0823190602401602060405180830381865afa15801562001756573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200177c9190620020f0565b600162001b22565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200031d57600080fd5b601b546040805163f34341c760e01b8152905160008051602062004d8983398151915292634c63e562926001600160a01b039091169163f34341c7916004808201926020929091908290030181865afa15801562001845573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200186b9190620020f0565b831080156200187a5750600083115b6040518263ffffffff1660e01b81526004016200189b911515815260200190565b60006040518083038186803b158015620018b457600080fd5b505afa158015620018c9573d6000803e3d6000fd5b5050601c5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602062004d89833981519152925063ca669fa79150602401600060405180830381600087803b1580156200192257600080fd5b505af115801562001937573d6000803e3d6000fd5b5050601b546001600160a01b0316915063a0712d68905062001960836512309ce5400062002120565b836040518363ffffffff1660e01b81526004016200198091815260200190565b6000604051808303818588803b1580156200199a57600080fd5b505af1158015620019af573d6000803e3d6000fd5b505050505050565b6060600c80548060200260200160405190810160405280929190818152602001828054801562000530576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000511575050505050905090565b601c54601d54601e5460405163ca669fa760e01b81526001600160a01b0391821660048201529281169283319291909116319060008051602062004d898339815191529063ca669fa790602401600060405180830381600087803b15801562001a8157600080fd5b505af115801562001a96573d6000803e3d6000fd5b5050601b54604051630c6cfae560e21b81526001600160a01b03878116600483015290911692506331b3eb949150602401600060405180830381600087803b15801562001ae257600080fd5b505af115801562001af7573d6000803e3d6000fd5b5062001b1d925050506001600160a01b0384163162001b178385620022c7565b62001b22565b505050565b80821462001c19577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001b959060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162001bce9190620022dd565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162001c07919062002316565b60405180910390a162001c1962001dde565b5050565b8015158215151462001c19577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001c949060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838262001ce7576040518060400160405280600581526020016466616c736560d81b81525062001d05565b604051806040016040528060048152602001637472756560e01b8152505b60405162001d14919062002341565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838162001d67576040518060400160405280600581526020016466616c736560d81b81525062001d85565b604051806040016040528060048152602001637472756560e01b8152505b60405162001c07919062002388565b62001ddb8160405160240162001dab9190620023b3565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262001ee7565b50565b60008051602062004d898339815191523b1562001ed6576040805160008051602062004d89833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001e719291602001620021a7565b60408051601f198184030181529082905262001e8d91620021da565b6000604051808303816000865af19150503d806000811462001ecc576040519150601f19603f3d011682016040523d82523d6000602084013e62001ed1565b606091505b505050505b6000805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6129c080620023c983390190565b6020808252825182820181905260009190848201906040850190845b8181101562001f595783516001600160a01b03168352928401929184019160010162001f32565b50909695505050505050565b60006020828403121562001f7857600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200202757898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620020115783516001600160e01b0319168252928b019260019290920191908b019062001fe5565b50978a0197955050509187019160010162001fa7565b50919998505050505050505050565b60005b838110156200205357818101518382015260200162002039565b50506000910152565b600081518084526200207681602086016020860162002036565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620020e357603f19888603018452620020d08583516200205c565b94509285019290850190600101620020b1565b5092979650505050505050565b6000602082840312156200210357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176200213a576200213a6200210a565b92915050565b6000602082840312156200215357600080fd5b815180151581146200216457600080fd5b9392505050565b600181811c908216806200218057607f821691505b602082108103620021a157634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090620021cc81600485016020870162002036565b919091016004019392505050565b60008251620021ee81846020870162002036565b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156200222157600080fd5b815167ffffffffffffffff808211156200223a57600080fd5b818401915084601f8301126200224f57600080fd5b815181811115620022645762002264620021f8565b604051601f8201601f19908116603f011681019083821181831017156200228f576200228f620021f8565b81604052828152876020848701011115620022a957600080fd5b620022bc83602083016020880162002036565b979650505050505050565b808201808211156200213a576200213a6200210a565b6040815260006200230860408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b6040815260006200230860408301600a8152690808080808149a59da1d60b21b602082015260400190565b6040815260006200236c60408301600a8152690808080808081319599d60b21b602082015260400190565b82810360208401526200238081856200205c565b949350505050565b6040815260006200236c60408301600a8152690808080808149a59da1d60b21b602082015260400190565b6020815260006200216460208301846200205c56fe6000600b556006600c5561010060405260506080818152906200297060a039600e906200002d9082620001aa565b50604051806040016040528060078152602001664461797061737360c81b81525060405180604001604052806005815260200164445041535360d81b81525081600090816200007d9190620001aa565b5060016200008c8282620001aa565b505050620000a9620000a3620000af60201b60201c565b620000b3565b62000276565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013057607f821691505b6020821081036200015157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001a557600081815260208120601f850160051c81016020861015620001805750805b601f850160051c820191505b81811015620001a1578281556001016200018c565b5050505b505050565b81516001600160401b03811115620001c657620001c662000105565b620001de81620001d784546200011b565b8462000157565b602080601f831160018114620002165760008415620001fd5750858301515b600019600386901b1c1916600185901b178555620001a1565b600085815260208120601f198616915b82811015620002475788860151825594840194600190910190840162000226565b5085821015620002665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6126ea80620002866000396000f3fe6080604052600436106101cc5760003560e01c80636352211e116100f7578063b88d4fde11610095578063f1b0aa1511610064578063f1b0aa1514610534578063f2fde38b14610561578063f34341c714610581578063f51f96dd1461059757600080fd5b8063b88d4fde14610496578063c87b56dd146104b6578063e985e9c5146104d6578063eac989f81461051f57600080fd5b80638da5cb5b116100d15780638da5cb5b1461043057806395d89b411461044e578063a0712d6814610463578063a22cb4651461047657600080fd5b80636352211e146103db57806370a08231146103fb578063715018a61461041b57600080fd5b80631919fed71161016f57806342842e0e1161013e57806342842e0e1461035b57806348c6195d1461037b5780634f6ccce71461039b57806355f804b3146103bb57600080fd5b80631919fed7146102db57806323b872dd146102fb5780632f745c591461031b57806331b3eb941461033b57600080fd5b8063081812fc116101ab578063081812fc1461024c578063095ea7b31461028457806318160ddd146102a657806318dbe6b0146102bb57600080fd5b80629a9b7b146101d157806301ffc9a7146101fa57806306fdde031461022a575b600080fd5b3480156101dd57600080fd5b506101e7600d5481565b6040519081526020015b60405180910390f35b34801561020657600080fd5b5061021a610215366004611cf7565b6105ad565b60405190151581526020016101f1565b34801561023657600080fd5b5061023f6105d8565b6040516101f19190611d6b565b34801561025857600080fd5b5061026c610267366004611d7e565b61066a565b6040516001600160a01b0390911681526020016101f1565b34801561029057600080fd5b506102a461029f366004611dac565b610691565b005b3480156102b257600080fd5b506008546101e7565b3480156102c757600080fd5b5061021a6102d6366004611dd8565b6107ab565b3480156102e757600080fd5b506102a46102f6366004611d7e565b610808565b34801561030757600080fd5b506102a4610316366004611df5565b610815565b34801561032757600080fd5b506101e7610336366004611dac565b610846565b34801561034757600080fd5b506102a4610356366004611dd8565b6108dc565b34801561036757600080fd5b506102a4610376366004611df5565b610958565b34801561038757600080fd5b5061021a610396366004611d7e565b610973565b3480156103a757600080fd5b506101e76103b6366004611d7e565b6109a1565b3480156103c757600080fd5b506102a46103d6366004611e36565b610a34565b3480156103e757600080fd5b5061026c6103f6366004611d7e565b610a49565b34801561040757600080fd5b506101e7610416366004611dd8565b610aa9565b34801561042757600080fd5b506102a4610b2f565b34801561043c57600080fd5b50600a546001600160a01b031661026c565b34801561045a57600080fd5b5061023f610b43565b6102a4610471366004611d7e565b610b52565b34801561048257600080fd5b506102a4610491366004611ea8565b610bfc565b3480156104a257600080fd5b506102a46104b1366004611efc565b610c0b565b3480156104c257600080fd5b5061023f6104d1366004611d7e565b610c3d565b3480156104e257600080fd5b5061021a6104f1366004611fdc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561052b57600080fd5b5061023f610e90565b34801561054057600080fd5b506101e761054f366004611d7e565b600f6020526000908152604090205481565b34801561056d57600080fd5b506102a461057c366004611dd8565b610f1e565b34801561058d57600080fd5b506101e7600c5481565b3480156105a357600080fd5b506101e7600b5481565b60006001600160e01b0319821663780e9d6360e01b14806105d257506105d282610f97565b92915050565b6060600080546105e79061200a565b80601f01602080910402602001604051908101604052809291908181526020018280546106139061200a565b80156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b5050505050905090565b600061067582610fe7565b506000908152600460205260409020546001600160a01b031690565b600061069c82610a49565b9050806001600160a01b0316836001600160a01b03160361070e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061072a575061072a81336104f1565b61079c5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610705565b6107a68383611046565b505050565b6000806107b783610aa9565b905060005b818110156107fe5760006107d08583610846565b90506107db81610973565b156107eb57506001949350505050565b50806107f68161205a565b9150506107bc565b5060009392505050565b6108106110b4565b600b55565b61081f338261110e565b61083b5760405162461bcd60e51b815260040161070590612073565b6107a683838361118d565b600061085183610aa9565b82106108b35760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610705565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6108e46110b4565b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114610931576040519150601f19603f3d011682016040523d82523d6000602084013e610936565b606091505b50509050806107a65760405163d23a9e8960e01b815260040160405180910390fd5b6107a683838360405180602001604052806000815250610c0b565b6000818152600f60205260408120546203f48061099081836120c0565b4210156107fe575060019392505050565b60006109ac60085490565b8210610a0f5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610705565b60088281548110610a2257610a226120d3565b90600052602060002001549050919050565b610a3c6110b4565b600e6107a6828483612137565b6000818152600260205260408120546001600160a01b0316806105d25760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610705565b60006001600160a01b038216610b135760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610705565b506001600160a01b031660009081526003602052604090205490565b610b376110b4565b610b4160006112fe565b565b6060600180546105e79061200a565b80600c54811115610b7657604051633a4733d960e11b815260040160405180910390fd5b813481600b54610b8691906121f7565b14610ba457604051636956f2ab60e11b815260040160405180910390fd5b60005b83811015610bf657600d8054906000610bbf8361205a565b9190505550610bd033600d54611350565b600d546000908152600f6020526040902042905580610bee8161205a565b915050610ba7565b50505050565b610c0733838361136a565b5050565b610c15338361110e565b610c315760405162461bcd60e51b815260040161070590612073565b610bf684848484611438565b6000818152600260205260409020546060906001600160a01b0316610cbc5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610705565b6000828152600f6020526040812054906203f48090610cdb82846120c0565b421015610cfe5742610ced83856120c0565b610cf7919061220e565b9050610d02565b5060005b6000610d10610e1083612237565b90506000603c610d22610e108561224b565b610d2c9190612237565b90506000610d3b603c8561224b565b9050610d45611cba565b60405180610140016040528061011481526020016125a161011491398152610d6c8461146b565b610d758461146b565b610d7e8461146b565b604051602001610d909392919061225f565b60408051601f19818403018152918152602083810192835281518083018352600d81526c1e17ba32bc3a1f1e17b9bb339f60991b81830152848301819052845193519251600094610de6949093909291016122e6565b60405160208183030381529060405290506000610e02826114fe565b9050600081604051602001610e179190612329565b60405160208183030381529060405290506000610e5c610e368e61146b565b83604051602001610e4892919061236e565b6040516020818303038152906040526114fe565b905080604051602001610e6f9190612414565b6040516020818303038152906040529b505050505050505050505050919050565b600e8054610e9d9061200a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec99061200a565b8015610f165780601f10610eeb57610100808354040283529160200191610f16565b820191906000526020600020905b815481529060010190602001808311610ef957829003601f168201915b505050505081565b610f266110b4565b6001600160a01b038116610f8b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610705565b610f94816112fe565b50565b60006001600160e01b031982166380ac58cd60e01b1480610fc857506001600160e01b03198216635b5e139f60e01b145b806105d257506301ffc9a760e01b6001600160e01b03198316146105d2565b6000818152600260205260409020546001600160a01b0316610f945760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610705565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061107b82610a49565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600a546001600160a01b03163314610b415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610705565b60008061111a83610a49565b9050806001600160a01b0316846001600160a01b0316148061116157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806111855750836001600160a01b031661117a8461066a565b6001600160a01b0316145b949350505050565b826001600160a01b03166111a082610a49565b6001600160a01b0316146111c65760405162461bcd60e51b815260040161070590612459565b6001600160a01b0382166112285760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610705565b6112358383836001611651565b826001600160a01b031661124882610a49565b6001600160a01b03161461126e5760405162461bcd60e51b815260040161070590612459565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610c07828260405180602001604052806000815250611785565b816001600160a01b0316836001600160a01b0316036113cb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610705565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61144384848461118d565b61144f848484846117b8565b610bf65760405162461bcd60e51b81526004016107059061249e565b60606000611478836118b9565b600101905060008167ffffffffffffffff81111561149857611498611ee6565b6040519080825280601f01601f1916602001820160405280156114c2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846114cc57509392505050565b6060815160000361151d57505060408051602081019091526000815290565b6000604051806060016040528060408152602001612561604091399050600060038451600261154c91906120c0565b6115569190612237565b6115619060046121f7565b67ffffffffffffffff81111561157957611579611ee6565b6040519080825280601f01601f1916602001820160405280156115a3576020820181803683370190505b509050600182016020820185865187015b8082101561160f576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f81168501518453506001830192506115b4565b505060038651066001811461162b576002811461163e57611646565b603d6001830353603d6002830353611646565b603d60018303535b509195945050505050565b60018111156116c05760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610705565b816001600160a01b03851661171c5761171781600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61173f565b836001600160a01b0316856001600160a01b03161461173f5761173f8582611991565b6001600160a01b03841661175b5761175681611a2e565b61177e565b846001600160a01b0316846001600160a01b03161461177e5761177e8482611add565b5050505050565b61178f8383611b21565b61179c60008484846117b8565b6107a65760405162461bcd60e51b81526004016107059061249e565b60006001600160a01b0384163b156118ae57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906117fc9033908990889088906004016124f0565b6020604051808303816000875af1925050508015611837575060408051601f3d908101601f191682019092526118349181019061252d565b60015b611894573d808015611865576040519150601f19603f3d011682016040523d82523d6000602084013e61186a565b606091505b50805160000361188c5760405162461bcd60e51b81526004016107059061249e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611185565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106118f85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611924576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061194257662386f26fc10000830492506010015b6305f5e100831061195a576305f5e100830492506008015b612710831061196e57612710830492506004015b60648310611980576064830492506002015b600a83106105d25760010192915050565b6000600161199e84610aa9565b6119a8919061220e565b6000838152600760205260409020549091508082146119fb576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a409060019061220e565b60008381526009602052604081205460088054939450909284908110611a6857611a686120d3565b906000526020600020015490508060088381548110611a8957611a896120d3565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611ac157611ac161254a565b6001900381819060005260206000200160009055905550505050565b6000611ae883610aa9565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611b775760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610705565b6000818152600260205260409020546001600160a01b031615611bdc5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610705565b611bea600083836001611651565b6000818152600260205260409020546001600160a01b031615611c4f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610705565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6040518060a001604052806005905b6060815260200190600190039081611cc95790505090565b6001600160e01b031981168114610f9457600080fd5b600060208284031215611d0957600080fd5b8135611d1481611ce1565b9392505050565b60005b83811015611d36578181015183820152602001611d1e565b50506000910152565b60008151808452611d57816020860160208601611d1b565b601f01601f19169290920160200192915050565b602081526000611d146020830184611d3f565b600060208284031215611d9057600080fd5b5035919050565b6001600160a01b0381168114610f9457600080fd5b60008060408385031215611dbf57600080fd5b8235611dca81611d97565b946020939093013593505050565b600060208284031215611dea57600080fd5b8135611d1481611d97565b600080600060608486031215611e0a57600080fd5b8335611e1581611d97565b92506020840135611e2581611d97565b929592945050506040919091013590565b60008060208385031215611e4957600080fd5b823567ffffffffffffffff80821115611e6157600080fd5b818501915085601f830112611e7557600080fd5b813581811115611e8457600080fd5b866020828501011115611e9657600080fd5b60209290920196919550909350505050565b60008060408385031215611ebb57600080fd5b8235611ec681611d97565b915060208301358015158114611edb57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611f1257600080fd5b8435611f1d81611d97565b93506020850135611f2d81611d97565b925060408501359150606085013567ffffffffffffffff80821115611f5157600080fd5b818701915087601f830112611f6557600080fd5b813581811115611f7757611f77611ee6565b604051601f8201601f19908116603f01168101908382118183101715611f9f57611f9f611ee6565b816040528281528a6020848701011115611fb857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611fef57600080fd5b8235611ffa81611d97565b91506020830135611edb81611d97565b600181811c9082168061201e57607f821691505b60208210810361203e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161206c5761206c612044565b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b808201808211156105d2576105d2612044565b634e487b7160e01b600052603260045260246000fd5b601f8211156107a657600081815260208120601f850160051c810160208610156121105750805b601f850160051c820191505b8181101561212f5782815560010161211c565b505050505050565b67ffffffffffffffff83111561214f5761214f611ee6565b6121638361215d835461200a565b836120e9565b6000601f841160018114612197576000851561217f5750838201355b600019600387901b1c1916600186901b17835561177e565b600083815260209020601f19861690835b828110156121c857868501358255602094850194600190920191016121a8565b50868210156121e55760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b80820281158282048414176105d2576105d2612044565b818103818111156105d2576105d2612044565b634e487b7160e01b600052601260045260246000fd5b60008261224657612246612221565b500490565b60008261225a5761225a612221565b500690565b6a02a34b6b2902632b33a1d160ad1b81526000845161228581600b850160208901611d1b565b61034160f51b600b9184019182015284516122a781600d840160208901611d1b565b61036960f51b600d929091019182015283516122ca81600f840160208801611d1b565b61039960f51b600f929091019182015260110195945050505050565b600084516122f8818460208901611d1b565b84519083019061230c818360208901611d1b565b845191019061231f818360208801611d1b565b0195945050505050565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c00000000000081526000825161236181601a850160208701611d1b565b91909101601a0192915050565b727b226e616d65223a202244617970617373202360681b8152825160009061239d816013850160208801611d1b565b7f222c20226465736372697074696f6e223a202241204461797061737320666f7260139184019182015275103cb7bab91033b0b99116101134b6b0b3b2911d101160511b603382015283516123f9816049840160208801611d1b565b61227d60f01b60499290910191820152604b01949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161244c81601d850160208701611d1b565b91909101601d0192915050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061252390830184611d3f565b9695505050505050565b60006020828403121561253f57600080fd5b8151611d1481611ce1565b634e487b7160e01b600052603160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722207072657365727665417370656374526174696f3d22784d696e594d696e206d656574222076696577426f783d223020302033353020333530223e3c7374796c653e2e62617365207b2066696c6c3a20626c61636b3b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20323470783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22776869746522202f3e3c7465787420783d223530252220793d223530252220636c6173733d22626173652220746578742d616e63686f723d226d6964646c65223ea2646970667358221220184d33fa63114cb078ba4f5554a6f9c936bcef3d8e3e201970349ae5e612cc6664736f6c6343000813003368747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d50757835516779504866786a7543426631474c36626e6259526f44647a7768395547646e7a325558783538440000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220f9bf0d5bd9e6186b765743e0815878ebc2265bfe592bc9e1db0843ec8bd10b2164736f6c63430008130033",
    "sourceMap": "140:3014:71:-:0;;;1572:26:20;;;1594:4;-1:-1:-1;;1572:26:20;;;;;;;;3288:44:24;;;;;;;;;;;140:3014:71;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "140:3014:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3018:134;;;:::i;:::-;;358:303;;;:::i;2161:134:27:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1281:355:71;;;;;;:::i;:::-;;:::i;2930:133:27:-;;;:::i;2631:141::-;;;:::i;953:322:71:-;;;;;;:::i;:::-;;:::i;1939:644::-;;;;;;:::i;:::-;;:::i;2447:178:27:-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:20:-;;;:::i;:::-;;;3940:14:74;;3933:22;3915:41;;3903:2;3888:18;1819:584:20;3775:187:74;1642:291:71;;;:::i;667:280::-;;;;;;:::i;:::-;;:::i;2013:142:27:-;;;:::i;2589:423:71:-;;;:::i;1572:26:20:-;;;;;;;;;3018:134:71;3080:13;;3071:23;;-1:-1:-1;;;3071:23:71;;-1:-1:-1;;;;;3080:13:71;;;3071:23;;;4113:51:74;-1:-1:-1;;;;;;;;;;;3071:8:71;;;4086:18:74;;3071:23:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3104:3:71;;:41;;-1:-1:-1;;;3104:41:71;;:3;:41;;;4113:51:74;-1:-1:-1;;;;;3104:3:71;;;;-1:-1:-1;3104:20:71;;-1:-1:-1;4086:18:74;;3104:41:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3018:134::o;358:303::-;392:15;:28;;-1:-1:-1;;;;;;392:28:71;418:1;392:28;;;;;;430:25;;-1:-1:-1;;;430:25:71;;;;;4113:51:74;;;;-1:-1:-1;;;;;;;;;;;430:8:71;;;4086:18:74;;430:25:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;471:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:3:71;:24;;-1:-1:-1;;;;;465:24:71;;;;-1:-1:-1;;;;;;465:24:71;;;;;;;;499:15;:30;;;;;;;;539:13;:26;;;;;563:1;539:26;;;;576:35;;-1:-1:-1;;;576:35:71;;;;;4601:51:74;;;;601:9:71;4668:18:74;;;4661:34;-1:-1:-1;;;;;;;;;;;576:7:71;;;4574:18:74;;576:35:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;629:13:71;;621:33;;-1:-1:-1;;;621:33:71;;-1:-1:-1;;;;;629:13:71;;;621:33;;;4601:51:74;644:9:71;4668:18:74;;;4661:34;-1:-1:-1;;;;;;;;;;;621:7:71;-1:-1:-1;621:7:71;;-1:-1:-1;4574:18:74;;621:33:71;4399:302:74;2161:134:27;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:27;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1281:355:71:-;1348:13;;1334:28;;-1:-1:-1;;;1334:28:71;;-1:-1:-1;;;;;1348:13:71;;;1334:28;;;4113:51:74;-1:-1:-1;;;;;;;;;;;1334:13:71;;;4086:18:74;;1334:28:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1381:3:71;;1395:13;;1381:28;;-1:-1:-1;;;1381:28:71;;-1:-1:-1;;;;;1395:13:71;;;1381:28;;;4113:51:74;1372:41:71;;-1:-1:-1;1381:3:71;;;-1:-1:-1;1381:13:71;;4086:18:74;;1381:28:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1411:1;1372:8;:41::i;:::-;1445:3;;:21;;;-1:-1:-1;;;1445:21:71;;;;-1:-1:-1;;;;;;;;;;;1424:9:71;;;-1:-1:-1;;;;;1445:3:71;;;;:19;;:21;;;;;;;;;;;;;;;:3;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1434:8;:32;:48;;;;;1481:1;1470:8;:12;1434:48;1424:59;;;;;;;;;;;;;3940:14:74;3933:22;3915:41;;3903:2;3888:18;;3775:187;1424:59:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1493:3:71;;1509:15;;;-1:-1:-1;;;1509:15:71;;;;-1:-1:-1;;;;;1493:3:71;;;;-1:-1:-1;1493:8:71;;-1:-1:-1;1527:8:71;;1493:3;;1509:13;;:15;;;;;;;;;;;;;;1493:3;1509:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;:::i;:::-;1537:8;1493:53;;;;;;;;;;;;;5346:25:74;;5334:2;5319:18;;5200:177;1493:53:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1566:3:71;;1580:13;;1566:28;;-1:-1:-1;;;1566:28:71;;-1:-1:-1;;;;;1580:13:71;;;1566:28;;;4113:51:74;1557:48:71;;-1:-1:-1;1566:3:71;;;-1:-1:-1;1566:13:71;;-1:-1:-1;4086:18:74;;1566:28:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1596:8;1557;:48::i;:::-;317:28:21;309:37;;-1:-1:-1;;;;;1615:12:71;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1281:355;:::o;2930:133:27:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:27;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:27;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;953:322:71:-;1040:3;;:21;;;-1:-1:-1;;;1040:21:71;;;;-1:-1:-1;;;;;;;;;;;1019:9:71;;;-1:-1:-1;;;;;1040:3:71;;;;:19;;:21;;;;;;;;;;;;;;;:3;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1029:8;:32;:50;;;;;1076:3;1065:8;:14;1029:50;1019:61;;;;;;;;;;;;;3940:14:74;3933:22;3915:41;;3903:2;3888:18;;3775:187;1019:61:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1090:17;1110:3;;;;;;;;;-1:-1:-1;;;;;1110:3:71;-1:-1:-1;;;;;1110:13:71;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1145:13;;1136:23;;-1:-1:-1;;;1136:23:71;;-1:-1:-1;;;;;1145:13:71;;;1136:23;;;4113:51:74;1090:35:71;;-1:-1:-1;;;;;;;;;;;;1136:8:71;;;4086:18:74;;1136:23:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1221:3:71;;-1:-1:-1;;;;;1221:3:71;;-1:-1:-1;1221:8:71;;-1:-1:-1;1237:20:71;1249:8;1237:9;:20;:::i;:::-;1259:8;1221:47;;;;;;;;;;;;;5346:25:74;;5334:2;5319:18;;5200:177;1221:47:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:266;953:322;:::o;1939:644::-;2010:13;;1996:28;;-1:-1:-1;;;1996:28:71;;-1:-1:-1;;;;;2010:13:71;;;1996:28;;;4113:51:74;-1:-1:-1;;;;;;;;;;;1996:13:71;;;4086:18:74;;1996:28:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2043:3:71;;2057:13;;2043:28;;-1:-1:-1;;;2043:28:71;;-1:-1:-1;;;;;2057:13:71;;;2043:28;;;4113:51:74;2034:41:71;;-1:-1:-1;2043:3:71;;;-1:-1:-1;2043:13:71;;4086:18:74;;2043:28:71;3967:203:74;2034:41:71;2094:3;;2111:13;;2094:31;;-1:-1:-1;;;2094:31:71;;-1:-1:-1;;;;;2111:13:71;;;2094:31;;;4113:51:74;2085:48:71;;2094:3;;;;;:16;;4086:18:74;;2094:31:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2127:5;2085:8;:48::i;:::-;2165:3;;:21;;;-1:-1:-1;;;2165:21:71;;;;-1:-1:-1;;;;;;;;;;;2144:9:71;;;-1:-1:-1;;;;;2165:3:71;;;;:19;;:21;;;;;;;;;;;;;;;:3;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2154:8;:32;:48;;;;;2201:1;2190:8;:12;2154:48;2144:59;;;;;;;;;;;;;3940:14:74;3933:22;3915:41;;3903:2;3888:18;;3775:187;2144:59:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2213:3:71;;2229:15;;;-1:-1:-1;;;2229:15:71;;;;-1:-1:-1;;;;;2213:3:71;;;;-1:-1:-1;2213:8:71;;-1:-1:-1;2247:8:71;;2213:3;;2229:13;;:15;;;;;;;;;;;;;;2213:3;2229:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;:::i;:::-;2257:8;2213:53;;;;;;;;;;;;;5346:25:74;;5334:2;5319:18;;5200:177;2213:53:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2286:3:71;;2300:13;;2286:28;;-1:-1:-1;;;2286:28:71;;-1:-1:-1;;;;;2300:13:71;;;2286:28;;;4113:51:74;2277:48:71;;-1:-1:-1;2286:3:71;;;-1:-1:-1;2286:13:71;;-1:-1:-1;4086:18:74;;2286:28:71;3967:203:74;2277:48:71;2344:3;;2361:13;;2344:31;;-1:-1:-1;;;2344:31:71;;-1:-1:-1;;;;;2361:13:71;;;2344:31;;;4113:51:74;2335:47:71;;2344:3;;;;;:16;;4086:18:74;;2344:31:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2377:4;2335:8;:47::i;:::-;2468:25;;-1:-1:-1;;;2468:25:71;;2476:16;2468:25;;;5346::74;-1:-1:-1;;;;;;;;;;;2468:7:71;;;5319:18:74;;2468:25:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2512:3:71;;2529:13;;2512:31;;-1:-1:-1;;;2512:31:71;;-1:-1:-1;;;;;2529:13:71;;;2512:31;;;4113:51:74;2503:48:71;;-1:-1:-1;2512:3:71;;;-1:-1:-1;2512:16:71;;4086:18:74;;2512:31:71;3967:203:74;2447:178:27;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:20;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:20;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:20;3066:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:20;;;4601:51:74;;;-1:-1:-1;;;4668:18:74;;;4661:34;2196:43:20;;;;;;;;;4574:18:74;;;2196:43:20;;;-1:-1:-1;;1671:64:20;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:20;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:20:o;1642:291:71:-;1697:13;;1683:28;;-1:-1:-1;;;1683:28:71;;-1:-1:-1;;;;;1697:13:71;;;1683:28;;;4113:51:74;-1:-1:-1;;;;;;;;;;;1683:13:71;;;4086:18:74;;1683:28:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1730:3:71;;1744:13;;1730:28;;-1:-1:-1;;;1730:28:71;;-1:-1:-1;;;;;1744:13:71;;;1730:28;;;4113:51:74;1721:41:71;;-1:-1:-1;1730:3:71;;;-1:-1:-1;1730:13:71;;4086:18:74;;1730:28:71;3967:203:74;1721:41:71;1773:3;;1789:15;;;-1:-1:-1;;;1789:15:71;;;;-1:-1:-1;;;;;1773:3:71;;;;:8;;:3;;1789:13;;:15;;;;;;;;;;;;;;;1773:3;1789:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:19;;1807:1;1789:19;:::i;:::-;1773:39;;-1:-1:-1;;;;;;1773:39:71;;;;;;;1810:1;1773:39;;;5346:25:74;5319:18;;1773:39:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1834:3:71;;:15;;-1:-1:-1;;;1834:15:71;;:3;:15;;;5346:25:74;1822:28:71;;-1:-1:-1;;;;;;1834:3:71;;;;-1:-1:-1;1834:12:71;;-1:-1:-1;5319:18:74;;1834:15:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1834:15:71;;;;;;;;;;;;:::i;:::-;1822:11;:28::i;:::-;1870:3;;1884:13;;1870:28;;-1:-1:-1;;;1870:28:71;;-1:-1:-1;;;;;1884:13:71;;;1870:28;;;4113:51:74;1861:41:71;;1870:3;;;;;:13;;4086:18:74;;1870:28:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1900:1;1861:8;:41::i;:::-;317:28:21;309:37;;-1:-1:-1;;;;;1912:12:71;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;667:280;755:3;;:21;;;-1:-1:-1;;;755:21:71;;;;-1:-1:-1;;;;;;;;;;;734:9:71;;;-1:-1:-1;;;;;755:3:71;;;;:19;;:21;;;;;;;;;;;;;;;:3;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;744:8;:32;:48;;;;;791:1;780:8;:12;744:48;734:59;;;;;;;;;;;;;3940:14:74;3933:22;3915:41;;3903:2;3888:18;;3775:187;734:59:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;812:13:71;;803:23;;-1:-1:-1;;;803:23:71;;-1:-1:-1;;;;;812:13:71;;;803:23;;;4113:51:74;-1:-1:-1;;;;;;;;;;;803:8:71;-1:-1:-1;803:8:71;;-1:-1:-1;4086:18:74;;803:23:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;889:3:71;;-1:-1:-1;;;;;889:3:71;;-1:-1:-1;889:8:71;;-1:-1:-1;905:24:71;921:8;905:13;:24;:::i;:::-;931:8;889:51;;;;;;;;;;;;;5346:25:74;;5334:2;5319:18;;5200:177;889:51:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;667:280;:::o;2013:142:27:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:27;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;2589:423:71:-;2728:13;;2834:15;;2877;;2868:25;;-1:-1:-1;;;2868:25:71;;-1:-1:-1;;;;;2877:15:71;;;2868:25;;;4113:51:74;2728:13:71;;;;2780;;;2834:15;;;;:23;;-1:-1:-1;;;;;;;;;;;2868:8:71;;;4086:18:74;;2868:25:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2903:3:71;;:27;;-1:-1:-1;;;2903:27:71;;-1:-1:-1;;;;;4131:32:74;;;2903:27:71;;;4113:51:74;2903:3:71;;;;-1:-1:-1;2903:20:71;;-1:-1:-1;4086:18:74;;2903:27:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2940:65:71;;-1:-1:-1;;;;;;;;2949:13:71;;;2964:40;2984:20;2964:17;:40;:::i;:::-;2940:8;:65::i;:::-;2634:378;;;2589:423::o;5209:262:20:-;5271:1;5266;:6;5262:203;;5293:41;;;;;8770:2:74;8752:21;;;8809:2;8789:18;;;8782:30;8848:34;8843:2;8828:18;;8821:62;-1:-1:-1;;;8914:2:74;8899:18;;8892:32;8956:3;8941:19;;8568:398;5293:41:20;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;789:312:23:-;859:1;854:6;;:1;:6;;;850:245;;881:41;;;;;10207:2:74;10189:21;;;10246:2;10226:18;;;10219:30;10285:34;10280:2;10265:18;;10258:62;-1:-1:-1;;;10351:2:74;10336:18;;10329:32;10393:3;10378:19;;10005:398;881:41:23;;;;;;;;941:52;972:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:23;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:23;;;;941:52;;;;;;:::i;:::-;;;;;;;;1012;1043:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:23;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:23;;;;1012:52;;;;;;:::i;5630:121:35:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:35;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:35;-1:-1:-1;;;5701:42:35;;;5685:15;:59::i;:::-;5630:121;:::o;2409:432:20:-;-1:-1:-1;;;;;;;;;;;2985:55:20;3066:16;2452:359;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:20;;;11725:51:74;;;-1:-1:-1;;;11792:18:74;;;11785:34;;;;2712:4:20;11835:18:74;;;11828:34;2489:11:20;;1671:64;2586:43;;11698:18:74;;2652:67:20;;;-1:-1:-1;;2652:67:20;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:20;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:20;2820:7;:14;;-1:-1:-1;;2820:14:20;;;;;2409:432::o;181:376:35:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;-1:-1:-1:-;;;;;;;;:::o;14:658:74:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:74;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:74;;14:658;-1:-1:-1;;;;;;14:658:74:o;677:180::-;736:6;789:2;777:9;768:7;764:23;760:32;757:52;;;805:1;802;795:12;757:52;-1:-1:-1;828:23:74;;677:180;-1:-1:-1;677:180:74:o;862:1569::-;1066:4;1095:2;1135;1124:9;1120:18;1165:2;1154:9;1147:21;1188:6;1223;1217:13;1254:6;1246;1239:22;1280:2;1270:12;;1313:2;1302:9;1298:18;1291:25;;1375:2;1365:6;1362:1;1358:14;1347:9;1343:30;1339:39;1413:2;1405:6;1401:15;1434:1;1455;1465:937;1481:6;1476:3;1473:15;1465:937;;;1550:22;;;-1:-1:-1;;1546:36:74;1534:49;;1606:13;;1693:9;;-1:-1:-1;;;;;1689:35:74;1674:51;;1764:11;;1758:18;1796:15;;;1789:27;;;1877:19;;1646:15;;;1909:24;;;1999:21;;;;2044:1;;1967:2;1955:15;;;2058:236;2074:8;2069:3;2066:17;2058:236;;;2155:15;;-1:-1:-1;;;;;;2151:42:74;2137:57;;2263:17;;;;2102:1;2093:11;;;;;2220:14;;;;2058:236;;;-1:-1:-1;2380:12:74;;;;2317:5;-1:-1:-1;;;2345:15:74;;;;1507:1;1498:11;1465:937;;;-1:-1:-1;2419:6:74;;862:1569;-1:-1:-1;;;;;;;;;862:1569:74:o;2436:250::-;2521:1;2531:113;2545:6;2542:1;2539:13;2531:113;;;2621:11;;;2615:18;2602:11;;;2595:39;2567:2;2560:10;2531:113;;;-1:-1:-1;;2678:1:74;2660:16;;2653:27;2436:250::o;2691:271::-;2733:3;2771:5;2765:12;2798:6;2793:3;2786:19;2814:76;2883:6;2876:4;2871:3;2867:14;2860:4;2853:5;2849:16;2814:76;:::i;:::-;2944:2;2923:15;-1:-1:-1;;2919:29:74;2910:39;;;;2951:4;2906:50;;2691:271;-1:-1:-1;;2691:271:74:o;2967:803::-;3129:4;3158:2;3198;3187:9;3183:18;3228:2;3217:9;3210:21;3251:6;3286;3280:13;3317:6;3309;3302:22;3355:2;3344:9;3340:18;3333:25;;3417:2;3407:6;3404:1;3400:14;3389:9;3385:30;3381:39;3367:53;;3455:2;3447:6;3443:15;3476:1;3486:255;3500:6;3497:1;3494:13;3486:255;;;3593:2;3589:7;3577:9;3569:6;3565:22;3561:36;3556:3;3549:49;3621:40;3654:6;3645;3639:13;3621:40;:::i;:::-;3611:50;-1:-1:-1;3719:12:74;;;;3684:15;;;;3522:1;3515:9;3486:255;;;-1:-1:-1;3758:6:74;;2967:803;-1:-1:-1;;;;;;;2967:803:74:o;4706:184::-;4776:6;4829:2;4817:9;4808:7;4804:23;4800:32;4797:52;;;4845:1;4842;4835:12;4797:52;-1:-1:-1;4868:16:74;;4706:184;-1:-1:-1;4706:184:74:o;4895:127::-;4956:10;4951:3;4947:20;4944:1;4937:31;4987:4;4984:1;4977:15;5011:4;5008:1;5001:15;5027:168;5100:9;;;5131;;5148:15;;;5142:22;;5128:37;5118:71;;5169:18;;:::i;:::-;5027:168;;;;:::o;5382:277::-;5449:6;5502:2;5490:9;5481:7;5477:23;5473:32;5470:52;;;5518:1;5515;5508:12;5470:52;5550:9;5544:16;5603:5;5596:13;5589:21;5582:5;5579:32;5569:60;;5625:1;5622;5615:12;5569:60;5648:5;5382:277;-1:-1:-1;;;5382:277:74:o;5869:380::-;5948:1;5944:12;;;;5991;;;6012:61;;6066:4;6058:6;6054:17;6044:27;;6012:61;6119:2;6111:6;6108:14;6088:18;6085:38;6082:161;;6165:10;6160:3;6156:20;6153:1;6146:31;6200:4;6197:1;6190:15;6228:4;6225:1;6218:15;6082:161;;5869:380;;;:::o;6533:384::-;-1:-1:-1;;;;;;6718:33:74;;6706:46;;6775:13;;6688:3;;6797:74;6775:13;6860:1;6851:11;;6844:4;6832:17;;6797:74;:::i;:::-;6891:16;;;;6909:1;6887:24;;6533:384;-1:-1:-1;;;6533:384:74:o;6922:287::-;7051:3;7089:6;7083:13;7105:66;7164:6;7159:3;7152:4;7144:6;7140:17;7105:66;:::i;:::-;7187:16;;;;;6922:287;-1:-1:-1;;6922:287:74:o;7404:127::-;7465:10;7460:3;7456:20;7453:1;7446:31;7496:4;7493:1;7486:15;7520:4;7517:1;7510:15;7536:897;7616:6;7669:2;7657:9;7648:7;7644:23;7640:32;7637:52;;;7685:1;7682;7675:12;7637:52;7718:9;7712:16;7747:18;7788:2;7780:6;7777:14;7774:34;;;7804:1;7801;7794:12;7774:34;7842:6;7831:9;7827:22;7817:32;;7887:7;7880:4;7876:2;7872:13;7868:27;7858:55;;7909:1;7906;7899:12;7858:55;7938:2;7932:9;7960:2;7956;7953:10;7950:36;;;7966:18;;:::i;:::-;8041:2;8035:9;8009:2;8095:13;;-1:-1:-1;;8091:22:74;;;8115:2;8087:31;8083:40;8071:53;;;8139:18;;;8159:22;;;8136:46;8133:72;;;8185:18;;:::i;:::-;8225:10;8221:2;8214:22;8260:2;8252:6;8245:18;8300:7;8295:2;8290;8286;8282:11;8278:20;8275:33;8272:53;;;8321:1;8318;8311:12;8272:53;8334:68;8399:2;8394;8386:6;8382:15;8377:2;8373;8369:11;8334:68;:::i;:::-;8421:6;7536:897;-1:-1:-1;;;;;;;7536:897:74:o;8438:125::-;8503:9;;;8524:10;;;8521:36;;;8537:18;;:::i;9135:348::-;9365:2;9354:9;9347:21;9328:4;9385:49;9430:2;9419:9;9415:18;9048:2;9036:15;;-1:-1:-1;;;9076:4:74;9067:14;;9060:36;9121:2;9112:12;;8971:159;9385:49;9377:57;;9470:6;9465:2;9454:9;9450:18;9443:34;9135:348;;;;:::o;9652:::-;9882:2;9871:9;9864:21;9845:4;9902:49;9947:2;9936:9;9932:18;9565:2;9553:15;;-1:-1:-1;;;9593:4:74;9584:14;;9577:36;9638:2;9629:12;;9488:159;10408:440;10658:2;10647:9;10640:21;10621:4;10684:49;10729:2;10718:9;10714:18;9048:2;9036:15;;-1:-1:-1;;;9076:4:74;9067:14;;9060:36;9121:2;9112:12;;8971:159;10684:49;10781:9;10773:6;10769:22;10764:2;10753:9;10749:18;10742:50;10809:33;10835:6;10827;10809:33;:::i;:::-;10801:41;10408:440;-1:-1:-1;;;;10408:440:74:o;10853:::-;11103:2;11092:9;11085:21;11066:4;11129:49;11174:2;11163:9;11159:18;9565:2;9553:15;;-1:-1:-1;;;9593:4:74;9584:14;;9577:36;9638:2;9629:12;;9488:159;11298:220;11447:2;11436:9;11429:21;11410:4;11467:45;11508:2;11497:9;11493:18;11485:6;11467:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFailIncorrectValue(uint256)": "df64143c",
    "testFailTooManyTokens(uint256)": "45a8f0e8",
    "testFailWithdrawNotOwner()": "0449cdc1",
    "testMint(uint256)": "2f3f94ae",
    "testTokenUri()": "ba85d69b",
    "testValidity(uint256)": "65cff61a",
    "testWithdrawalWorksAsOwner()": "f053b645"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"testFailIncorrectValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"testFailTooManyTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFailWithdrawNotOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"testValidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testWithdrawalWorksAsOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Hackathon721.t.sol\":\"Hackathon721Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/Hackathon721.sol\":{\"keccak256\":\"0x86502e6f88fb6c6075f1bdffef54eb1b32491ece0a6cb63ab189db6f4aac9c3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8941d50a44bca60f2af48e6381b393bef0551da67d9b069cdaa9d9c265aa2d68\",\"dweb:/ipfs/QmPp9eU4rurJRASSnox7v3BMYbwXMBPi2K23gcZ1yjXeq3\"]},\"test/Hackathon721.t.sol\":{\"keccak256\":\"0xeeb4ea04eab04b130f658f1d476531dbcdf6f9d91eb8efcab953ae3c3231d6bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://beac350d047836ae4f79958e360fd6e08502b3173f5b67f54ec696dc16c43e85\",\"dweb:/ipfs/QmWEyQWpUQ9DVHyFbioYRQxLA9R2MBnE5GfiAGMZJuYaji\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailIncorrectValue"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailTooManyTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailWithdrawNotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenUri"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testValidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdrawalWorksAsOwner"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Hackathon721.t.sol": "Hackathon721Test"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/Hackathon721.sol": {
        "keccak256": "0x86502e6f88fb6c6075f1bdffef54eb1b32491ece0a6cb63ab189db6f4aac9c3f",
        "urls": [
          "bzz-raw://8941d50a44bca60f2af48e6381b393bef0551da67d9b069cdaa9d9c265aa2d68",
          "dweb:/ipfs/QmPp9eU4rurJRASSnox7v3BMYbwXMBPi2K23gcZ1yjXeq3"
        ],
        "license": "MIT"
      },
      "test/Hackathon721.t.sol": {
        "keccak256": "0xeeb4ea04eab04b130f658f1d476531dbcdf6f9d91eb8efcab953ae3c3231d6bc",
        "urls": [
          "bzz-raw://beac350d047836ae4f79958e360fd6e08502b3173f5b67f54ec696dc16c43e85",
          "dweb:/ipfs/QmWEyQWpUQ9DVHyFbioYRQxLA9R2MBnE5GfiAGMZJuYaji"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Hackathon721.t.sol",
    "id": 42408,
    "exportedSymbols": {
      "Address": [
        37434
      ],
      "Base64": [
        37481
      ],
      "Context": [
        37503
      ],
      "DSTest": [
        8256
      ],
      "ERC165": [
        38123
      ],
      "ERC721": [
        36558
      ],
      "ERC721Enumerable": [
        37046
      ],
      "Hackathon721": [
        41534
      ],
      "Hackathon721Test": [
        42407
      ],
      "IERC165": [
        38135
      ],
      "IERC721": [
        36674
      ],
      "IERC721Enumerable": [
        37077
      ],
      "IERC721Metadata": [
        37104
      ],
      "IERC721Receiver": [
        36692
      ],
      "Math": [
        39000
      ],
      "Ownable": [
        35008
      ],
      "StdAssertions": [
        9767
      ],
      "StdChains": [
        10461
      ],
      "StdCheats": [
        12712
      ],
      "StdInvariant": [
        13002
      ],
      "StdStorage": [
        13752
      ],
      "StdStyle": [
        16396
      ],
      "StdUtils": [
        17203
      ],
      "Strings": [
        37738
      ],
      "Test": [
        17252
      ],
      "TestBase": [
        8316
      ],
      "Vm": [
        18572
      ],
      "console": [
        26636
      ],
      "console2": [
        34732
      ],
      "stdError": [
        12778
      ],
      "stdJson": [
        13578
      ],
      "stdMath": [
        13720
      ],
      "stdStorage": [
        15185
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3116:71",
    "nodes": [
      {
        "id": 41996,
        "nodeType": "PragmaDirective",
        "src": "39:24:71",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 41997,
        "nodeType": "ImportDirective",
        "src": "65:39:71",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "../lib/forge-std/src/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42408,
        "sourceUnit": 17253,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41998,
        "nodeType": "ImportDirective",
        "src": "105:33:71",
        "nodes": [],
        "absolutePath": "src/Hackathon721.sol",
        "file": "../src/Hackathon721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42408,
        "sourceUnit": 41535,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42407,
        "nodeType": "ContractDefinition",
        "src": "140:3014:71",
        "nodes": [
          {
            "id": 42004,
            "nodeType": "UsingForDirective",
            "src": "180:32:71",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 42001,
              "name": "stdStorage",
              "nameLocations": [
                "186:10:71"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15185,
              "src": "186:10:71"
            },
            "typeName": {
              "id": 42003,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42002,
                "name": "StdStorage",
                "nameLocations": [
                  "201:10:71"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13752,
                "src": "201:10:71"
              },
              "referencedDeclaration": 13752,
              "src": "201:10:71",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$13752_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 42007,
            "nodeType": "VariableDeclaration",
            "src": "218:24:71",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "239:3:71",
            "scope": 42407,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Hackathon721_$41534",
              "typeString": "contract Hackathon721"
            },
            "typeName": {
              "id": 42006,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42005,
                "name": "Hackathon721",
                "nameLocations": [
                  "218:12:71"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41534,
                "src": "218:12:71"
              },
              "referencedDeclaration": 41534,
              "src": "218:12:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hackathon721_$41534",
                "typeString": "contract Hackathon721"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42009,
            "nodeType": "VariableDeclaration",
            "src": "248:29:71",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "normalAddress",
            "nameLocation": "264:13:71",
            "scope": 42407,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42008,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "248:7:71",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42011,
            "nodeType": "VariableDeclaration",
            "src": "283:31:71",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "contractAddress",
            "nameLocation": "299:15:71",
            "scope": 42407,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42010,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "283:7:71",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42013,
            "nodeType": "VariableDeclaration",
            "src": "320:31:71",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deployerAddress",
            "nameLocation": "336:15:71",
            "scope": 42407,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42012,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "320:7:71",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42065,
            "nodeType": "FunctionDefinition",
            "src": "358:303:71",
            "nodes": [],
            "body": {
              "id": 42064,
              "nodeType": "Block",
              "src": "382:279:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42016,
                      "name": "deployerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42013,
                      "src": "392:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 42019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "418:1:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 42018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "410:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42017,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "410:7:71",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "410:10:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "392:28:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42022,
                  "nodeType": "ExpressionStatement",
                  "src": "392:28:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42026,
                        "name": "deployerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42013,
                        "src": "439:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42023,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "430:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "433:5:71",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18265,
                      "src": "430:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:25:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42028,
                  "nodeType": "ExpressionStatement",
                  "src": "430:25:71"
                },
                {
                  "expression": {
                    "id": 42034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42029,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42007,
                      "src": "465:3:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hackathon721_$41534",
                        "typeString": "contract Hackathon721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 42032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "471:16:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$__$returns$_t_contract$_Hackathon721_$41534_$",
                          "typeString": "function () payable returns (contract Hackathon721)"
                        },
                        "typeName": {
                          "id": 42031,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42030,
                            "name": "Hackathon721",
                            "nameLocations": [
                              "475:12:71"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41534,
                            "src": "475:12:71"
                          },
                          "referencedDeclaration": 41534,
                          "src": "475:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon721_$41534",
                            "typeString": "contract Hackathon721"
                          }
                        }
                      },
                      "id": 42033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "471:18:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hackathon721_$41534",
                        "typeString": "contract Hackathon721"
                      }
                    },
                    "src": "465:24:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hackathon721_$41534",
                      "typeString": "contract Hackathon721"
                    }
                  },
                  "id": 42035,
                  "nodeType": "ExpressionStatement",
                  "src": "465:24:71"
                },
                {
                  "expression": {
                    "id": 42041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42036,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42011,
                      "src": "499:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42039,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42007,
                          "src": "525:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon721_$41534",
                            "typeString": "contract Hackathon721"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Hackathon721_$41534",
                            "typeString": "contract Hackathon721"
                          }
                        ],
                        "id": 42038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "517:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "517:7:71",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "517:12:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "499:30:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42042,
                  "nodeType": "ExpressionStatement",
                  "src": "499:30:71"
                },
                {
                  "expression": {
                    "id": 42048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42043,
                      "name": "normalAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42009,
                      "src": "539:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 42046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "563:1:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 42045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "555:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42044,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "555:7:71",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "555:10:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "539:26:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42049,
                  "nodeType": "ExpressionStatement",
                  "src": "539:26:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42053,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42011,
                        "src": "584:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 42054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "601:9:71",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42050,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "576:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "579:4:71",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18294,
                      "src": "576:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 42055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "576:35:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42056,
                  "nodeType": "ExpressionStatement",
                  "src": "576:35:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42060,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42009,
                        "src": "629:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 42061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "644:9:71",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42057,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "621:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "624:4:71",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18294,
                      "src": "621:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 42062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "621:33:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42063,
                  "nodeType": "ExpressionStatement",
                  "src": "621:33:71"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "367:5:71",
            "parameters": {
              "id": 42014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:2:71"
            },
            "returnParameters": {
              "id": 42015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:71"
            },
            "scope": 42407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42101,
            "nodeType": "FunctionDefinition",
            "src": "667:280:71",
            "nodes": [],
            "body": {
              "id": 42100,
              "nodeType": "Block",
              "src": "724:223:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 42081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42073,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42067,
                            "src": "744:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 42074,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42007,
                                "src": "755:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon721_$41534",
                                  "typeString": "contract Hackathon721"
                                }
                              },
                              "id": 42075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "759:15:71",
                              "memberName": "maxTokensPerTxn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41109,
                              "src": "755:19:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 42076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "755:21:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "744:32:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42078,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42067,
                            "src": "780:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 42079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "791:1:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "780:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "744:48:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42070,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "734:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "737:6:71",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18210,
                      "src": "734:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 42082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "734:59:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42083,
                  "nodeType": "ExpressionStatement",
                  "src": "734:59:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42087,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42009,
                        "src": "812:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42084,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "803:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "806:5:71",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18265,
                      "src": "803:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "803:23:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42089,
                  "nodeType": "ExpressionStatement",
                  "src": "803:23:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42097,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42067,
                        "src": "931:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 42090,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42007,
                          "src": "889:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon721_$41534",
                            "typeString": "contract Hackathon721"
                          }
                        },
                        "id": 42092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "893:4:71",
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41203,
                        "src": "889:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 42096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "302e3030303032",
                            "id": 42093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "905:13:71",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20000000000000_by_1",
                              "typeString": "int_const 20000000000000"
                            },
                            "value": "0.00002"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 42094,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42067,
                            "src": "921:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "905:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "889:41:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 42098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:51:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42099,
                  "nodeType": "ExpressionStatement",
                  "src": "889:51:71"
                }
              ]
            },
            "functionSelector": "df64143c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailIncorrectValue",
            "nameLocation": "676:22:71",
            "parameters": {
              "id": 42068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42067,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "707:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 42101,
                  "src": "699:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "698:18:71"
            },
            "returnParameters": {
              "id": 42069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "724:0:71"
            },
            "scope": 42407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42143,
            "nodeType": "FunctionDefinition",
            "src": "953:322:71",
            "nodes": [],
            "body": {
              "id": 42142,
              "nodeType": "Block",
              "src": "1009:266:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 42117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42109,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42103,
                            "src": "1029:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 42110,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42007,
                                "src": "1040:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon721_$41534",
                                  "typeString": "contract Hackathon721"
                                }
                              },
                              "id": 42111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1044:15:71",
                              "memberName": "maxTokensPerTxn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41109,
                              "src": "1040:19:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 42112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1040:21:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1029:32:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42114,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42103,
                            "src": "1065:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 42115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1076:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1065:14:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1029:50:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42106,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1019:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1022:6:71",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18210,
                      "src": "1019:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 42118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1019:61:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42119,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:61:71"
                },
                {
                  "assignments": [
                    42121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42121,
                      "mutability": "mutable",
                      "name": "salePrice",
                      "nameLocation": "1098:9:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 42142,
                      "src": "1090:17:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42120,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1090:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42125,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 42122,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42007,
                        "src": "1110:3:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackathon721_$41534",
                          "typeString": "contract Hackathon721"
                        }
                      },
                      "id": 42123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1114:9:71",
                      "memberName": "salePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41106,
                      "src": "1110:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 42124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:15:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1090:35:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42129,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42009,
                        "src": "1145:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42126,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1136:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1139:5:71",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18265,
                      "src": "1136:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:23:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42131,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:23:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42139,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42103,
                        "src": "1259:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 42132,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42007,
                          "src": "1221:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon721_$41534",
                            "typeString": "contract Hackathon721"
                          }
                        },
                        "id": 42134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1225:4:71",
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41203,
                        "src": "1221:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 42138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42135,
                            "name": "salePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42121,
                            "src": "1237:9:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 42136,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42103,
                            "src": "1249:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1237:20:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1221:37:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 42140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1221:47:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42141,
                  "nodeType": "ExpressionStatement",
                  "src": "1221:47:71"
                }
              ]
            },
            "functionSelector": "45a8f0e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailTooManyTokens",
            "nameLocation": "962:21:71",
            "parameters": {
              "id": 42104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42103,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "992:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 42143,
                  "src": "984:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "983:18:71"
            },
            "returnParameters": {
              "id": 42105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:0:71"
            },
            "scope": 42407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42202,
            "nodeType": "FunctionDefinition",
            "src": "1281:355:71",
            "nodes": [],
            "body": {
              "id": 42201,
              "nodeType": "Block",
              "src": "1324:312:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42151,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42009,
                        "src": "1348:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42148,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1334:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1337:10:71",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18270,
                      "src": "1334:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1334:28:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42153,
                  "nodeType": "ExpressionStatement",
                  "src": "1334:28:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42157,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42009,
                            "src": "1395:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42155,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42007,
                            "src": "1381:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon721_$41534",
                              "typeString": "contract Hackathon721"
                            }
                          },
                          "id": 42156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1385:9:71",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35749,
                          "src": "1381:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 42158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1381:28:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1411:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 42154,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 6984,
                      "src": "1372:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:41:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42161,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:41:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 42173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42165,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42145,
                            "src": "1434:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 42166,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42007,
                                "src": "1445:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon721_$41534",
                                  "typeString": "contract Hackathon721"
                                }
                              },
                              "id": 42167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1449:15:71",
                              "memberName": "maxTokensPerTxn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41109,
                              "src": "1445:19:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 42168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1445:21:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1434:32:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42170,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42145,
                            "src": "1470:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 42171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1481:1:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1470:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1434:48:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42162,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1424:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1427:6:71",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18210,
                      "src": "1424:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 42174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:59:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42175,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:59:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42185,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42145,
                        "src": "1537:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 42176,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42007,
                          "src": "1493:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon721_$41534",
                            "typeString": "contract Hackathon721"
                          }
                        },
                        "id": 42178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1497:4:71",
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41203,
                        "src": "1493:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 42184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 42179,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42007,
                                "src": "1509:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon721_$41534",
                                  "typeString": "contract Hackathon721"
                                }
                              },
                              "id": 42180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1513:9:71",
                              "memberName": "salePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41106,
                              "src": "1509:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 42181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1509:15:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 42182,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42145,
                            "src": "1527:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1509:26:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1493:43:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 42186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1493:53:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42187,
                  "nodeType": "ExpressionStatement",
                  "src": "1493:53:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42191,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42009,
                            "src": "1580:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42189,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42007,
                            "src": "1566:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon721_$41534",
                              "typeString": "contract Hackathon721"
                            }
                          },
                          "id": 42190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1570:9:71",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35749,
                          "src": "1566:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 42192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1566:28:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42193,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42145,
                        "src": "1596:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42188,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 6984,
                      "src": "1557:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1557:48:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42195,
                  "nodeType": "ExpressionStatement",
                  "src": "1557:48:71"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 42196,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1615:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1618:9:71",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18287,
                      "src": "1615:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 42199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:14:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42200,
                  "nodeType": "ExpressionStatement",
                  "src": "1615:14:71"
                }
              ]
            },
            "functionSelector": "2f3f94ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nameLocation": "1290:8:71",
            "parameters": {
              "id": 42146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42145,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "1307:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 42202,
                  "src": "1299:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:18:71"
            },
            "returnParameters": {
              "id": 42147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1324:0:71"
            },
            "scope": 42407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42254,
            "nodeType": "FunctionDefinition",
            "src": "1642:291:71",
            "nodes": [],
            "body": {
              "id": 42253,
              "nodeType": "Block",
              "src": "1673:260:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42208,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42009,
                        "src": "1697:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42205,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1683:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1686:10:71",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18270,
                      "src": "1683:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:28:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42210,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:28:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42214,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42009,
                            "src": "1744:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42212,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42007,
                            "src": "1730:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon721_$41534",
                              "typeString": "contract Hackathon721"
                            }
                          },
                          "id": 42213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1734:9:71",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35749,
                          "src": "1730:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 42215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1730:28:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1760:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 42211,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 6984,
                      "src": "1721:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1721:41:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42218,
                  "nodeType": "ExpressionStatement",
                  "src": "1721:41:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1810:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 42219,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42007,
                          "src": "1773:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon721_$41534",
                            "typeString": "contract Hackathon721"
                          }
                        },
                        "id": 42221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1777:4:71",
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41203,
                        "src": "1773:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 42227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 42222,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42007,
                                "src": "1789:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon721_$41534",
                                  "typeString": "contract Hackathon721"
                                }
                              },
                              "id": 42223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1793:9:71",
                              "memberName": "salePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41106,
                              "src": "1789:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 42224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1789:15:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 42225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1807:1:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1789:19:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1773:36:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 42229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:39:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42230,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:39:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 42236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1847:1:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 42234,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42007,
                            "src": "1834:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon721_$41534",
                              "typeString": "contract Hackathon721"
                            }
                          },
                          "id": 42235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1838:8:71",
                          "memberName": "tokenURI",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41533,
                          "src": "1834:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (string memory)"
                          }
                        },
                        "id": 42237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1834:15:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 42231,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26636,
                        "src": "1822:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$26636_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 42233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1830:3:71",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19167,
                      "src": "1822:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 42238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:28:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42239,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:28:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42243,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42009,
                            "src": "1884:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42241,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42007,
                            "src": "1870:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon721_$41534",
                              "typeString": "contract Hackathon721"
                            }
                          },
                          "id": 42242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1874:9:71",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35749,
                          "src": "1870:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 42244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1870:28:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 42240,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 6984,
                      "src": "1861:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1861:41:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42247,
                  "nodeType": "ExpressionStatement",
                  "src": "1861:41:71"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 42248,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1912:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1915:9:71",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18287,
                      "src": "1912:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 42251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1912:14:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42252,
                  "nodeType": "ExpressionStatement",
                  "src": "1912:14:71"
                }
              ]
            },
            "functionSelector": "ba85d69b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenUri",
            "nameLocation": "1651:12:71",
            "parameters": {
              "id": 42203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1663:2:71"
            },
            "returnParameters": {
              "id": 42204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1673:0:71"
            },
            "scope": 42407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42343,
            "nodeType": "FunctionDefinition",
            "src": "1939:644:71",
            "nodes": [],
            "body": {
              "id": 42342,
              "nodeType": "Block",
              "src": "1986:597:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42262,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42009,
                        "src": "2010:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42259,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1996:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1999:10:71",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18270,
                      "src": "1996:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:28:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42264,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:28:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42268,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42009,
                            "src": "2057:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42266,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42007,
                            "src": "2043:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon721_$41534",
                              "typeString": "contract Hackathon721"
                            }
                          },
                          "id": 42267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2047:9:71",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35749,
                          "src": "2043:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 42269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2043:28:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2073:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 42265,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 6984,
                      "src": "2034:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2034:41:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42272,
                  "nodeType": "ExpressionStatement",
                  "src": "2034:41:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42276,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42009,
                            "src": "2111:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42274,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42007,
                            "src": "2094:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon721_$41534",
                              "typeString": "contract Hackathon721"
                            }
                          },
                          "id": 42275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2098:12:71",
                          "memberName": "hasValidPass",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41282,
                          "src": "2094:16:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 42277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2094:31:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 42278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2127:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 42273,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 8484,
                      "src": "2085:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 42279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2085:48:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42280,
                  "nodeType": "ExpressionStatement",
                  "src": "2085:48:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 42292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42284,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42256,
                            "src": "2154:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 42285,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42007,
                                "src": "2165:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon721_$41534",
                                  "typeString": "contract Hackathon721"
                                }
                              },
                              "id": 42286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2169:15:71",
                              "memberName": "maxTokensPerTxn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41109,
                              "src": "2165:19:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 42287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2165:21:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2154:32:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42289,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42256,
                            "src": "2190:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 42290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2201:1:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2190:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2154:48:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42281,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "2144:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2147:6:71",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18210,
                      "src": "2144:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 42293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2144:59:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42294,
                  "nodeType": "ExpressionStatement",
                  "src": "2144:59:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42304,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42256,
                        "src": "2257:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 42295,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42007,
                          "src": "2213:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon721_$41534",
                            "typeString": "contract Hackathon721"
                          }
                        },
                        "id": 42297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2217:4:71",
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41203,
                        "src": "2213:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 42303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 42298,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42007,
                                "src": "2229:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon721_$41534",
                                  "typeString": "contract Hackathon721"
                                }
                              },
                              "id": 42299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2233:9:71",
                              "memberName": "salePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41106,
                              "src": "2229:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 42300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2229:15:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 42301,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42256,
                            "src": "2247:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2229:26:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2213:43:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 42305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:53:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42306,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:53:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42310,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42009,
                            "src": "2300:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42308,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42007,
                            "src": "2286:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon721_$41534",
                              "typeString": "contract Hackathon721"
                            }
                          },
                          "id": 42309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2290:9:71",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35749,
                          "src": "2286:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 42311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2286:28:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42312,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42256,
                        "src": "2316:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42307,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 6984,
                      "src": "2277:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2277:48:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42314,
                  "nodeType": "ExpressionStatement",
                  "src": "2277:48:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42318,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42009,
                            "src": "2361:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42316,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42007,
                            "src": "2344:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon721_$41534",
                              "typeString": "contract Hackathon721"
                            }
                          },
                          "id": 42317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2348:12:71",
                          "memberName": "hasValidPass",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41282,
                          "src": "2344:16:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 42319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2344:31:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 42320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2377:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 42315,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 8484,
                      "src": "2335:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 42321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2335:47:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42322,
                  "nodeType": "ExpressionStatement",
                  "src": "2335:47:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030303030",
                        "id": 42326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2476:16:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        },
                        "value": "1000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42323,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "2468:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2471:4:71",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18224,
                      "src": "2468:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 42327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2468:25:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42328,
                  "nodeType": "ExpressionStatement",
                  "src": "2468:25:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42332,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42009,
                            "src": "2529:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 42330,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42007,
                            "src": "2512:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon721_$41534",
                              "typeString": "contract Hackathon721"
                            }
                          },
                          "id": 42331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2516:12:71",
                          "memberName": "hasValidPass",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41282,
                          "src": "2512:16:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 42333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2512:31:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 42334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2545:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 42329,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 8484,
                      "src": "2503:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 42335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2503:48:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42336,
                  "nodeType": "ExpressionStatement",
                  "src": "2503:48:71"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 42337,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "2562:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2565:9:71",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18287,
                      "src": "2562:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 42340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2562:14:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42341,
                  "nodeType": "ExpressionStatement",
                  "src": "2562:14:71"
                }
              ]
            },
            "functionSelector": "65cff61a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testValidity",
            "nameLocation": "1948:12:71",
            "parameters": {
              "id": 42257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42256,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "1969:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 42343,
                  "src": "1961:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1960:18:71"
            },
            "returnParameters": {
              "id": 42258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1986:0:71"
            },
            "scope": 42407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42384,
            "nodeType": "FunctionDefinition",
            "src": "2589:423:71",
            "nodes": [],
            "body": {
              "id": 42383,
              "nodeType": "Block",
              "src": "2634:378:71",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42347,
                      "mutability": "mutable",
                      "name": "payee",
                      "nameLocation": "2712:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 42383,
                      "src": "2696:21:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 42346,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2696:15:71",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42352,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42350,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42009,
                        "src": "2728:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2720:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 42348,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2720:8:71",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 42351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:22:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2696:46:71"
                },
                {
                  "assignments": [
                    42354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42354,
                      "mutability": "mutable",
                      "name": "priorPayeeBalance",
                      "nameLocation": "2760:17:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 42383,
                      "src": "2752:25:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42353,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2752:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42357,
                  "initialValue": {
                    "expression": {
                      "id": 42355,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42347,
                      "src": "2780:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 42356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2786:7:71",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2780:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2752:41:71"
                },
                {
                  "assignments": [
                    42359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42359,
                      "mutability": "mutable",
                      "name": "priorContractBalance",
                      "nameLocation": "2811:20:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 42383,
                      "src": "2803:28:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42358,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2803:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42362,
                  "initialValue": {
                    "expression": {
                      "id": 42360,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42011,
                      "src": "2834:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 42361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2850:7:71",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2834:23:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2803:54:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42366,
                        "name": "deployerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42013,
                        "src": "2877:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42363,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "2868:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2871:5:71",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18265,
                      "src": "2868:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2868:25:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42368,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:25:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42372,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42347,
                        "src": "2924:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 42369,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42007,
                        "src": "2903:3:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackathon721_$41534",
                          "typeString": "contract Hackathon721"
                        }
                      },
                      "id": 42371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2907:16:71",
                      "memberName": "withdrawPayments",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41338,
                      "src": "2903:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 42373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2903:27:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42374,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:27:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 42376,
                          "name": "payee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42347,
                          "src": "2949:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 42377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2955:7:71",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2949:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42378,
                          "name": "priorPayeeBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42354,
                          "src": "2964:17:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 42379,
                          "name": "priorContractBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42359,
                          "src": "2984:20:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2964:40:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42375,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 6984,
                      "src": "2940:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:65:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42382,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:65:71"
                }
              ]
            },
            "functionSelector": "f053b645",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawalWorksAsOwner",
            "nameLocation": "2598:26:71",
            "parameters": {
              "id": 42344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2624:2:71"
            },
            "returnParameters": {
              "id": 42345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2634:0:71"
            },
            "scope": 42407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42406,
            "nodeType": "FunctionDefinition",
            "src": "3018:134:71",
            "nodes": [],
            "body": {
              "id": 42405,
              "nodeType": "Block",
              "src": "3061:91:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42390,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42009,
                        "src": "3080:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42387,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "3071:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3074:5:71",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18265,
                      "src": "3071:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3071:23:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42392,
                  "nodeType": "ExpressionStatement",
                  "src": "3071:23:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 42400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3141:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 42399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3133:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 42398,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3133:7:71",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 42401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3133:10:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3125:8:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 42396,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3125:8:71",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3125:19:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 42393,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42007,
                        "src": "3104:3:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackathon721_$41534",
                          "typeString": "contract Hackathon721"
                        }
                      },
                      "id": 42395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3108:16:71",
                      "memberName": "withdrawPayments",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41338,
                      "src": "3104:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 42403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3104:41:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42404,
                  "nodeType": "ExpressionStatement",
                  "src": "3104:41:71"
                }
              ]
            },
            "functionSelector": "0449cdc1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailWithdrawNotOwner",
            "nameLocation": "3027:24:71",
            "parameters": {
              "id": 42385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3051:2:71"
            },
            "returnParameters": {
              "id": 42386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3061:0:71"
            },
            "scope": 42407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41999,
              "name": "Test",
              "nameLocations": [
                "169:4:71"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17252,
              "src": "169:4:71"
            },
            "id": 42000,
            "nodeType": "InheritanceSpecifier",
            "src": "169:4:71"
          }
        ],
        "canonicalName": "Hackathon721Test",
        "contractDependencies": [
          41534
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42407,
          17252,
          8316,
          8313,
          17203,
          13002,
          12712,
          12033,
          10461,
          9767,
          8256
        ],
        "name": "Hackathon721Test",
        "nameLocation": "149:16:71",
        "scope": 42408,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 71
}