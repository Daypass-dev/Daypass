{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "testFailIncorrectValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "testFailTooManyTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b5061305a8061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c806385226c811162000097578063ba414fa6116200006e578063ba414fa614620001b8578063df64143c14620001d3578063e20c9f7114620001ea578063fa7626d414620001f457600080fd5b806385226c81146200018b578063916a17c614620001a4578063b5508aa914620001ae57600080fd5b80633e5e3c2311620000d85780633e5e3c2314620001475780633f7286f4146200015157806345a8f0e8146200015b57806366d9a9a0146200017257600080fd5b80630a9254e414620001025780631ed7831c146200010e5780632f3f94ae1462000130575b600080fd5b6200010c62000202565b005b620001186200037f565b60405162000127919062001424565b60405180910390f35b6200010c6200014136600462001473565b620003e3565b62000118620007a8565b620001186200080a565b6200010c6200016c36600462001473565b6200086c565b6200017c62000ac9565b6040516200012791906200148d565b6200019562000bbc565b6040516200012791906200156a565b6200017c62000c96565b6200019562000d80565b620001c262000e5a565b604051901515815260200162000127565b6200010c620001e436600462001473565b62000f8f565b6200011862001172565b600054620001c29060ff1681565b604051620002109062001416565b604051809103906000f0801580156200022d573d6000803e3d6000fd5b50601b80546001600160a01b03929092166001600160a01b03199283168117909155601d8054831682179055601e8054831673e898bbd704cce799e9593a9ade2c1ca0351ab660179055601c805490921660011790915560405163c88a5e6d60e01b8152600481019190915268056bc75e2d631000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015620002e257600080fd5b505af1158015620002f7573d6000803e3d6000fd5b5050601c5460405163c88a5e6d60e01b81526001600160a01b03909116600482015268056bc75e2d631000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200036457600080fd5b505af115801562000379573d6000803e3d6000fd5b50505050565b6060600d805480602002602001604051908101604052809291908181526020018280548015620003d957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620003ba575b5050505050905090565b601c546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200043d57600080fd5b505af115801562000452573d6000803e3d6000fd5b5050601b54601c54604051627eeac760e11b81526001600160a01b03918216600482015260016024820152620004db94509116915062fdd58e90604401602060405180830381865afa158015620004ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d39190620015e8565b6000620011d4565b601b546040805163f34341c760e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d92634c63e562926001600160a01b039091169163f34341c7916004808201926020929091908290030181865afa15801562000542573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005689190620015e8565b83108015620005775750600083115b6040518263ffffffff1660e01b815260040162000598911515815260200190565b60006040518083038186803b158015620005b157600080fd5b505afa158015620005c6573d6000803e3d6000fd5b5050601b546040805163f51f96dd60e01b815290516001600160a01b039092169350631b2ef1ca92508491849163f51f96dd9160048083019260209291908290030181865afa1580156200061e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006449190620015e8565b62000650919062001602565b6040516001600160e01b031960e084901b16815260048101859052600160248201526044016000604051808303818588803b1580156200068f57600080fd5b505af1158015620006a4573d6000803e3d6000fd5b5050601b54601c54604051627eeac760e11b81526001600160a01b039182166004820152600160248201526200072d95509116925062fdd58e9150604401602060405180830381865afa15801562000700573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007269190620015e8565b82620011d4565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200078c57600080fd5b505af1158015620007a1573d6000803e3d6000fd5b5050505050565b6060600f805480602002602001604051908101604052809291908181526020018280548015620003d9576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003ba575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015620003d9576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003ba575050505050905090565b601b546040805163f34341c760e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d92634c63e562926001600160a01b039091169163f34341c7916004808201926020929091908290030181865afa158015620008d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008f99190620015e8565b83118015620009085750606483105b6040518263ffffffff1660e01b815260040162000929911515815260200190565b60006040518083038186803b1580156200094257600080fd5b505afa15801562000957573d6000803e3d6000fd5b505050506000601b60009054906101000a90046001600160a01b03166001600160a01b031663f51f96dd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620009b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009d79190620015e8565b601c5460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562000a3457600080fd5b505af115801562000a49573d6000803e3d6000fd5b5050601b546001600160a01b03169150631b2ef1ca905062000a6c848462001602565b6040516001600160e01b031960e084901b16815260048101869052600160248201526044016000604051808303818588803b15801562000aab57600080fd5b505af115801562000ac0573d6000803e3d6000fd5b50505050505050565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101562000bb35760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000b9a57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000b5b5790505b5050505050815250508152602001906001019062000aed565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101562000bb357838290600052602060002001805462000c02906200162e565b80601f016020809104026020016040519081016040528092919081815260200182805462000c30906200162e565b801562000c815780601f1062000c555761010080835404028352916020019162000c81565b820191906000526020600020905b81548152906001019060200180831162000c6357829003601f168201915b50505050508152602001906001019062000be0565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101562000bb35760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000d6757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000d285790505b5050505050815250508152602001906001019062000cba565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562000bb357838290600052602060002001805462000dc6906200162e565b80601f016020809104026020016040519081016040528092919081815260200182805462000df4906200162e565b801562000e455780601f1062000e195761010080835404028352916020019162000e45565b820191906000526020600020905b81548152906001019060200180831162000e2757829003601f168201915b50505050508152602001906001019062000da4565b60008054610100900460ff161562000e7b5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000f8a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000f0c917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200166a565b60408051601f198184030181529082905262000f28916200169d565b6000604051808303816000865af19150503d806000811462000f67576040519150601f19603f3d011682016040523d82523d6000602084013e62000f6c565b606091505b509150508080602001905181019062000f869190620016bb565b9150505b919050565b601b546040805163f34341c760e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d92634c63e562926001600160a01b039091169163f34341c7916004808201926020929091908290030181865afa15801562000ff6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200101c9190620015e8565b831080156200102b5750600083115b6040518263ffffffff1660e01b81526004016200104c911515815260200190565b60006040518083038186803b1580156200106557600080fd5b505afa1580156200107a573d6000803e3d6000fd5b5050601c5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620010d857600080fd5b505af1158015620010ed573d6000803e3d6000fd5b5050601b546001600160a01b03169150631b2ef1ca905062001116836512309ce5400062001602565b6040516001600160e01b031960e084901b16815260048101859052600160248201526044016000604051808303818588803b1580156200115557600080fd5b505af11580156200116a573d6000803e3d6000fd5b505050505050565b6060600c805480602002602001604051908101604052809291908181526020018280548015620003d9576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003ba575050505050905090565b808214620012ff577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620012479060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620012ff62001303565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620014055760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620013a092916020016200166a565b60408051601f1981840301815290829052620013bc916200169d565b6000604051808303816000865af19150503d8060008114620013fb576040519150601f19603f3d011682016040523d82523d6000602084013e62001400565b606091505b505050505b6000805461ff001916610100179055565b61193e80620016e783390190565b6020808252825182820181905260009190848201906040850190845b81811015620014675783516001600160a01b03168352928401929184019160010162001440565b50909695505050505050565b6000602082840312156200148657600080fd5b5035919050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200153557898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156200151f5783516001600160e01b0319168252928b019260019290920191908b0190620014f3565b50978a01979550505091870191600101620014b5565b50919998505050505050505050565b60005b838110156200156157818101518382015260200162001547565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620015db57878503603f1901845281518051808752620015bb818989018a850162001544565b601f01601f19169590950186019450928501929085019060010162001591565b5092979650505050505050565b600060208284031215620015fb57600080fd5b5051919050565b80820281158282048414176200162857634e487b7160e01b600052601160045260246000fd5b92915050565b600181811c908216806200164357607f821691505b6020821081036200166457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906200168f81600485016020870162001544565b919091016004019392505050565b60008251620016b181846020870162001544565b9190910192915050565b600060208284031215620016ce57600080fd5b81518015158114620016df57600080fd5b939250505056fe655af3107a400060035560066004556101006040526050608081815290620018ee60a0396005906200003290826200013b565b506200003e3362000044565b62000207565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000c157607f821691505b602082108103620000e257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200013657600081815260208120601f850160051c81016020861015620001115750805b601f850160051c820191505b8181101562000132578281556001016200011d565b5050505b505050565b81516001600160401b0381111562000157576200015762000096565b6200016f81620001688454620000ac565b84620000e8565b602080601f831160018114620001a757600084156200018e5750858301515b600019600386901b1c1916600185901b17855562000132565b600085815260208120601f198616915b82811015620001d857888601518255948401946001909101908401620001b7565b5085821015620001f75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6116d780620002176000396000f3fe6080604052600436106101085760003560e01c806355f804b311610095578063e985e9c511610064578063e985e9c5146102e6578063f242432a14610321578063f2fde38b14610341578063f34341c714610361578063f51f96dd1461037757600080fd5b806355f804b314610269578063715018a6146102895780638da5cb5b1461029e578063a22cb465146102c657600080fd5b80631919fed7116100dc5780631919fed7146101c75780631b2ef1ca146101e95780632eb2c2d6146101fc57806331b3eb941461021c5780634e1273f41461023c57600080fd5b8062fdd58e1461010d57806301ffc9a7146101555780630e14f4bb146101855780630e89341c146101a7575b600080fd5b34801561011957600080fd5b50610142610128366004610eea565b600060208181529281526040808220909352908152205481565b6040519081526020015b60405180910390f35b34801561016157600080fd5b50610175610170366004610f2c565b61038d565b604051901515815260200161014c565b34801561019157600080fd5b5061019a6103df565b60405161014c9190610f96565b3480156101b357600080fd5b5061019a6101c2366004610fa9565b61046d565b3480156101d357600080fd5b506101e76101e2366004610fa9565b610501565b005b6101e76101f7366004610fc2565b61050e565b34801561020857600080fd5b506101e7610217366004611072565b610581565b34801561022857600080fd5b506101e7610237366004611131565b610829565b34801561024857600080fd5b5061025c61025736600461114e565b6108aa565b60405161014c91906111ba565b34801561027557600080fd5b506101e76102843660046111fe565b6109df565b34801561029557600080fd5b506101e76109f4565b3480156102aa57600080fd5b506002546040516001600160a01b03909116815260200161014c565b3480156102d257600080fd5b506101e76102e1366004611240565b610a08565b3480156102f257600080fd5b5061017561030136600461127e565b600160209081526000928352604080842090915290825290205460ff1681565b34801561032d57600080fd5b506101e761033c3660046112ac565b610a74565b34801561034d57600080fd5b506101e761035c366004611131565b610c6e565b34801561036d57600080fd5b5061014260045481565b34801561038357600080fd5b5061014260035481565b60006301ffc9a760e01b6001600160e01b0319831614806103be5750636cdb3d1360e11b6001600160e01b03198316145b806103d957506303a24d0760e21b6001600160e01b03198316145b92915050565b600580546103ec90611328565b80601f016020809104026020016040519081016040528092919081815260200182805461041890611328565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b505050505081565b60606005805461047c90611328565b80601f01602080910402602001604051908101604052809291908181526020018280546104a890611328565b80156104f55780601f106104ca576101008083540402835291602001916104f5565b820191906000526020600020905b8154815290600101906020018083116104d857829003601f168201915b50505050509050919050565b610509610ce7565b600355565b8160045481111561053257604051633a4733d960e11b815260040160405180910390fd5b8234816003546105429190611378565b1461056057604051636956f2ab60e11b815260040160405180910390fd5b61057b33848660405180602001604052806000815250610d41565b50505050565b8483146105c75760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064015b60405180910390fd5b336001600160a01b038916148061060157506001600160a01b038816600090815260016020908152604080832033845290915290205460ff165b61063e5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016105be565b60008060005b878110156106f95788888281811061065e5761065e61138f565b9050602002013592508686828181106106795761067961138f565b6001600160a01b038e16600090815260208181526040808320898452825282208054939091029490940135955085939250906106b69084906113a5565b90915550506001600160a01b038a16600090815260208181526040808320868452909152812080548492906106ec9084906113b8565b9091555050600101610644565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b60405161074d94939291906113fd565b60405180910390a46001600160a01b0389163b156107f45760405163bc197c8160e01b808252906001600160a01b038b169063bc197c81906107a19033908f908e908e908e908e908e908e90600401611458565b6020604051808303816000875af11580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e491906114bc565b6001600160e01b03191614610801565b6001600160a01b03891615155b61081d5760405162461bcd60e51b81526004016105be906114d9565b50505050505050505050565b610831610ce7565b60405147906000906001600160a01b0384169083908381818185875af1925050503d806000811461087e576040519150601f19603f3d011682016040523d82523d6000602084013e610883565b606091505b50509050806108a55760405163d23a9e8960e01b815260040160405180910390fd5b505050565b60608382146108ed5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016105be565b8367ffffffffffffffff81111561090657610906611503565b60405190808252806020026020018201604052801561092f578160200160208202803683370190505b50905060005b848110156109d6576000808787848181106109525761095261138f565b90506020020160208101906109679190611131565b6001600160a01b03166001600160a01b03168152602001908152602001600020600085858481811061099b5761099b61138f565b905060200201358152602001908152602001600020548282815181106109c3576109c361138f565b6020908102919091010152600101610935565b50949350505050565b6109e7610ce7565b60056108a582848361155f565b6109fc610ce7565b610a066000610e83565b565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b336001600160a01b0387161480610aae57506001600160a01b038616600090815260016020908152604080832033845290915290205460ff165b610aeb5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016105be565b6001600160a01b03861660009081526020818152604080832087845290915281208054859290610b1c9084906113a5565b90915550506001600160a01b03851660009081526020818152604080832087845290915281208054859290610b529084906113b8565b909155505060408051858152602081018590526001600160a01b03808816929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15610c3d5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190610bea9033908b908a908a908a908a90600401611620565b6020604051808303816000875af1158015610c09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2d91906114bc565b6001600160e01b03191614610c4a565b6001600160a01b03851615155b610c665760405162461bcd60e51b81526004016105be906114d9565b505050505050565b610c76610ce7565b6001600160a01b038116610cdb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105be565b610ce481610e83565b50565b6002546001600160a01b03163314610a065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105be565b6001600160a01b03841660009081526020818152604080832086845290915281208054849290610d729084906113b8565b909155505060408051848152602081018490526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0384163b15610e5a5760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190610e07903390600090899089908990600401611667565b6020604051808303816000875af1158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a91906114bc565b6001600160e01b03191614610e67565b6001600160a01b03841615155b61057b5760405162461bcd60e51b81526004016105be906114d9565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381168114610ce457600080fd5b60008060408385031215610efd57600080fd5b8235610f0881610ed5565b946020939093013593505050565b6001600160e01b031981168114610ce457600080fd5b600060208284031215610f3e57600080fd5b8135610f4981610f16565b9392505050565b6000815180845260005b81811015610f7657602081850181015186830182015201610f5a565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610f496020830184610f50565b600060208284031215610fbb57600080fd5b5035919050565b60008060408385031215610fd557600080fd5b50508035926020909101359150565b60008083601f840112610ff657600080fd5b50813567ffffffffffffffff81111561100e57600080fd5b6020830191508360208260051b850101111561102957600080fd5b9250929050565b60008083601f84011261104257600080fd5b50813567ffffffffffffffff81111561105a57600080fd5b60208301915083602082850101111561102957600080fd5b60008060008060008060008060a0898b03121561108e57600080fd5b883561109981610ed5565b975060208901356110a981610ed5565b9650604089013567ffffffffffffffff808211156110c657600080fd5b6110d28c838d01610fe4565b909850965060608b01359150808211156110eb57600080fd5b6110f78c838d01610fe4565b909650945060808b013591508082111561111057600080fd5b5061111d8b828c01611030565b999c989b5096995094979396929594505050565b60006020828403121561114357600080fd5b8135610f4981610ed5565b6000806000806040858703121561116457600080fd5b843567ffffffffffffffff8082111561117c57600080fd5b61118888838901610fe4565b909650945060208701359150808211156111a157600080fd5b506111ae87828801610fe4565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b818110156111f2578351835292840192918401916001016111d6565b50909695505050505050565b6000806020838503121561121157600080fd5b823567ffffffffffffffff81111561122857600080fd5b61123485828601611030565b90969095509350505050565b6000806040838503121561125357600080fd5b823561125e81610ed5565b91506020830135801515811461127357600080fd5b809150509250929050565b6000806040838503121561129157600080fd5b823561129c81610ed5565b9150602083013561127381610ed5565b60008060008060008060a087890312156112c557600080fd5b86356112d081610ed5565b955060208701356112e081610ed5565b94506040870135935060608701359250608087013567ffffffffffffffff81111561130a57600080fd5b61131689828a01611030565b979a9699509497509295939492505050565b600181811c9082168061133c57607f821691505b60208210810361135c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103d9576103d9611362565b634e487b7160e01b600052603260045260246000fd5b818103818111156103d9576103d9611362565b808201808211156103d9576103d9611362565b81835260006001600160fb1b038311156113e457600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006114116040830186886113cb565b82810360208401526114248185876113cb565b979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a060408201819052600090611485908301888a6113cb565b82810360608401526114988187896113cb565b905082810360808401526114ad81858761142f565b9b9a5050505050505050505050565b6000602082840312156114ce57600080fd5b8151610f4981610f16565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b601f8211156108a557600081815260208120601f850160051c810160208610156115405750805b601f850160051c820191505b81811015610c665782815560010161154c565b67ffffffffffffffff83111561157757611577611503565b61158b836115858354611328565b83611519565b6000601f8411600181146115bf57600085156115a75750838201355b600019600387901b1c1916600186901b178355611619565b600083815260209020601f19861690835b828110156115f057868501358255602094850194600190920191016115d0565b508682101561160d5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905260009061165b908301848661142f565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061142490830184610f5056fea2646970667358221220c3af3bd5e271abd9fe7fdea91fff1004698648af776200a9b844a9614d802a4c64736f6c6343000813003368747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d50757835516779504866786a7543426631474c36626e6259526f44647a7768395547646e7a32555878353844a2646970667358221220cc5cbd091466ac9c3b5f668ecb72692416bf414cdb221d467b065e7835d6cb7c64736f6c63430008130033",
    "sourceMap": "141:1523:70:-:0;;;1572:26:20;;;1594:4;-1:-1:-1;;1572:26:20;;;;;;;;3288:44:24;;;;;;;;;;;141:1523:70;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "141:1523:70:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;361:310;;;:::i;:::-;;2161:134:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1297:365:70;;;;;;:::i;:::-;;:::i;2930:133:27:-;;;:::i;2631:141::-;;;:::i;966:325:70:-;;;;;;:::i;:::-;;:::i;2447:178:27:-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:20:-;;;:::i;:::-;;;3875:14:74;;3868:22;3850:41;;3838:2;3823:18;1819:584:20;3710:187:74;677:283:70;;;;;;:::i;:::-;;:::i;2013:142:27:-;;;:::i;1572:26:20:-;;;;;;;;;361:310:70;401:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;395:3:70;:25;;-1:-1:-1;;;;;395:25:70;;;;-1:-1:-1;;;;;;395:25:70;;;;;;;;430:15;:30;;;;;;;;470:15;:69;;;;496:42;470:69;;;549:13;:26;;;;;-1:-1:-1;549:26:70;;;;586:35;;-1:-1:-1;;;586:35:70;;;;;4104:51:74;;;;611:9:70;4171:18:74;;;4164:34;586:7:70;;;;4077:18:74;;586:35:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;639:13:70;;631:33;;-1:-1:-1;;;631:33:70;;-1:-1:-1;;;;;639:13:70;;;631:33;;;4104:51:74;654:9:70;4171:18:74;;;4164:34;631:7:70;;-1:-1:-1;631:7:70;;-1:-1:-1;4077:18:74;;631:33:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;361:310::o;2161:134:27:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:27;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1297:365:70:-;1364:13;;1350:28;;-1:-1:-1;;;1350:28:70;;-1:-1:-1;;;;;1364:13:70;;;1350:28;;;4355:51:74;1350:13:70;;;;4328:18:74;;1350:28:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1398:3:70;;1412:13;;1398:31;;-1:-1:-1;;;1398:31:70;;-1:-1:-1;;;;;1412:13:70;;;1398:31;;;4104:51:74;1398:3:70;4171:18:74;;;4164:34;1389:44:70;;-1:-1:-1;1398:3:70;;;-1:-1:-1;1398:13:70;;4077:18:74;;1398:31:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1431:1;1389:8;:44::i;:::-;1465:3;;:21;;;-1:-1:-1;;;1465:21:70;;;;1444:9;;;;-1:-1:-1;;;;;1465:3:70;;;;:19;;:21;;;;;;;;;;;;;;;:3;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1454:8;:32;:48;;;;;1501:1;1490:8;:12;1454:48;1444:59;;;;;;;;;;;;;3875:14:74;3868:22;3850:41;;3838:2;3823:18;;3710:187;1444:59:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1513:3:70;;1529:15;;;-1:-1:-1;;;1529:15:70;;;;-1:-1:-1;;;;;1513:3:70;;;;-1:-1:-1;1513:8:70;;-1:-1:-1;1547:8:70;;1513:3;;1529:13;;:15;;;;;;;;;;;;;;1513:3;1529:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;:::i;:::-;1513:56;;-1:-1:-1;;;;;;1513:56:70;;;;;;;;;;5345:25:74;;;1567:1:70;5386:18:74;;;5379:34;5318:18;;1513:56:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1589:3:70;;1603:13;;1589:31;;-1:-1:-1;;;1589:31:70;;-1:-1:-1;;;;;1603:13:70;;;1589:31;;;4104:51:74;1589:3:70;4171:18:74;;;4164:34;1580:51:70;;-1:-1:-1;1589:3:70;;;-1:-1:-1;1589:13:70;;-1:-1:-1;4077:18:74;;1589:31:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1622:8;1580;:51::i;:::-;317:28:21;309:37;;-1:-1:-1;;;;;1641:12:70;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:365;:::o;2930:133:27:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:27;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:27;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;966:325:70:-;1053:3;;:21;;;-1:-1:-1;;;1053:21:70;;;;1032:9;;;;-1:-1:-1;;;;;1053:3:70;;;;:19;;:21;;;;;;;;;;;;;;;:3;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1042:8;:32;:50;;;;;1089:3;1078:8;:14;1042:50;1032:61;;;;;;;;;;;;;3875:14:74;3868:22;3850:41;;3838:2;3823:18;;3710:187;1032:61:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:17;1123:3;;;;;;;;;-1:-1:-1;;;;;1123:3:70;-1:-1:-1;;;;;1123:13:70;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1158:13;;1149:23;;-1:-1:-1;;;1149:23:70;;-1:-1:-1;;;;;1158:13:70;;;1149:23;;;4355:51:74;1103:35:70;;-1:-1:-1;1149:8:70;;;;4328:18:74;;1149:23:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1234:3:70;;-1:-1:-1;;;;;1234:3:70;;-1:-1:-1;1234:8:70;;-1:-1:-1;1250:20:70;1262:8;1250:9;:20;:::i;:::-;1234:50;;-1:-1:-1;;;;;;1234:50:70;;;;;;;;;;5345:25:74;;;1282:1:70;5386:18:74;;;5379:34;5318:18;;1234:50:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:269;966:325;:::o;2447:178:27:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:20;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:20;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;4104:51:74;;;-1:-1:-1;;;4171:18:74;;;4164:34;2196:43:20;;;;;;;;;4077:18:74;;;2196:43:20;;;-1:-1:-1;;1671:64:20;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:20;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:20:o;677:283:70:-;765:3;;:21;;;-1:-1:-1;;;765:21:70;;;;744:9;;;;-1:-1:-1;;;;;765:3:70;;;;:19;;:21;;;;;;;;;;;;;;;:3;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;754:8;:32;:48;;;;;801:1;790:8;:12;754:48;744:59;;;;;;;;;;;;;3875:14:74;3868:22;3850:41;;3838:2;3823:18;;3710:187;744:59:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;822:13:70;;813:23;;-1:-1:-1;;;813:23:70;;-1:-1:-1;;;;;822:13:70;;;813:23;;;4355:51:74;813:8:70;;-1:-1:-1;813:8:70;;-1:-1:-1;4328:18:74;;813:23:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;899:3:70;;-1:-1:-1;;;;;899:3:70;;-1:-1:-1;899:8:70;;-1:-1:-1;915:24:70;931:8;915:13;:24;:::i;:::-;899:54;;-1:-1:-1;;;;;;899:54:70;;;;;;;;;;5345:25:74;;;951:1:70;5386:18:74;;;5379:34;5318:18;;899:54:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:283;:::o;2013:142:27:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:27;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;5209:262:20:-;5271:1;5266;:6;5262:203;;5293:41;;;;;7253:2:74;7235:21;;;7292:2;7272:18;;;7265:30;7331:34;7326:2;7311:18;;7304:62;-1:-1:-1;;;7397:2:74;7382:18;;7375:32;7439:3;7424:19;;7051:398;5293:41:20;;;;;;;;5353:31;;;7666:21:74;;;7723:2;7703:18;;;7696:30;-1:-1:-1;;;7757:2:74;7742:18;;7735:40;7842:4;7827:20;;7820:36;;;5353:31:20;;;;;;;7807:3:74;5353:31:20;;;5403;;;8079:21:74;;;8136:2;8116:18;;;8109:30;-1:-1:-1;;;8170:2:74;8155:18;;8148:40;8255:4;8240:20;;8233:36;;;5403:31:20;;;;;;;8220:3:74;5403:31:20;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;8482:51:74;;;-1:-1:-1;;;8549:18:74;;;8542:34;;;;2712:4:20;8592:18:74;;;8585:34;2489:11:20;;1671:64;2586:43;;8455:18:74;;2652:67:20;;;-1:-1:-1;;2652:67:20;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:20;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:20;2820:7;:14;;-1:-1:-1;;2820:14:20;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;14:658:74:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:74;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:74;;14:658;-1:-1:-1;;;;;;14:658:74:o;677:180::-;736:6;789:2;777:9;768:7;764:23;760:32;757:52;;;805:1;802;795:12;757:52;-1:-1:-1;828:23:74;;677:180;-1:-1:-1;677:180:74:o;862:1569::-;1066:4;1095:2;1135;1124:9;1120:18;1165:2;1154:9;1147:21;1188:6;1223;1217:13;1254:6;1246;1239:22;1280:2;1270:12;;1313:2;1302:9;1298:18;1291:25;;1375:2;1365:6;1362:1;1358:14;1347:9;1343:30;1339:39;1413:2;1405:6;1401:15;1434:1;1455;1465:937;1481:6;1476:3;1473:15;1465:937;;;1550:22;;;-1:-1:-1;;1546:36:74;1534:49;;1606:13;;1693:9;;-1:-1:-1;;;;;1689:35:74;1674:51;;1764:11;;1758:18;1796:15;;;1789:27;;;1877:19;;1646:15;;;1909:24;;;1999:21;;;;2044:1;;1967:2;1955:15;;;2058:236;2074:8;2069:3;2066:17;2058:236;;;2155:15;;-1:-1:-1;;;;;;2151:42:74;2137:57;;2263:17;;;;2102:1;2093:11;;;;;2220:14;;;;2058:236;;;-1:-1:-1;2380:12:74;;;;2317:5;-1:-1:-1;;;2345:15:74;;;;1507:1;1498:11;1465:937;;;-1:-1:-1;2419:6:74;;862:1569;-1:-1:-1;;;;;;;;;862:1569:74:o;2436:250::-;2521:1;2531:113;2545:6;2542:1;2539:13;2531:113;;;2621:11;;;2615:18;2602:11;;;2595:39;2567:2;2560:10;2531:113;;;-1:-1:-1;;2678:1:74;2660:16;;2653:27;2436:250::o;2691:1014::-;2853:4;2882:2;2922;2911:9;2907:18;2952:2;2941:9;2934:21;2975:6;3010;3004:13;3041:6;3033;3026:22;3079:2;3068:9;3064:18;3057:25;;3141:2;3131:6;3128:1;3124:14;3113:9;3109:30;3105:39;3091:53;;3179:2;3171:6;3167:15;3200:1;3210:466;3224:6;3221:1;3218:13;3210:466;;;3289:22;;;-1:-1:-1;;3285:36:74;3273:49;;3345:13;;3387:9;;3409:24;;;3446:74;3387:9;3494:15;;;3481:11;;;3446:74;:::i;:::-;3586:2;3563:17;-1:-1:-1;;3559:31:74;3547:44;;;;3543:53;;;-1:-1:-1;3654:12:74;;;;3619:15;;;;3246:1;3239:9;3210:466;;;-1:-1:-1;3693:6:74;;2691:1014;-1:-1:-1;;;;;;;2691:1014:74:o;4704:184::-;4774:6;4827:2;4815:9;4806:7;4802:23;4798:32;4795:52;;;4843:1;4840;4833:12;4795:52;-1:-1:-1;4866:16:74;;4704:184;-1:-1:-1;4704:184:74:o;4893:265::-;4966:9;;;4997;;5014:15;;;5008:22;;4994:37;4984:168;;5074:10;5069:3;5065:20;5062:1;5055:31;5109:4;5106:1;5099:15;5137:4;5134:1;5127:15;4984:168;4893:265;;;;:::o;5424:380::-;5503:1;5499:12;;;;5546;;;5567:61;;5621:4;5613:6;5609:17;5599:27;;5567:61;5674:2;5666:6;5663:14;5643:18;5640:38;5637:161;;5720:10;5715:3;5711:20;5708:1;5701:31;5755:4;5752:1;5745:15;5783:4;5780:1;5773:15;5637:161;;5424:380;;;:::o;6088:384::-;-1:-1:-1;;;;;;6273:33:74;;6261:46;;6330:13;;6243:3;;6352:74;6330:13;6415:1;6406:11;;6399:4;6387:17;;6352:74;:::i;:::-;6446:16;;;;6464:1;6442:24;;6088:384;-1:-1:-1;;;6088:384:74:o;6477:287::-;6606:3;6644:6;6638:13;6660:66;6719:6;6714:3;6707:4;6699:6;6695:17;6660:66;:::i;:::-;6742:16;;;;;6477:287;-1:-1:-1;;6477:287:74:o;6769:277::-;6836:6;6889:2;6877:9;6868:7;6864:23;6860:32;6857:52;;;6905:1;6902;6895:12;6857:52;6937:9;6931:16;6990:5;6983:13;6976:21;6969:5;6966:32;6956:60;;7012:1;7009;7002:12;6956:60;7035:5;6769:277;-1:-1:-1;;;6769:277:74:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFailIncorrectValue(uint256)": "df64143c",
    "testFailTooManyTokens(uint256)": "45a8f0e8",
    "testMint(uint256)": "2f3f94ae"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"testFailIncorrectValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"testFailTooManyTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Hackathon1155.t.sol\":\"Hackathon1155Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/solmate/src/tokens/ERC1155.sol\":{\"keccak256\":\"0x00502c7d7671d9dce495858572943999633ac298f20dbb70476280a93720d412\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://62c6b793ba478e87398fa891a36f936ece0df7f9d4b0d0e1e3a853b8b707c181\",\"dweb:/ipfs/QmeRJVA9f1txCw7JRW31JszJH3a1abQjxJszfF5acsh8sk\"]},\"src/Hackathon1155.sol\":{\"keccak256\":\"0xb1288cb8c9697499c5cbb49bfc9701a926c08aecc009cafb07f8b34ab6b56ade\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c55c51e39ee502263df29815146e3a74ea937821b8b9a073c8a0c9aa51d0e47b\",\"dweb:/ipfs/QmNYpUSWoAXhhjg75NWYzYGqMHNd3CaSRwAUCpyeQy3grD\"]},\"test/Hackathon1155.t.sol\":{\"keccak256\":\"0x0f352080b959f4df983170cdcd3065bf1b5429f4b1c3b86f2bfec35e29e5ce8a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a9f725c363cd12d117acbcde392e71d5ac681039ccd811f9f6b3a4bb48059ce4\",\"dweb:/ipfs/QmPBEd5PtLgSCbaBgRWqTxn8PwHXg5hFqyrpeRzKkKCLDs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailIncorrectValue"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailTooManyTokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMint"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Hackathon1155.t.sol": "Hackathon1155Test"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC1155.sol": {
        "keccak256": "0x00502c7d7671d9dce495858572943999633ac298f20dbb70476280a93720d412",
        "urls": [
          "bzz-raw://62c6b793ba478e87398fa891a36f936ece0df7f9d4b0d0e1e3a853b8b707c181",
          "dweb:/ipfs/QmeRJVA9f1txCw7JRW31JszJH3a1abQjxJszfF5acsh8sk"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Hackathon1155.sol": {
        "keccak256": "0xb1288cb8c9697499c5cbb49bfc9701a926c08aecc009cafb07f8b34ab6b56ade",
        "urls": [
          "bzz-raw://c55c51e39ee502263df29815146e3a74ea937821b8b9a073c8a0c9aa51d0e47b",
          "dweb:/ipfs/QmNYpUSWoAXhhjg75NWYzYGqMHNd3CaSRwAUCpyeQy3grD"
        ],
        "license": "MIT"
      },
      "test/Hackathon1155.t.sol": {
        "keccak256": "0x0f352080b959f4df983170cdcd3065bf1b5429f4b1c3b86f2bfec35e29e5ce8a",
        "urls": [
          "bzz-raw://a9f725c363cd12d117acbcde392e71d5ac681039ccd811f9f6b3a4bb48059ce4",
          "dweb:/ipfs/QmPBEd5PtLgSCbaBgRWqTxn8PwHXg5hFqyrpeRzKkKCLDs"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Hackathon1155.t.sol",
    "id": 41995,
    "exportedSymbols": {
      "Context": [
        37503
      ],
      "DSTest": [
        8256
      ],
      "ERC1155": [
        39635
      ],
      "ERC1155TokenReceiver": [
        39679
      ],
      "Hackathon1155": [
        41093
      ],
      "Hackathon1155Test": [
        41994
      ],
      "Ownable": [
        35008
      ],
      "StdAssertions": [
        9767
      ],
      "StdChains": [
        10461
      ],
      "StdCheats": [
        12712
      ],
      "StdInvariant": [
        13002
      ],
      "StdStorage": [
        13752
      ],
      "StdStyle": [
        16396
      ],
      "StdUtils": [
        17203
      ],
      "Test": [
        17252
      ],
      "TestBase": [
        8316
      ],
      "Vm": [
        18572
      ],
      "console": [
        26636
      ],
      "console2": [
        34732
      ],
      "stdError": [
        12778
      ],
      "stdJson": [
        13578
      ],
      "stdMath": [
        13720
      ],
      "stdStorage": [
        15185
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1626:70",
    "nodes": [
      {
        "id": 41788,
        "nodeType": "PragmaDirective",
        "src": "39:24:70",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 41789,
        "nodeType": "ImportDirective",
        "src": "65:39:70",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "../lib/forge-std/src/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41995,
        "sourceUnit": 17253,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41790,
        "nodeType": "ImportDirective",
        "src": "105:34:70",
        "nodes": [],
        "absolutePath": "src/Hackathon1155.sol",
        "file": "../src/Hackathon1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41995,
        "sourceUnit": 41094,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41994,
        "nodeType": "ContractDefinition",
        "src": "141:1523:70",
        "nodes": [
          {
            "id": 41796,
            "nodeType": "UsingForDirective",
            "src": "182:32:70",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 41793,
              "name": "stdStorage",
              "nameLocations": [
                "188:10:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15185,
              "src": "188:10:70"
            },
            "typeName": {
              "id": 41795,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41794,
                "name": "StdStorage",
                "nameLocations": [
                  "203:10:70"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13752,
                "src": "203:10:70"
              },
              "referencedDeclaration": 13752,
              "src": "203:10:70",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$13752_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 41799,
            "nodeType": "VariableDeclaration",
            "src": "220:25:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "sft",
            "nameLocation": "242:3:70",
            "scope": 41994,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Hackathon1155_$41093",
              "typeString": "contract Hackathon1155"
            },
            "typeName": {
              "id": 41798,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41797,
                "name": "Hackathon1155",
                "nameLocations": [
                  "220:13:70"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41093,
                "src": "220:13:70"
              },
              "referencedDeclaration": 41093,
              "src": "220:13:70",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                "typeString": "contract Hackathon1155"
              }
            },
            "visibility": "private"
          },
          {
            "id": 41801,
            "nodeType": "VariableDeclaration",
            "src": "251:29:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "normalAddress",
            "nameLocation": "267:13:70",
            "scope": 41994,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41800,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "251:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 41803,
            "nodeType": "VariableDeclaration",
            "src": "286:31:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "contractAddress",
            "nameLocation": "302:15:70",
            "scope": 41994,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41802,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 41805,
            "nodeType": "VariableDeclaration",
            "src": "323:31:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deployerAddress",
            "nameLocation": "339:15:70",
            "scope": 41994,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41804,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "323:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 41851,
            "nodeType": "FunctionDefinition",
            "src": "361:310:70",
            "nodes": [],
            "body": {
              "id": 41850,
              "nodeType": "Block",
              "src": "385:286:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41808,
                      "name": "sft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41799,
                      "src": "395:3:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                        "typeString": "contract Hackathon1155"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 41811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "401:17:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$__$returns$_t_contract$_Hackathon1155_$41093_$",
                          "typeString": "function () payable returns (contract Hackathon1155)"
                        },
                        "typeName": {
                          "id": 41810,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41809,
                            "name": "Hackathon1155",
                            "nameLocations": [
                              "405:13:70"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41093,
                            "src": "405:13:70"
                          },
                          "referencedDeclaration": 41093,
                          "src": "405:13:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                            "typeString": "contract Hackathon1155"
                          }
                        }
                      },
                      "id": 41812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "401:19:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                        "typeString": "contract Hackathon1155"
                      }
                    },
                    "src": "395:25:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                      "typeString": "contract Hackathon1155"
                    }
                  },
                  "id": 41814,
                  "nodeType": "ExpressionStatement",
                  "src": "395:25:70"
                },
                {
                  "expression": {
                    "id": 41820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41815,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41803,
                      "src": "430:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 41818,
                          "name": "sft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41799,
                          "src": "456:3:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                            "typeString": "contract Hackathon1155"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                            "typeString": "contract Hackathon1155"
                          }
                        ],
                        "id": 41817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "448:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41816,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:70",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "448:12:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "430:30:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41821,
                  "nodeType": "ExpressionStatement",
                  "src": "430:30:70"
                },
                {
                  "expression": {
                    "id": 41827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41822,
                      "name": "deployerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41805,
                      "src": "470:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307845383938424264373034434345373939653935393361394144653263316341303335314162363630",
                          "id": 41825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "496:42:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xE898BBd704CCE799e9593a9ADe2c1cA0351Ab660"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "488:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41823,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "488:7:70",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "488:51:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "470:69:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41828,
                  "nodeType": "ExpressionStatement",
                  "src": "470:69:70"
                },
                {
                  "expression": {
                    "id": 41834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41829,
                      "name": "normalAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41801,
                      "src": "549:13:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 41832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "573:1:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 41831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "565:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41830,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "565:7:70",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "565:10:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "549:26:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41835,
                  "nodeType": "ExpressionStatement",
                  "src": "549:26:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41839,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41803,
                        "src": "594:15:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 41840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "611:9:70",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41836,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "586:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "589:4:70",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18294,
                      "src": "586:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 41841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:35:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41842,
                  "nodeType": "ExpressionStatement",
                  "src": "586:35:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41846,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41801,
                        "src": "639:13:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 41847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "654:9:70",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41843,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "631:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "634:4:70",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18294,
                      "src": "631:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 41848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "631:33:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41849,
                  "nodeType": "ExpressionStatement",
                  "src": "631:33:70"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "370:5:70",
            "parameters": {
              "id": 41806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:2:70"
            },
            "returnParameters": {
              "id": 41807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:70"
            },
            "scope": 41994,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41888,
            "nodeType": "FunctionDefinition",
            "src": "677:283:70",
            "nodes": [],
            "body": {
              "id": 41887,
              "nodeType": "Block",
              "src": "734:226:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 41867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41859,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41853,
                            "src": "754:8:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 41860,
                                "name": "sft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41799,
                                "src": "765:3:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                                  "typeString": "contract Hackathon1155"
                                }
                              },
                              "id": 41861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "769:15:70",
                              "memberName": "maxTokensPerTxn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40957,
                              "src": "765:19:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 41862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "765:21:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "754:32:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41864,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41853,
                            "src": "790:8:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 41865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "801:1:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "790:12:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "754:48:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 41856,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "744:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "747:6:70",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18210,
                      "src": "744:9:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 41868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:59:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41869,
                  "nodeType": "ExpressionStatement",
                  "src": "744:59:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41873,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41801,
                        "src": "822:13:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41870,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "813:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "816:5:70",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18265,
                      "src": "813:8:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:23:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41875,
                  "nodeType": "ExpressionStatement",
                  "src": "813:23:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41883,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41853,
                        "src": "941:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 41884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "951:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 41876,
                          "name": "sft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41799,
                          "src": "899:3:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                            "typeString": "contract Hackathon1155"
                          }
                        },
                        "id": 41878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "903:4:70",
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41025,
                        "src": "899:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) payable external"
                        }
                      },
                      "id": 41882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "302e3030303032",
                            "id": 41879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "915:13:70",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20000000000000_by_1",
                              "typeString": "int_const 20000000000000"
                            },
                            "value": "0.00002"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 41880,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41853,
                            "src": "931:8:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "915:24:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "899:41:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256,uint256) payable external"
                      }
                    },
                    "id": 41885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "899:54:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41886,
                  "nodeType": "ExpressionStatement",
                  "src": "899:54:70"
                }
              ]
            },
            "functionSelector": "df64143c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailIncorrectValue",
            "nameLocation": "686:22:70",
            "parameters": {
              "id": 41854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41853,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "717:8:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41888,
                  "src": "709:16:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "708:18:70"
            },
            "returnParameters": {
              "id": 41855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:0:70"
            },
            "scope": 41994,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41931,
            "nodeType": "FunctionDefinition",
            "src": "966:325:70",
            "nodes": [],
            "body": {
              "id": 41930,
              "nodeType": "Block",
              "src": "1022:269:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 41904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41896,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41890,
                            "src": "1042:8:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 41897,
                                "name": "sft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41799,
                                "src": "1053:3:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                                  "typeString": "contract Hackathon1155"
                                }
                              },
                              "id": 41898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1057:15:70",
                              "memberName": "maxTokensPerTxn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40957,
                              "src": "1053:19:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 41899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1053:21:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1042:32:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41901,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41890,
                            "src": "1078:8:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 41902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1089:3:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1078:14:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1042:50:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 41893,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1032:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1035:6:70",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18210,
                      "src": "1032:9:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 41905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:61:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41906,
                  "nodeType": "ExpressionStatement",
                  "src": "1032:61:70"
                },
                {
                  "assignments": [
                    41908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41908,
                      "mutability": "mutable",
                      "name": "salePrice",
                      "nameLocation": "1111:9:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 41930,
                      "src": "1103:17:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41907,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1103:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41912,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41909,
                        "name": "sft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41799,
                        "src": "1123:3:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                          "typeString": "contract Hackathon1155"
                        }
                      },
                      "id": 41910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1127:9:70",
                      "memberName": "salePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40954,
                      "src": "1123:13:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 41911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1123:15:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1103:35:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41916,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41801,
                        "src": "1158:13:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41913,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1149:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1152:5:70",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18265,
                      "src": "1149:8:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1149:23:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41918,
                  "nodeType": "ExpressionStatement",
                  "src": "1149:23:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41926,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41890,
                        "src": "1272:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 41927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1282:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 41919,
                          "name": "sft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41799,
                          "src": "1234:3:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                            "typeString": "contract Hackathon1155"
                          }
                        },
                        "id": 41921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1238:4:70",
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41025,
                        "src": "1234:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) payable external"
                        }
                      },
                      "id": 41925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41922,
                            "name": "salePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41908,
                            "src": "1250:9:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 41923,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41890,
                            "src": "1262:8:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1250:20:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1234:37:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256,uint256) payable external"
                      }
                    },
                    "id": 41928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1234:50:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41929,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:50:70"
                }
              ]
            },
            "functionSelector": "45a8f0e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailTooManyTokens",
            "nameLocation": "975:21:70",
            "parameters": {
              "id": 41891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41890,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "1005:8:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41931,
                  "src": "997:16:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "996:18:70"
            },
            "returnParameters": {
              "id": 41892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1022:0:70"
            },
            "scope": 41994,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41993,
            "nodeType": "FunctionDefinition",
            "src": "1297:365:70",
            "nodes": [],
            "body": {
              "id": 41992,
              "nodeType": "Block",
              "src": "1340:322:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41939,
                        "name": "normalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41801,
                        "src": "1364:13:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41936,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1350:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1353:10:70",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18270,
                      "src": "1350:13:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:28:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41941,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:28:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41945,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41801,
                            "src": "1412:13:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 41946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1427:1:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 41943,
                            "name": "sft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41799,
                            "src": "1398:3:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                              "typeString": "contract Hackathon1155"
                            }
                          },
                          "id": 41944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1402:9:70",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39049,
                          "src": "1398:13:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 41947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1398:31:70",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 41948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1431:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 41942,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 6984,
                      "src": "1389:8:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 41949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1389:44:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41950,
                  "nodeType": "ExpressionStatement",
                  "src": "1389:44:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 41962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41954,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41933,
                            "src": "1454:8:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 41955,
                                "name": "sft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41799,
                                "src": "1465:3:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                                  "typeString": "contract Hackathon1155"
                                }
                              },
                              "id": 41956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1469:15:70",
                              "memberName": "maxTokensPerTxn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40957,
                              "src": "1465:19:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 41957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1465:21:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1454:32:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41959,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41933,
                            "src": "1490:8:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 41960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1501:1:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1490:12:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1454:48:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 41951,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1444:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1447:6:70",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18210,
                      "src": "1444:9:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 41963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:59:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41964,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:59:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41974,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41933,
                        "src": "1557:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 41975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1567:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 41965,
                          "name": "sft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41799,
                          "src": "1513:3:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                            "typeString": "contract Hackathon1155"
                          }
                        },
                        "id": 41967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1517:4:70",
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41025,
                        "src": "1513:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) payable external"
                        }
                      },
                      "id": 41973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 41968,
                                "name": "sft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41799,
                                "src": "1529:3:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                                  "typeString": "contract Hackathon1155"
                                }
                              },
                              "id": 41969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1533:9:70",
                              "memberName": "salePrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40954,
                              "src": "1529:13:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 41970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1529:15:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 41971,
                            "name": "quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41933,
                            "src": "1547:8:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1529:26:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1513:43:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256,uint256) payable external"
                      }
                    },
                    "id": 41976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:56:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41977,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:56:70"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41981,
                            "name": "normalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41801,
                            "src": "1603:13:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 41982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1618:1:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 41979,
                            "name": "sft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41799,
                            "src": "1589:3:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hackathon1155_$41093",
                              "typeString": "contract Hackathon1155"
                            }
                          },
                          "id": 41980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1593:9:70",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39049,
                          "src": "1589:13:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 41983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1589:31:70",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 41984,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41933,
                        "src": "1622:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41978,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8484,
                        8509,
                        8522,
                        8538,
                        8580,
                        8622,
                        8664,
                        8701,
                        8738,
                        8775,
                        6790,
                        6815,
                        6845,
                        6870,
                        6929,
                        6954,
                        6984,
                        7009,
                        8109,
                        8144
                      ],
                      "referencedDeclaration": 6984,
                      "src": "1580:8:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 41985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1580:51:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41986,
                  "nodeType": "ExpressionStatement",
                  "src": "1580:51:70"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41987,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8309,
                        "src": "1641:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18572",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1644:9:70",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18287,
                      "src": "1641:12:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 41990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1641:14:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41991,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:14:70"
                }
              ]
            },
            "functionSelector": "2f3f94ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nameLocation": "1306:8:70",
            "parameters": {
              "id": 41934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41933,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "1323:8:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 41993,
                  "src": "1315:16:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1314:18:70"
            },
            "returnParameters": {
              "id": 41935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1340:0:70"
            },
            "scope": 41994,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41791,
              "name": "Test",
              "nameLocations": [
                "171:4:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17252,
              "src": "171:4:70"
            },
            "id": 41792,
            "nodeType": "InheritanceSpecifier",
            "src": "171:4:70"
          }
        ],
        "canonicalName": "Hackathon1155Test",
        "contractDependencies": [
          41093
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41994,
          17252,
          8316,
          8313,
          17203,
          13002,
          12712,
          12033,
          10461,
          9767,
          8256
        ],
        "name": "Hackathon1155Test",
        "nameLocation": "150:17:70",
        "scope": 41995,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 70
}