{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "/Users/devlyndorfer/Documents/code/evm-hackathon-starter-kit/client/contracts",
    "build_infos": "/Users/devlyndorfer/Documents/code/evm-hackathon-starter-kit/client/contracts/build-info",
    "sources": "src",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "lib/account-abstraction/contracts/bls/BLSHelper.sol": {
      "lastModificationDate": 1681360101612,
      "contentHash": "2b68cadb84604e1c1c066819be14750f",
      "sourceName": "lib/account-abstraction/contracts/bls/BLSHelper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "BLSHelper": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BLSHelper.sol/BLSHelper.json"
        }
      }
    },
    "lib/account-abstraction/contracts/bls/BLSSignatureAggregator.sol": {
      "lastModificationDate": 1681476906000,
      "contentHash": "ceb60e5d59a6dcd786f4132834aa73f2",
      "sourceName": "lib/account-abstraction/contracts/bls/BLSSignatureAggregator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/bls/BLSHelper.sol",
        "lib/account-abstraction/contracts/bls/IBLSAccount.sol",
        "lib/account-abstraction/contracts/bls/lib/BLSOpen.sol",
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BLS.sol",
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BNPairingPrecompileCostEstimator.sol",
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/ModExp.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregatedAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": ">=0.8.4, <0.9.0",
      "artifacts": {
        "BLSSignatureAggregator": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BLSSignatureAggregator.sol/BLSSignatureAggregator.json"
        }
      }
    },
    "lib/account-abstraction/contracts/bls/IBLSAccount.sol": {
      "lastModificationDate": 1681476906000,
      "contentHash": "cc31740f12d33858259e18a6c341d82c",
      "sourceName": "lib/account-abstraction/contracts/bls/IBLSAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregatedAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": ">=0.7.6",
      "artifacts": {
        "IBLSAccount": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IBLSAccount.sol/IBLSAccount.json"
        }
      }
    },
    "lib/account-abstraction/contracts/bls/lib/BLSOpen.sol": {
      "lastModificationDate": 1681360101612,
      "contentHash": "400b3a62e88e745334a62bc8179732ad",
      "sourceName": "lib/account-abstraction/contracts/bls/lib/BLSOpen.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BLS.sol",
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BNPairingPrecompileCostEstimator.sol",
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/ModExp.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "BLSOpen": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BLSOpen.sol/BLSOpen.json"
        }
      }
    },
    "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BLS.sol": {
      "lastModificationDate": 1681360101613,
      "contentHash": "d92df49e4184b24da17413ab9ea31e4b",
      "sourceName": "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BLS.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BNPairingPrecompileCostEstimator.sol",
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/ModExp.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "BLS": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BLS.sol/BLS.json"
        }
      }
    },
    "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BNPairingPrecompileCostEstimator.sol": {
      "lastModificationDate": 1681360101613,
      "contentHash": "1e935d3450d1069c5b923f0dee20925e",
      "sourceName": "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BNPairingPrecompileCostEstimator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.12",
      "artifacts": {
        "BNPairingPrecompileCostEstimator": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BNPairingPrecompileCostEstimator.sol/BNPairingPrecompileCostEstimator.json"
        }
      }
    },
    "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/ModExp.sol": {
      "lastModificationDate": 1681360101613,
      "contentHash": "752f7f550d91a76ef82dc3b49654d6ce",
      "sourceName": "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/ModExp.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {
        "ModexpInverse": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ModExp.sol/ModexpInverse.json"
        },
        "ModexpSqrt": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ModExp.sol/ModexpSqrt.json"
        }
      }
    },
    "lib/account-abstraction/contracts/core/BaseAccount.sol": {
      "lastModificationDate": 1681501326000,
      "contentHash": "1c2b0d0171d6e7c90c2090ff4c47a80d",
      "sourceName": "lib/account-abstraction/contracts/core/BaseAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "BaseAccount": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BaseAccount.sol/BaseAccount.json"
        }
      }
    },
    "lib/account-abstraction/contracts/core/BasePaymaster.sol": {
      "lastModificationDate": 1681476906000,
      "contentHash": "25b32f890f0b19f31cec3b8fe553538c",
      "sourceName": "lib/account-abstraction/contracts/core/BasePaymaster.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "BasePaymaster": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BasePaymaster.sol/BasePaymaster.json"
        }
      }
    },
    "lib/account-abstraction/contracts/core/EntryPoint.sol": {
      "lastModificationDate": 1681517814000,
      "contentHash": "f53f1aa2ae38c91ac9e1602b9e01ee40",
      "sourceName": "lib/account-abstraction/contracts/core/EntryPoint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/account-abstraction/contracts/core/SenderCreator.sol",
        "lib/account-abstraction/contracts/core/StakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/account-abstraction/contracts/utils/Exec.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "EntryPoint": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "EntryPoint.sol/EntryPoint.json"
        }
      }
    },
    "lib/account-abstraction/contracts/core/Helpers.sol": {
      "lastModificationDate": 1681499043000,
      "contentHash": "57a3ae03632f5b28239fea9e8cf13870",
      "sourceName": "lib/account-abstraction/contracts/core/Helpers.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "Helpers": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Helpers.sol/Helpers.json"
        }
      }
    },
    "lib/account-abstraction/contracts/core/SenderCreator.sol": {
      "lastModificationDate": 1681499077000,
      "contentHash": "f2edd764760fdea0db77faa778ea8e69",
      "sourceName": "lib/account-abstraction/contracts/core/SenderCreator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "SenderCreator": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SenderCreator.sol/SenderCreator.json"
        }
      }
    },
    "lib/account-abstraction/contracts/core/StakeManager.sol": {
      "lastModificationDate": 1681499093000,
      "contentHash": "790f15337f48b3085cd53cfbd158be9c",
      "sourceName": "lib/account-abstraction/contracts/core/StakeManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "StakeManager": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StakeManager.sol/StakeManager.json"
        }
      }
    },
    "lib/account-abstraction/contracts/interfaces/IAccount.sol": {
      "lastModificationDate": 1681499134000,
      "contentHash": "3f7d09c6e99c4fc3a723c18acf69a617",
      "sourceName": "lib/account-abstraction/contracts/interfaces/IAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IAccount": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IAccount.sol/IAccount.json"
        }
      }
    },
    "lib/account-abstraction/contracts/interfaces/IAggregatedAccount.sol": {
      "lastModificationDate": 1681476906000,
      "contentHash": "013db3bd8c94cca8e1297103e6b5dbac",
      "sourceName": "lib/account-abstraction/contracts/interfaces/IAggregatedAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IAggregatedAccount": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IAggregatedAccount.sol/IAggregatedAccount.json"
        }
      }
    },
    "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
      "lastModificationDate": 1681499161000,
      "contentHash": "6ac560d4214325201d2d206075b4d6c7",
      "sourceName": "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IAggregator": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IAggregator.sol/IAggregator.json"
        }
      }
    },
    "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
      "lastModificationDate": 1681499201000,
      "contentHash": "70e89f6974a186fabe38a0f9b8a8297b",
      "sourceName": "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IEntryPoint": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IEntryPoint.sol/IEntryPoint.json"
        }
      }
    },
    "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
      "lastModificationDate": 1681499210000,
      "contentHash": "6248be412359be65b4cf8bef4d1808fd",
      "sourceName": "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IPaymaster": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IPaymaster.sol/IPaymaster.json"
        }
      }
    },
    "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
      "lastModificationDate": 1681498906000,
      "contentHash": "459fb26b3301bff550d65bc07c3a37f2",
      "sourceName": "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IStakeManager": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IStakeManager.sol/IStakeManager.json"
        }
      }
    },
    "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
      "lastModificationDate": 1681498893000,
      "contentHash": "f96ce59f5d815a6dce5ef50b6b255c27",
      "sourceName": "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "UserOperationLib": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UserOperation.sol/UserOperationLib.json"
        }
      }
    },
    "lib/account-abstraction/contracts/samples/SimpleAccount.sol": {
      "lastModificationDate": 1681500855000,
      "contentHash": "a3b9c44d16f77c80cfdc02a0f6d62150",
      "sourceName": "lib/account-abstraction/contracts/samples/SimpleAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "SimpleAccount": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SimpleAccount.sol/SimpleAccount.json"
        }
      }
    },
    "lib/account-abstraction/contracts/utils/Exec.sol": {
      "lastModificationDate": 1681498748000,
      "contentHash": "797f7181008d5286649c3edde160d966",
      "sourceName": "lib/account-abstraction/contracts/utils/Exec.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.5, <0.9.0",
      "artifacts": {
        "Exec": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Exec.sol/Exec.json"
        }
      }
    },
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1680475932242,
      "contentHash": "abdafe4b187f548ef0145173f5b93247",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "test.sol/DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1680475931642,
      "contentHash": "8f04bbbb2c16f79e14fdc321695a8ec2",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/TestBase.json"
        }
      }
    },
    "lib/forge-std/src/Script.sol": {
      "lastModificationDate": 1680475931642,
      "contentHash": "83c39354c1e43190bce4dc43860dc786",
      "sourceName": "lib/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Script.sol/Script.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1680475932266,
      "contentHash": "9de0f799a1b1664749ddd6ce6492eae1",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1680475932266,
      "contentHash": "f73fef006f384b898c755b0e404b84a2",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdChains.sol/StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1680475932266,
      "contentHash": "77e0d7b6fd1fb0b20dc96c166f2d8e8c",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1680475931642,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdError.sol/stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1680475931642,
      "contentHash": "12c06010ec43ce935ed209d5aca30828",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdInvariant.sol/StdInvariant.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1680475931643,
      "contentHash": "2e1d13674e152408867795362d833c24",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdJson.sol/stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1680475931643,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdMath.sol/stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1680475931643,
      "contentHash": "3cb9868082df39a53927db09dbc21f23",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1680475931643,
      "contentHash": "820e6f6b7704f0c980fae604b1e34b18",
      "sourceName": "lib/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStyle.sol/StdStyle.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1680475932267,
      "contentHash": "45fc08daaa17b7908fa5de7d758d8c86",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1680475931643,
      "contentHash": "bc9d74a0c612e1c2b66cca2973bcc803",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Test.sol/Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1680475932267,
      "contentHash": "f4eae1ed3732746674ff1a4c48c0be05",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Vm.sol/VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1680475931644,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1680475931644,
      "contentHash": "2096b4e5f252c5df9909cccbe3d2da2e",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "console2.sol/console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1680475931644,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "lastModificationDate": 1680475791607,
      "contentHash": "e436cea06129be2c73cda4b1acc848b5",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Ownable.sol/Ownable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
      "lastModificationDate": 1680475789474,
      "contentHash": "2858d98e74e67987ec81b39605230b74",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1822Proxiable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "draft-IERC1822.sol/IERC1822Proxiable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
      "lastModificationDate": 1680475791617,
      "contentHash": "6baa887a798e95b14f34e093f117e9b2",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "ERC1967Upgrade": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC1967Upgrade.sol/ERC1967Upgrade.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
      "lastModificationDate": 1680475789480,
      "contentHash": "b6bd23bf19e90b771337037706470933",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IBeacon": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IBeacon.sol/IBeacon.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1680475791618,
      "contentHash": "19c4fbc3e825d25231b09f13aff9a2b2",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "Initializable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Initializable.sol/Initializable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol": {
      "lastModificationDate": 1680475791618,
      "contentHash": "72741fcafc308d461962c96309d81342",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UUPSUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UUPSUpgradeable.sol/UUPSUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
      "lastModificationDate": 1680475791620,
      "contentHash": "f7f4f78c31f28534852e5c56000a25af",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721/ERC721.sol/ERC721.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "lastModificationDate": 1680475791620,
      "contentHash": "eb7e61db29f31d88b3c1cef1b063d338",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721.sol/IERC721.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
      "lastModificationDate": 1680475789485,
      "contentHash": "c22d4395e33763de693fd440c6fd10e1",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Receiver": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721Receiver.sol/IERC721Receiver.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
      "lastModificationDate": 1680475789485,
      "contentHash": "212e86880d210b6cac8c3eb0cd6b1fad",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721Enumerable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721Enumerable.sol/ERC721Enumerable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
      "lastModificationDate": 1680475789486,
      "contentHash": "f4dd06783f321aa26179bc2b6e361c29",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Enumerable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721Enumerable.sol/IERC721Enumerable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "lastModificationDate": 1680475789486,
      "contentHash": "efbc0d15b80a74e34dbe8da0f3e879bb",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Metadata": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721Metadata.sol/IERC721Metadata.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "lastModificationDate": 1680475791622,
      "contentHash": "f31ad6fc4bbf9c06203987220156a6ba",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "Address": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Address.sol/Address.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
      "lastModificationDate": 1680475789487,
      "contentHash": "8f868da0a90e46a85baa348a896d1702",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Base64": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base64.sol/Base64.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "lastModificationDate": 1680475789488,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Context.sol/Context.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
      "lastModificationDate": 1680475791622,
      "contentHash": "f993f8f50186952a59ee5e3a30b68222",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StorageSlot": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StorageSlot.sol/StorageSlot.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "lastModificationDate": 1680475791622,
      "contentHash": "396031251978f8febfd90cb62cb240ec",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Strings": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Strings.sol/Strings.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
      "lastModificationDate": 1680475791623,
      "contentHash": "fe1190dbb6431c2464246925713f0f7f",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ECDSA": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ECDSA.sol/ECDSA.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
      "lastModificationDate": 1680475789489,
      "contentHash": "0e7db055ce108f9da7bb6686a00287c0",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC165.sol/ERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1680475789489,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC165.sol/IERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1680475791624,
      "contentHash": "b9c58920ce74d6dc819161786112e7ee",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Math": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Math.sol/Math.json"
        }
      }
    },
    "lib/solmate/src/tokens/ERC1155.sol": {
      "lastModificationDate": 1680475687605,
      "contentHash": "558676409e429f6c4f2deef39106e3c0",
      "sourceName": "lib/solmate/src/tokens/ERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {
        "ERC1155": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC1155.sol/ERC1155.json"
        },
        "ERC1155TokenReceiver": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC1155.sol/ERC1155TokenReceiver.json"
        }
      }
    },
    "script/AirdropNFTScript.s.sol": {
      "lastModificationDate": 1681536300808,
      "contentHash": "e930b3628dfd9e547f8fb052d0869a82",
      "sourceName": "script/AirdropNFTScript.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/core/EntryPoint.sol",
        "lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/account-abstraction/contracts/core/SenderCreator.sol",
        "lib/account-abstraction/contracts/core/StakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/account-abstraction/contracts/samples/SimpleAccount.sol",
        "lib/account-abstraction/contracts/utils/Exec.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "AirdropNFT": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AirdropNFTScript.s.sol/AirdropNFT.json"
        }
      }
    },
    "script/CreateContractAccount.s.sol": {
      "lastModificationDate": 1681541261907,
      "contentHash": "a1d1c77b3ce6fe5a55472d194c22024a",
      "sourceName": "script/CreateContractAccount.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/core/EntryPoint.sol",
        "lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/account-abstraction/contracts/core/SenderCreator.sol",
        "lib/account-abstraction/contracts/core/StakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/account-abstraction/contracts/samples/SimpleAccount.sol",
        "lib/account-abstraction/contracts/utils/Exec.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "CreateContractAccount": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CreateContractAccount.s.sol/CreateContractAccount.json"
        },
        "SimpleAccountNFTReceiver": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CreateContractAccount.s.sol/SimpleAccountNFTReceiver.json"
        }
      }
    },
    "script/DeployPaymaster.s.sol": {
      "lastModificationDate": 1681581521002,
      "contentHash": "df4b6d515787fdcf194e35704f285d51",
      "sourceName": "script/DeployPaymaster.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/core/EntryPoint.sol",
        "lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/account-abstraction/contracts/core/SenderCreator.sol",
        "lib/account-abstraction/contracts/core/StakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/account-abstraction/contracts/samples/SimpleAccount.sol",
        "lib/account-abstraction/contracts/utils/Exec.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "DeployPaymasterScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployPaymaster.s.sol/DeployPaymasterScript.json"
        }
      }
    },
    "script/DeployPaymasterByHelper.s.sol": {
      "lastModificationDate": 1681581521002,
      "contentHash": "b94e4d688fe45484415b98746a8db7c9",
      "sourceName": "script/DeployPaymasterByHelper.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/account-abstraction/contracts/samples/SimpleAccount.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol",
        "src/SetupHelper.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "DeployPaymasterByHelperScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployPaymasterByHelper.s.sol/DeployPaymasterByHelperScript.json"
        }
      }
    },
    "script/DeploySetupHelper.sol": {
      "lastModificationDate": 1681581521002,
      "contentHash": "2d93edb4e993ce9a03e46121a325c837",
      "sourceName": "script/DeploySetupHelper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/core/EntryPoint.sol",
        "lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/account-abstraction/contracts/core/SenderCreator.sol",
        "lib/account-abstraction/contracts/core/StakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/account-abstraction/contracts/samples/SimpleAccount.sol",
        "lib/account-abstraction/contracts/utils/Exec.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol",
        "src/SetupHelper.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "DeploySetupHelperScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeploySetupHelper.sol/DeploySetupHelperScript.json"
        }
      }
    },
    "script/HackathonPaymaster.s.sol": {
      "lastModificationDate": 1681551705793,
      "contentHash": "58b6794a9cd1e8126511af43193e080e",
      "sourceName": "script/HackathonPaymaster.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "MyScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "HackathonPaymaster.s.sol/MyScript.json"
        }
      }
    },
    "script/MintNFT.s.sol": {
      "lastModificationDate": 1681541261907,
      "contentHash": "3727e32353e7bb298a68e5c01a47b712",
      "sourceName": "script/MintNFT.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/core/EntryPoint.sol",
        "lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/account-abstraction/contracts/core/SenderCreator.sol",
        "lib/account-abstraction/contracts/core/StakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/account-abstraction/contracts/samples/SimpleAccount.sol",
        "lib/account-abstraction/contracts/utils/Exec.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "MintNFTScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MintNFT.s.sol/MintNFTScript.json"
        },
        "SimpleAccountNFTReceiver": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MintNFT.s.sol/SimpleAccountNFTReceiver.json"
        }
      }
    },
    "script/SetupDaypass.s.sol": {
      "lastModificationDate": 1681581521002,
      "contentHash": "6d3f4843f5d05ceefa3e28435f7c221a",
      "sourceName": "script/SetupDaypass.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/core/EntryPoint.sol",
        "lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/account-abstraction/contracts/core/SenderCreator.sol",
        "lib/account-abstraction/contracts/core/StakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/account-abstraction/contracts/samples/SimpleAccount.sol",
        "lib/account-abstraction/contracts/utils/Exec.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol",
        "src/SetupHelper.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "SetupDayPassScript": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetupDaypass.s.sol/SetupDayPassScript.json"
        }
      }
    },
    "src/Hackathon1155.sol": {
      "lastModificationDate": 1680477528250,
      "contentHash": "053d2c47f5c5823bb55944f0f0837a51",
      "sourceName": "src/Hackathon1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/solmate/src/tokens/ERC1155.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "Hackathon1155": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Hackathon1155.sol/Hackathon1155.json"
        }
      }
    },
    "src/Hackathon721.sol": {
      "lastModificationDate": 1681555468392,
      "contentHash": "6a6750394f9e99a26f37d636dd039cec",
      "sourceName": "src/Hackathon721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "Hackathon721": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Hackathon721.sol/Hackathon721.json"
        }
      }
    },
    "src/HackathonPaymaster.sol": {
      "lastModificationDate": 1681587677330,
      "contentHash": "9101561bf6c7af4a7f4cfc5c185350ea",
      "sourceName": "src/HackathonPaymaster.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "HackathonPaymaster": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "HackathonPaymaster.sol/HackathonPaymaster.json"
        }
      }
    },
    "src/SetupHelper.sol": {
      "lastModificationDate": 1681581521003,
      "contentHash": "123a3c28a3d4b383cbf4497d8c734ff1",
      "sourceName": "src/SetupHelper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "SetupHelper": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetupHelper.sol/SetupHelper.json"
        }
      }
    },
    "test/Hackathon1155.t.sol": {
      "lastModificationDate": 1681360146111,
      "contentHash": "c6c1cb0f6c797f058f3f3b86e8178c32",
      "sourceName": "test/Hackathon1155.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/solmate/src/tokens/ERC1155.sol",
        "src/Hackathon1155.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "Hackathon1155Test": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Hackathon1155.t.sol/Hackathon1155Test.json"
        }
      }
    },
    "test/Hackathon721.t.sol": {
      "lastModificationDate": 1681551705793,
      "contentHash": "13317e5f35f213aab298a2e6bd4b1a15",
      "sourceName": "test/Hackathon721.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "Hackathon721Test": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Hackathon721.t.sol/Hackathon721Test.json"
        }
      }
    },
    "test/HackathonPaymaster.t.sol": {
      "lastModificationDate": 1681581521003,
      "contentHash": "9b71f239dda2416e3ce88e751b62822d",
      "sourceName": "test/HackathonPaymaster.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/bls/BLSHelper.sol",
        "lib/account-abstraction/contracts/bls/BLSSignatureAggregator.sol",
        "lib/account-abstraction/contracts/bls/IBLSAccount.sol",
        "lib/account-abstraction/contracts/bls/lib/BLSOpen.sol",
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BLS.sol",
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/BNPairingPrecompileCostEstimator.sol",
        "lib/account-abstraction/contracts/bls/lib/hubble-contracts/contracts/libs/ModExp.sol",
        "lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/core/EntryPoint.sol",
        "lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/account-abstraction/contracts/core/SenderCreator.sol",
        "lib/account-abstraction/contracts/core/StakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregatedAccount.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/account-abstraction/contracts/samples/SimpleAccount.sol",
        "lib/account-abstraction/contracts/utils/Exec.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "HackathonPaymasterTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "HackathonPaymaster.t.sol/HackathonPaymasterTest.json"
        },
        "SimpleAccountNFTReceiver": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "HackathonPaymaster.t.sol/SimpleAccountNFTReceiver.json"
        }
      }
    },
    "test/SetupHelper.t.sol": {
      "lastModificationDate": 1681581521004,
      "contentHash": "3b64f3601c20aac0c1c83e5fb2353268",
      "sourceName": "test/SetupHelper.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "src/Hackathon721.sol",
        "src/HackathonPaymaster.sol",
        "src/SetupHelper.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "SetupHelperTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetupHelper.t.sol/SetupHelperTest.json"
        }
      }
    }
  }
}